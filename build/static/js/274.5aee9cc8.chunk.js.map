{"version":3,"file":"static/js/274.5aee9cc8.chunk.js","mappings":"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","sources":["components/Button.js","components/Modals/ExamModal.js","components/Modals/TokenExpire.js","createAxiosJWT.js","components/Student/ExamCard.js","pages/StudentPages/StudentExams.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({ children, className = '', ...rest }) => {\r\n    return (\r\n        <button\r\n            className={`bg-primary py-2 px-5 rounded-lg border-2 text-white transition-all active:scale-90 cursor-pointer select-none hover:bg-opacity-90 text-center border-none ${className} `}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport moment from 'moment'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from '../../constant'\r\nimport TokenExpire from './TokenExpire'\r\nimport Button from '../Button'\r\nimport { StudentContext } from '../../Context/StudentContext'\r\nimport { useContext } from 'react'\r\nimport createAxiosJWT from '../../createAxiosJWT' \r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst customStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n  },\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    overflow: 'unset !important',\r\n  },\r\n}\r\n\r\nconst ExamModal = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  val,\r\n  isParent,\r\n  classPage,\r\n  viewStudentResult,\r\n}) => {\r\n  const navigate = useNavigate()\r\n  const studentContext = useContext(StudentContext)\r\n\r\n  const [isExpired, setIsExpired] = useState(false)\r\n\r\n  const handleCancel = () => {\r\n    setIsOpen(false)\r\n  }\r\n  console.log(viewStudentResult)\r\n\r\n  const handleDoAssignment = async (assignmentId, temp) => {\r\n    try {\r\n      if (temp === 'start')\r\n        await axiosJWT.put(\r\n          API_URL +\r\n            `student-assignment/student/assignment/${assignmentId}/start`,\r\n        )\r\n      navigate(`/assignment/${assignmentId}/question/`)\r\n    } catch (error) {\r\n      console.log(error)\r\n      if (error.response.status === 401) setIsExpired(true)\r\n    }\r\n  }\r\n\r\n  const renderAssignmentButton = () => {\r\n    if (val?.numberQuestionOfAssignment === 0) {\r\n      return <></>\r\n    }\r\n    if (classPage) {\r\n      if (isParent) {\r\n        return val?.assignment?.studentAssignment[0]?.dateComplete ? (\r\n          <Button\r\n            onClick={() => {\r\n              navigate(`/assignment/${val?.assignment.id}/result`)\r\n            }}\r\n          >\r\n            View Result\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n      return val?.assignment?.studentAssignment[0]?.dateComplete ? (\r\n        <Button\r\n          onClick={() => {\r\n            navigate(`/assignment/${val?.assignment.id}/result`)\r\n          }}\r\n        >\r\n          View Result\r\n        </Button>\r\n      ) : !val?.assignment?.studentAssignment[0]?.dateEnd ? (\r\n        <Button onClick={() => handleDoAssignment(val?.assignment.id, 'start')}>\r\n          Do Assignment\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          onClick={() => handleDoAssignment(val?.assignment.id, 'continue')}\r\n        >\r\n          Continue Assignment\r\n        </Button>\r\n      )\r\n    }\r\n    if (viewStudentResult) {\r\n      return val?.assignment?.studentAssignment[0]?.dateComplete ? (\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\r\n              `/assignment/${val?.assignment.id}/student/${studentContext?.studentInfo?.id}`,\r\n            )\r\n          }}\r\n        >\r\n          View Result\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )\r\n    }\r\n    if (isParent) {\r\n      return val?.dateComplete ? (\r\n        <Button\r\n          onClick={() => {\r\n            navigate(`/assignment/${val?.assignment.id}/result`)\r\n          }}\r\n        >\r\n          View Result\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )\r\n    }\r\n    return val?.dateComplete ? (\r\n      <Button\r\n        onClick={() => {\r\n          navigate(`/assignment/${val?.assignment.id}/result`)\r\n        }}\r\n      >\r\n        View Result\r\n      </Button>\r\n    ) : !val?.dateEnd ? (\r\n      <Button onClick={() => handleDoAssignment(val?.assignment.id, 'start')}>\r\n        Do Assignment\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        onClick={() => handleDoAssignment(val?.assignment.id, 'continue')}\r\n      >\r\n        Continue Assignment\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  const renderStatus = () => {\r\n    if (classPage) {\r\n      if (val?.assignment?.studentAssignment[0]?.dateComplete) {\r\n        return `Submitted on ${moment(\r\n          val?.assignment?.studentAssignment[0]?.dateComplete,\r\n        ).format('hh:mm DD/MM/YYYY')}`\r\n      }\r\n      return `Not submitted`\r\n    }\r\n    if (val?.dateComplete) {\r\n      return `Submitted on ${moment(val?.dateComplete).format(\r\n        'hh:mm DD/MM/YYYY',\r\n      )}`\r\n    }\r\n    if (!val?.dateComplete) {\r\n      return `Not submitted`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      style={customStyles}\r\n      contentLabel=\"Example Modal\"\r\n      ariaHideApp={false}\r\n    >\r\n      <div className=\"flex flex-col gap-4 w-[500px] text-gray-500\">\r\n        <span className=\"text-2xl font-medium text-primary whitespace-normal break-words w-full\">\r\n          {val?.assignment.assignmentName}\r\n        </span>\r\n        <div className=\"flex flex-row \">\r\n          <div className=\"flex flex-row gap-3 items-center w-[50%]\">\r\n            <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n              <i className=\"fa-regular fa-clock text-primary\"></i>\r\n            </div>\r\n            <span>{val?.assignment.doTime} mins</span>\r\n          </div>\r\n          <div className=\"flex flex-row gap-3 items-center \">\r\n            <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n              <i className=\"fa-regular fa-calendar text-primary\"></i>{' '}\r\n            </div>\r\n            <span>\r\n              {moment(val?.assignment.dateDue).format('HH:mm DD/MM/YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row \">\r\n          {val?.numberQuestionOfAssignment && (\r\n            <div className=\"flex flex-row gap-3 items-center w-[50%]\">\r\n              <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n                <i className=\"fa-solid fa-clipboard-question text-primary\"></i>\r\n              </div>\r\n              <span>{val?.numberQuestionOfAssignment} question</span>\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-row gap-3 items-center\">\r\n            <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n              <i className=\"fa-regular fa-star text-primary\"></i>\r\n            </div>\r\n            <span>\r\n              Pass score : {val?.assignment.passScore}/\r\n              {val?.assignment.totalScore}{' '}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row gap-3 items-center\">\r\n          <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n            <i className=\"fa-brands fa-cloudsmith text-primary\"></i>\r\n          </div>\r\n          <span className=\" text-gray-500\">{renderStatus()}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-row-reverse mt-5 gap-5\">\r\n        <Button onClick={handleCancel}>Cancel</Button>\r\n        {renderAssignmentButton()}\r\n      </div>\r\n      <TokenExpire isOpen={isExpired} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ExamModal\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\nimport Button from '../Button';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\nconst TokenExpire = ({ isOpen }) => {\r\n    const customStyles = {\r\n        overlay: {\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n        },\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n        },\r\n    };\r\n    const navigate = useNavigate();\r\n    const handleLogOut = async () => {\r\n        try {\r\n            await axiosJWT.delete(API_URL + 'account/logout');\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            navigate('/');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            navigate('/');\r\n            window.location.reload();\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            style={customStyles}\r\n            contentLabel='Example Modal'\r\n            ariaHideApp={false}\r\n        >\r\n            <div className='flex flex-col gap-4 w-[500px]'>\r\n                <span className='text-2xl font-medium'>Session Expired</span>\r\n                <span>\r\n                    Your session has expired please login again, click the button bellow to go back\r\n                    login screen\r\n                </span>\r\n                <div className='flex justify-center'>\r\n                    <Button onClick={handleLogOut} className='w-[50%]'>\r\n                        Login\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TokenExpire;\r\n","import axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from './constant'\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const refreshToken = localStorage.getItem('refresh_token')\r\n    const res = await axios.post(\r\n      API_URL + `account/refresh-token`,\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${refreshToken}` },\r\n      },\r\n    )\r\n    return res.data\r\n  } catch (err) {\r\n    // return navigation('/');\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst createAxiosJWT = () => {\r\n  const newInstance = axios.create()\r\n  newInstance.interceptors.request.use(\r\n    async (config) => {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      if (accessToken) {\r\n        const decodedToken = jwt_decode(accessToken)\r\n        try {\r\n          if (decodedToken.exp < Date.now() / 1000) {\r\n            const tokens = await refreshToken()\r\n            localStorage.setItem('access_token', tokens.accessToken)\r\n            localStorage.setItem('refresh_token', tokens.refreshToken)\r\n            config.headers['Authorization'] = 'Bearer ' + tokens.accessToken\r\n          } else config.headers['Authorization'] = 'Bearer ' + accessToken\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      return config\r\n    },\r\n    (err) => {\r\n      console.log(err)\r\n      const navigate = useNavigate()\r\n      navigate('/')\r\n      // return Promise.reject(err);\r\n    },\r\n  )\r\n  return newInstance\r\n}\r\n\r\nexport default createAxiosJWT\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport ExamModal from '../Modals/ExamModal';\r\n\r\nconst ExamCard = ({ val, isParent }) => {\r\n    const [openExamModal, setOpenExamModal] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ExamModal\r\n                isOpen={openExamModal}\r\n                setIsOpen={setOpenExamModal}\r\n                val={val}\r\n                isParent={isParent}\r\n            />\r\n            <div\r\n                onClick={() => setOpenExamModal(true)}\r\n                className='bg-white flex flex-col gap-3 w-[260px] rounded-lg px-3 py-3 select-none shadow-md hover:shadow-lg transition-all cursor-pointer'\r\n            >\r\n                <span className='w-[230px] truncate text-primary'>\r\n                    {val?.assignment.assignmentName}\r\n                </span>\r\n                <span className='text-xs text-gray-500'>\r\n                    <i className='fa-regular fa-clock'></i>{' '}\r\n                    <span>{val?.assignment.doTime} mins</span>\r\n                </span>\r\n                <div className='flex flex-row justify-between'>\r\n                    <span className='text-xs text-gray-500'>\r\n                        <i className='fa-regular fa-calendar'></i>{' '}\r\n                        <span>{moment(val?.assignment.dateDue).format('YYYY-MM-DD HH:mm:ss')}</span>\r\n                    </span>\r\n                    <span className='text-xs text-gray-500'>\r\n                        {val?.dateComplete ? `Submitted` : `Not submitted`}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ExamCard;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport ExamCard from '../../components/Student/ExamCard';\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\nimport TokenExpire from '../../components/Modals/TokenExpire';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\n// const mock = [\r\n//     {\r\n//         assignmentName: 'Kiem tra',\r\n//         dateDue: '25/10/2022',\r\n//         doTime: '1000',\r\n//         totalScore: 100,\r\n//     },\r\n// ];\r\n\r\nconst StudentExams = ({ isParent }) => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const [isExpired, setIsExpired] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [exams, setExams] = useState([]);\r\n    const [studentInfo, setStudentInfo] = useState(null);\r\n\r\n    const decodedToken = useMemo(() => {\r\n        return accessToken && jwtDecode(accessToken);\r\n    }, [accessToken]);\r\n\r\n    useEffect(() => {\r\n        if (isParent) {\r\n            const getStudentInfo = async () => {\r\n                try {\r\n                    const res = await axiosJWT.get(API_URL + 'parent/student');\r\n                    setStudentInfo(res.data);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    if (error.response.status === 401) setIsExpired(true);\r\n                }\r\n            };\r\n            getStudentInfo();\r\n        }\r\n    }, [isParent]);\r\n\r\n    useEffect(() => {\r\n        const getAllExamsOfStudent = async (classId, studentInfo) => {\r\n            try {\r\n                let res;\r\n                if (isParent) {\r\n                    if (studentInfo?.classId) {\r\n                        res = await axiosJWT.get(\r\n                            API_URL +\r\n                                `parent/student/${studentInfo?.id}/class/${studentInfo?.classId}`\r\n                        );\r\n                    }\r\n                }\r\n                if (!isParent) {\r\n                    res =\r\n                        classId &&\r\n                        (await axiosJWT.get(\r\n                            API_URL + `student-assignment/student/class/${classId}`\r\n                        ));\r\n                }\r\n                res && setExams(res.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n                if (error.response.status === 401) setIsExpired(true);\r\n            }\r\n        };\r\n        getAllExamsOfStudent(decodedToken?.classId, studentInfo);\r\n    }, [decodedToken?.classId, isParent, studentInfo]);\r\n\r\n    return (\r\n        <div className='flex flex-col gap-5 px-10 py-5'>\r\n            <div className='flex flex-row items-center pr-20 justify-between'>\r\n                <span className='text-2xl font-[500] text-gray-600'>Exams</span>\r\n                <input\r\n                    type='text'\r\n                    className='outline-none shadow focus:shadow-md px-3 py-2 rounded-lg transition-all'\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    placeholder='Search ...'\r\n                />\r\n            </div>\r\n            <div className='flex flex-wrap gap-10'>\r\n                {!!exams?.length &&\r\n                    exams\r\n                        .filter((val) => {\r\n                            if (\r\n                                searchTerm === '' ||\r\n                                val?.assignment.assignmentName\r\n                                    .toLowerCase()\r\n                                    .includes(searchTerm.toLowerCase())\r\n                            )\r\n                                return val;\r\n                            return '';\r\n                        })\r\n                        .map((val, i) => {\r\n                            return <ExamCard val={val} key={i} isParent={isParent} />;\r\n                        })}\r\n            </div>\r\n            <TokenExpire isOpen={isExpired} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentExams;\r\n"],"names":["children","className","rest","axiosJWT","createAxiosJWT","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","borderRadius","overflow","isOpen","setIsOpen","val","isParent","classPage","viewStudentResult","navigate","useNavigate","studentContext","useContext","StudentContext","useState","isExpired","setIsExpired","console","log","handleDoAssignment","assignmentId","temp","put","API_URL","response","status","style","contentLabel","ariaHideApp","assignment","assignmentName","doTime","moment","dateDue","format","numberQuestionOfAssignment","passScore","totalScore","studentAssignment","dateComplete","renderStatus","onClick","id","dateEnd","studentInfo","renderAssignmentButton","handleLogOut","delete","localStorage","removeItem","window","location","reload","refreshToken","getItem","axios","headers","Authorization","res","data","newInstance","interceptors","request","use","config","accessToken","decodedToken","jwt_decode","exp","Date","now","tokens","setItem","err","openExamModal","setOpenExamModal","ExamModal","searchTerm","setSearchTerm","exams","setExams","setStudentInfo","useMemo","jwtDecode","useEffect","getStudentInfo","get","getAllExamsOfStudent","classId","type","onChange","e","target","value","placeholder","length","filter","toLowerCase","includes","map","i","TokenExpire"],"sourceRoot":""}