{"version":3,"file":"static/js/6.2c403ec2.chunk.js","mappings":"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","sources":["components/Button.js","components/CustomProgressBar.js","components/Modals/ExamModal.js","components/Modals/TokenExpire.js","createAxiosJWT.js","components/Student/DeadlineItem.js","pages/StudentPages/StudentDashboard.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({ children, className = '', ...rest }) => {\r\n    return (\r\n        <button\r\n            className={`bg-primary py-2 px-5 rounded-lg border-2 text-white transition-all active:scale-90 cursor-pointer select-none hover:bg-opacity-90 text-center border-none ${className} `}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport { CircularProgressbar } from 'react-circular-progressbar'\r\n\r\nconst CustomProgressBar = (props) => {\r\n  const { children, ...otherProps } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'relative',\r\n        width: '200px',\r\n        height: '200px',\r\n      }}\r\n    >\r\n      <div style={{ position: 'absolute' }}>\r\n        <CircularProgressbar {...otherProps} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          height: '100%',\r\n          width: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomProgressBar\r\n","import React, { useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport moment from 'moment'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from '../../constant'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\nimport TokenExpire from './TokenExpire'\r\nimport Button from '../Button'\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst customStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n  },\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    overflow: 'unset !important',\r\n  },\r\n}\r\n\r\nconst ExamModal = ({ isOpen, setIsOpen, val, isParent, classPage }) => {\r\n  const navigate = useNavigate()\r\n\r\n  const [isExpired, setIsExpired] = useState(false)\r\n\r\n  const handleCancel = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  console.log('Teacher', val)\r\n\r\n  const handleDoAssignment = async (assignmentId, temp) => {\r\n    try {\r\n      if (temp === 'start')\r\n        await axiosJWT.put(\r\n          API_URL +\r\n            `student-assignment/student/assignment/${assignmentId}/start`,\r\n        )\r\n      navigate(`/assignment/${assignmentId}/question/`)\r\n    } catch (error) {\r\n      console.log(error)\r\n      if (error.response.status === 401) setIsExpired(true)\r\n    }\r\n  }\r\n\r\n  const renderAssignmentButton = () => {\r\n    if (val?.numberQuestionOfAssignment === 0) {\r\n      return <></>\r\n    }\r\n    if (classPage) {\r\n      if (isParent) {\r\n        return val?.assignment?.studentAssignment[0]?.dateComplete ? (\r\n          <Button\r\n            onClick={() => {\r\n              navigate(`/assignment/${val?.assignment.id}/result`)\r\n            }}\r\n          >\r\n            View Result\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )\r\n      }\r\n      return val?.assignment?.studentAssignment[0]?.dateComplete ? (\r\n        <Button\r\n          onClick={() => {\r\n            navigate(`/assignment/${val?.assignment.id}/result`)\r\n          }}\r\n        >\r\n          View Result\r\n        </Button>\r\n      ) : !val?.assignment?.studentAssignment[0]?.dateEnd ? (\r\n        <Button onClick={() => handleDoAssignment(val?.assignment.id, 'start')}>\r\n          Do Assignment\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          onClick={() => handleDoAssignment(val?.assignment.id, 'continue')}\r\n        >\r\n          Continue Assignment\r\n        </Button>\r\n      )\r\n    }\r\n    if (isParent) {\r\n      return val?.dateComplete ? (\r\n        <Button\r\n          onClick={() => {\r\n            navigate(`/assignment/${val?.assignment.id}/result`)\r\n          }}\r\n        >\r\n          View Result\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )\r\n    }\r\n    return val?.dateComplete ? (\r\n      <Button\r\n        onClick={() => {\r\n          navigate(`/assignment/${val?.assignment.id}/result`)\r\n        }}\r\n      >\r\n        View Result\r\n      </Button>\r\n    ) : !val?.dateEnd ? (\r\n      <Button onClick={() => handleDoAssignment(val?.assignment.id, 'start')}>\r\n        Do Assignment\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        onClick={() => handleDoAssignment(val?.assignment.id, 'continue')}\r\n      >\r\n        Continue Assignment\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  const renderStatus = () => {\r\n    if (classPage) {\r\n      if (val?.assignment?.studentAssignment[0]?.dateComplete) {\r\n        return `Submitted on ${moment(\r\n          val?.assignment?.studentAssignment[0]?.dateComplete,\r\n        ).format('hh:mm DD/MM/YYYY')}`\r\n      }\r\n      return `Not submitted`\r\n    }\r\n    if (val?.dateComplete) {\r\n      return `Submitted on ${moment(val?.dateComplete).format(\r\n        'hh:mm DD/MM/YYYY',\r\n      )}`\r\n    }\r\n    if (!val?.dateComplete) {\r\n      return `Not submitted`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      style={customStyles}\r\n      contentLabel=\"Example Modal\"\r\n      ariaHideApp={false}\r\n    >\r\n      <div className=\"flex flex-col gap-4 w-[500px] text-gray-500\">\r\n        <span className=\"text-2xl font-medium text-primary whitespace-normal break-words w-full\">\r\n          {val?.assignment.assignmentName}\r\n        </span>\r\n        <div className=\"flex flex-row \">\r\n          <div className=\"flex flex-row gap-3 items-center w-[50%]\">\r\n            <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n              <i className=\"fa-regular fa-clock text-primary\"></i>\r\n            </div>\r\n            <span>{val?.assignment.doTime} mins</span>\r\n          </div>\r\n          <div className=\"flex flex-row gap-3 items-center \">\r\n            <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n              <i className=\"fa-regular fa-calendar text-primary\"></i>{' '}\r\n            </div>\r\n            <span>\r\n              {moment(val?.assignment.dateDue).format('HH:mm DD/MM/YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row \">\r\n          {val?.numberQuestionOfAssignment && (\r\n            <div className=\"flex flex-row gap-3 items-center w-[50%]\">\r\n              <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n                <i className=\"fa-solid fa-clipboard-question text-primary\"></i>\r\n              </div>\r\n              <span>{val?.numberQuestionOfAssignment} question</span>\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-row gap-3 items-center\">\r\n            <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n              <i className=\"fa-regular fa-star text-primary\"></i>\r\n            </div>\r\n            <span>\r\n              Pass score : {val?.assignment.passScore}/\r\n              {val?.assignment.totalScore}{' '}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row gap-3 items-center\">\r\n          <div className=\"bg-gray-100 flex items-center h-[30px] w-[30px] rounded-lg justify-center\">\r\n            <i className=\"fa-brands fa-cloudsmith text-primary\"></i>\r\n          </div>\r\n          <span className=\" text-gray-500\">{renderStatus()}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-row-reverse mt-5 gap-5\">\r\n        <Button onClick={handleCancel}>Cancel</Button>\r\n        {renderAssignmentButton()}\r\n      </div>\r\n      <TokenExpire isOpen={isExpired} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ExamModal\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\nimport Button from '../Button';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\nconst TokenExpire = ({ isOpen }) => {\r\n    const customStyles = {\r\n        overlay: {\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n        },\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n        },\r\n    };\r\n    const navigate = useNavigate();\r\n    const handleLogOut = async () => {\r\n        try {\r\n            await axiosJWT.delete(API_URL + 'account/logout');\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            navigate('/');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            navigate('/');\r\n            window.location.reload();\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            style={customStyles}\r\n            contentLabel='Example Modal'\r\n            ariaHideApp={false}\r\n        >\r\n            <div className='flex flex-col gap-4 w-[500px]'>\r\n                <span className='text-2xl font-medium'>Session Expired</span>\r\n                <span>\r\n                    Your session has expired please login again, click the button bellow to go back\r\n                    login screen\r\n                </span>\r\n                <div className='flex justify-center'>\r\n                    <Button onClick={handleLogOut} className='w-[50%]'>\r\n                        Login\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TokenExpire;\r\n","import axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from './constant'\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const refreshToken = localStorage.getItem('refresh_token')\r\n    const res = await axios.post(\r\n      API_URL + `account/refresh-token`,\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${refreshToken}` },\r\n      },\r\n    )\r\n    return res.data\r\n  } catch (err) {\r\n    // return navigation('/');\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst createAxiosJWT = () => {\r\n  const newInstance = axios.create()\r\n  newInstance.interceptors.request.use(\r\n    async (config) => {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      if (accessToken) {\r\n        const decodedToken = jwt_decode(accessToken)\r\n        try {\r\n          if (decodedToken.exp < Date.now() / 1000) {\r\n            const tokens = await refreshToken()\r\n            localStorage.setItem('access_token', tokens.accessToken)\r\n            localStorage.setItem('refresh_token', tokens.refreshToken)\r\n            config.headers['Authorization'] = 'Bearer ' + tokens.accessToken\r\n          } else config.headers['Authorization'] = 'Bearer ' + accessToken\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      return config\r\n    },\r\n    (err) => {\r\n      console.log(err)\r\n      const navigate = useNavigate()\r\n      navigate('/')\r\n      // return Promise.reject(err);\r\n    },\r\n  )\r\n  return newInstance\r\n}\r\n\r\nexport default createAxiosJWT\r\n","import React, { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport moment from 'moment'\r\nimport ExamModal from '../Modals/ExamModal'\r\n\r\nconst DeadlineItem = ({ item, selectedDay, isParent }) => {\r\n  const [openAssignmentModal, setOpenAssignmentModal] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <ExamModal\r\n        isOpen={openAssignmentModal}\r\n        setIsOpen={setOpenAssignmentModal}\r\n        val={item}\r\n        isParent={isParent}\r\n      />\r\n      <motion.div\r\n        animate={{ opacity: 1 }}\r\n        initial={{ opacity: 0 }}\r\n        exit={{ opacity: 0 }}\r\n        layout\r\n        onClick={() => setOpenAssignmentModal(!openAssignmentModal)}\r\n        className=\"bg-white w-full px-5 py-3 h-[60px] flex justify-between cursor-pointer items-center rounded-lg font-inter font-semibold text-gray-600\"\r\n      >\r\n        <div className=\"flex flex-col max-w-[200px] gap-2\">\r\n          <span className=\"text-sm truncate text-primary\">\r\n            {item?.assignment?.assignmentName}\r\n          </span>\r\n          <div className=\"flex flex-row gap-2 items-center text-xs text-gray-500\">\r\n            <span>\r\n              {moment(selectedDay?.day + selectedDay?.month.toString()).format(\r\n                'DD-MMM',\r\n              )}\r\n            </span>\r\n            <span>Due: {moment(item.dateDue).format('hh:mm A')}</span>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeadlineItem\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport '@hassanmojab/react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport { Calendar, utils } from '@hassanmojab/react-modern-calendar-datepicker';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport studentImage from '../../assets/image/students.webp';\r\n\r\nimport CustomProgressBar from '../../components/CustomProgressBar';\r\nimport { buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n//swiper\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Pagination } from 'swiper';\r\n\r\nimport achievementImg from '../../assets/image/achievement.png';\r\nimport { API_URL } from '../../constant';\r\nimport moment from 'moment';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DeadlineItem from '../../components/Student/DeadlineItem';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\n\r\nconst StudentDashboard = ({ isParent }) => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const decodedToken = useMemo(() => {\r\n        return accessToken && jwtDecode(accessToken);\r\n    }, [accessToken]);\r\n\r\n    const [selectedDay, setSelectedDay] = useState(utils().getToday());\r\n    const [assignments, setAssignments] = useState([]);\r\n    const [assignmentDays, setAssignmentsDays] = useState([]);\r\n    const [topicsOfStudent, setTopicsOfStudent] = useState([]);\r\n    const [classInfo, setClassInfo] = useState();\r\n    const [achievement, setAchievement] = useState();\r\n    const [studentInfo, setStudentInfo] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleDays = async (assignments) => {\r\n        const days = [];\r\n        // [\r\n        //   {\r\n        //     year: 2022,\r\n        //     month: 9,\r\n        //     day: 26,\r\n        //     className: 'deadline',\r\n        //   },\r\n        // ]\r\n\r\n        for (let i = 0; i < assignments.length; i++) {\r\n            days.push({\r\n                year: parseInt(moment(assignments[i]?.dateDue).format('YYYY')),\r\n                month: parseInt(moment(assignments[i]?.dateDue).format('MM')),\r\n                day: parseInt(moment(assignments[i]?.dateDue).format('DD')),\r\n                className: 'deadline',\r\n            });\r\n        }\r\n        setAssignmentsDays(days);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isParent) {\r\n            const getStudentInfo = async () => {\r\n                try {\r\n                    const res = await axiosJWT.get(API_URL + `parent/student`);\r\n                    setStudentInfo(res.data);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            };\r\n            getStudentInfo();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const getDeadline = async (studentId) => {\r\n        let res;\r\n        try {\r\n            if (isParent) {\r\n                res =\r\n                    studentId &&\r\n                    (await axiosJWT.get(API_URL + `parent/student/${studentId}/deadline`));\r\n            } else {\r\n                res = await axiosJWT.get(API_URL + `student-assignment/student/deadline`);\r\n            }\r\n            if (res?.data) {\r\n                setAssignments(res.data);\r\n                res.data?.length && handleDays(res.data);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const getPercentSkill = async (studentId) => {\r\n        try {\r\n            let res;\r\n            if (isParent) {\r\n                res =\r\n                    studentId &&\r\n                    (await axiosJWT.get(API_URL + `parent/student/${studentId}/percent-skill`));\r\n            } else {\r\n                res = await axiosJWT.get(API_URL + `student-topic/percent-skill`);\r\n            }\r\n            res && setTopicsOfStudent(res.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const getClassOfStudent = async (studentId) => {\r\n        let res;\r\n        try {\r\n            if (isParent) {\r\n                res =\r\n                    studentId &&\r\n                    (await axiosJWT.get(API_URL + `parent/student/${studentId}/class`));\r\n            } else {\r\n                res = await axiosJWT.get(API_URL + `student/class`);\r\n            }\r\n            res && setClassInfo(res.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const getAchievementOfStudent = async (studentId) => {\r\n        try {\r\n            let res;\r\n            if (isParent) {\r\n                res =\r\n                    studentId &&\r\n                    (await axiosJWT.get(API_URL + `parent/student/${studentId}/achievement`));\r\n            } else {\r\n                res = await axiosJWT.get(API_URL + `student/achievement`);\r\n            }\r\n            res && setAchievement(res.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAchievementOfStudent(studentInfo?.id);\r\n        getDeadline(studentInfo?.id);\r\n        getPercentSkill(studentInfo?.id);\r\n        getClassOfStudent(studentInfo?.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [studentInfo?.id]);\r\n\r\n    return (\r\n        <>\r\n            <div className='px-10 py-7 flex flex-row gap-5 h-[full] text-gray-800'>\r\n                <div className='flex flex-col w-[70%] gap-7'>\r\n                    <span className='text-xl font-semibold font-inter'>Dashboard</span>\r\n                    {/* welcome back */}\r\n                    <div className='flex flex-row h-[150px] -z-50 bg-primary relative rounded-lg shadow-lg px-4 py-3'>\r\n                        <div className='text-xl text-white w-[40%] flex flex-col pl-10 gap-5 self-center'>\r\n                            <span className='text-2xl'>Welcome back {decodedToken?.fullName}!</span>{' '}\r\n                            <span className='text-base'>Some quotes</span>\r\n                        </div>\r\n                        {/* image */}\r\n                        <div className=''>\r\n                            <img\r\n                                src={studentImage}\r\n                                alt=''\r\n                                className='w-72 h-48 absolute 2xl:translate-x-[200px] xl:translate-x-[75px] -translate-y-[70px]'\r\n                            ></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex flex-row gap-7'>\r\n                        {/* topics */}\r\n                        <div className=' px-4 py-3 flex flex-col w-[60%] bg-white shadow-lg rounded-lg'>\r\n                            <div className='flex flex-row items-center px-2 justify-between'>\r\n                                <h2 className='font-semibold font-inter text-gray-600'>\r\n                                    Class Topics\r\n                                </h2>\r\n                                <span\r\n                                    onClick={() =>\r\n                                        navigate(\r\n                                            `/class/${\r\n                                                decodedToken?.classId || studentInfo?.classId\r\n                                            }`\r\n                                        )\r\n                                    }\r\n                                    className='text-xs text-primary cursor-pointer select-none'\r\n                                >\r\n                                    View all\r\n                                </span>\r\n                            </div>\r\n                            <div className='flex flex-col h-[297px] text-gray-800 gap-3 py-3 px-2 divide-y overflow-auto'>\r\n                                {topicsOfStudent.map((val, i) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={i}\r\n                                            className='flex pt-5 px-3 flex-row justify-between items-center'\r\n                                        >\r\n                                            <span className='truncate w-[50%]'>\r\n                                                {val.topicName}\r\n                                            </span>\r\n                                            <div className='flex w-[40%] flex-row items-center gap-3'>\r\n                                                <div className='w-full bg-gray-200 gap-4 rounded-full h-1.5'>\r\n                                                    <div\r\n                                                        className='bg-primary h-1.5 rounded-full'\r\n                                                        style={{\r\n                                                            width: `${\r\n                                                                (val.numberPassSkillOfTopic /\r\n                                                                    val.numberTotalSkillOfTopic) *\r\n                                                                    100 || 0\r\n                                                            }%`,\r\n                                                        }}\r\n                                                    ></div>\r\n                                                </div>\r\n                                                <span className='text-sm text-right w-[50px] text-primary'>\r\n                                                    {Math.floor(\r\n                                                        (val.numberPassSkillOfTopic /\r\n                                                            val.numberTotalSkillOfTopic) *\r\n                                                            100\r\n                                                    ) || 0}\r\n                                                    %\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        {/* Achievements */}\r\n                        <div className='bg-white rounded-lg select-none px-4 py-3 w-[40%] shadow-lg gap-7 flex flex-col'>\r\n                            <span className='font-semibold font-inter text-gray-600'>\r\n                                Achievements\r\n                            </span>\r\n                            <Swiper\r\n                                pagination={{\r\n                                    clickable: true,\r\n                                }}\r\n                                modules={[Pagination]}\r\n                                className='achievementSwiper w-[100%] justify-center items-center py-10'\r\n                            >\r\n                                <SwiperSlide>\r\n                                    <div className='w-[200px] h-[200px]'>\r\n                                        <CustomProgressBar\r\n                                            value={achievement?.avgScoreOfStudent || 0}\r\n                                            circleRatio={0.75}\r\n                                            initialAnimation={true}\r\n                                            styles={buildStyles({\r\n                                                pathColor: '#5199ad',\r\n                                                rotation: 1 / 2 + 1 / 8,\r\n                                                trailColor: '#eee',\r\n                                            })}\r\n                                        >\r\n                                            <div className='flex flex-col items-center justify-center text-primary'>\r\n                                                <span className='font-semibold text-4xl'>\r\n                                                    {Math.round(achievement?.avgScoreOfStudent) ||\r\n                                                        0}\r\n                                                </span>\r\n                                                <span className='font-semibold text-sm'>\r\n                                                    Average Score\r\n                                                </span>\r\n                                            </div>\r\n                                        </CustomProgressBar>\r\n                                    </div>\r\n                                </SwiperSlide>\r\n                                <SwiperSlide>\r\n                                    <div className='flex flex-col h-full'>\r\n                                        <div\r\n                                            className='bg-cover self-center w-[150px] h-[150px] bg-center'\r\n                                            style={{\r\n                                                backgroundImage: \"url('\" + achievementImg + \"')\",\r\n                                            }}\r\n                                        ></div>\r\n                                        <div className='flex gap-3 items-center'>\r\n                                            <span className='text-primary text-2xl'>\r\n                                                {achievement?.topicsCompletedOfStudent || 0}\r\n                                            </span>{' '}\r\n                                            Topics completed\r\n                                        </div>\r\n                                    </div>\r\n                                </SwiperSlide>\r\n                            </Swiper>\r\n                        </div>\r\n                    </div>\r\n                    {/* foot */}\r\n                    <div className='flex items-center gap-3 justify-center px-7 w-full h-[50px] bg-white rounded-lg shadow-lg'>\r\n                        <span className='text-gray-500'>Class : </span>\r\n                        <span className='text-primary'>{classInfo?.className}</span>\r\n                    </div>\r\n                </div>\r\n                {/* calendar */}\r\n                <div className='flex flex-col h-[500px] gap-4'>\r\n                    <Calendar\r\n                        colorPrimary='#75b9cc'\r\n                        value={selectedDay}\r\n                        onChange={setSelectedDay}\r\n                        calendarTodayClassName='custom-today-day'\r\n                        customDaysClassName={assignmentDays}\r\n                        calendarClassName='custom-calendar'\r\n                    />\r\n                    <div className='w-full  py-4 flex flex-col gap-2 bg-primary rounded-lg shadow-lg'>\r\n                        <span className='text-white px-5 text-base font-semibold font-inter'>\r\n                            Deadlines\r\n                        </span>\r\n                        <div className='flex flex-col mx-5 pr-2 gap-3 h-[210px] overflow-y-auto'>\r\n                            {assignments\r\n                                .filter(\r\n                                    (item) =>\r\n                                        parseInt(moment(item.dateDue).format('DD')) ===\r\n                                        selectedDay?.day\r\n                                )\r\n                                .map((item, i) => {\r\n                                    return (\r\n                                        <DeadlineItem\r\n                                            item={item}\r\n                                            key={i}\r\n                                            selectedDay={selectedDay}\r\n                                            isParent={isParent}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StudentDashboard;\r\n"],"names":["children","className","rest","props","otherProps","style","position","width","height","display","flexDirection","justifyContent","alignItems","axiosJWT","createAxiosJWT","customStyles","overlay","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","borderRadius","overflow","isOpen","setIsOpen","val","isParent","classPage","navigate","useNavigate","useState","isExpired","setIsExpired","console","log","handleDoAssignment","assignmentId","temp","put","API_URL","response","status","contentLabel","ariaHideApp","assignment","assignmentName","doTime","moment","dateDue","format","numberQuestionOfAssignment","passScore","totalScore","studentAssignment","dateComplete","renderStatus","onClick","id","dateEnd","renderAssignmentButton","handleLogOut","delete","localStorage","removeItem","window","location","reload","refreshToken","getItem","axios","headers","Authorization","res","data","newInstance","interceptors","request","use","config","accessToken","decodedToken","jwt_decode","exp","Date","now","tokens","setItem","err","item","selectedDay","openAssignmentModal","setOpenAssignmentModal","ExamModal","motion","animate","opacity","initial","exit","layout","day","month","toString","useMemo","jwtDecode","utils","getToday","setSelectedDay","assignments","setAssignments","assignmentDays","setAssignmentsDays","topicsOfStudent","setTopicsOfStudent","classInfo","setClassInfo","achievement","setAchievement","studentInfo","setStudentInfo","handleDays","days","i","length","push","year","parseInt","useEffect","getStudentInfo","get","getDeadline","studentId","getPercentSkill","getClassOfStudent","getAchievementOfStudent","fullName","src","studentImage","alt","classId","map","topicName","numberPassSkillOfTopic","numberTotalSkillOfTopic","Math","floor","pagination","clickable","modules","Pagination","CustomProgressBar","value","avgScoreOfStudent","circleRatio","initialAnimation","styles","buildStyles","pathColor","rotation","trailColor","round","backgroundImage","achievementImg","topicsCompletedOfStudent","colorPrimary","onChange","calendarTodayClassName","customDaysClassName","calendarClassName","filter"],"sourceRoot":""}