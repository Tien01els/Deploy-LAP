{"version":3,"file":"static/js/880.51565693.chunk.js","mappings":"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","sources":["constant.js","createAxiosJWT.js","pages/TeacherPages/AssignmentView.js"],"sourcesContent":["export const API_URL = 'http://localhost:8080/api/';\r\n","import axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from './constant'\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const refreshToken = localStorage.getItem('refresh_token')\r\n    const res = await axios.post(\r\n      API_URL + `account/refresh-token`,\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${refreshToken}` },\r\n      },\r\n    )\r\n    return res.data\r\n  } catch (err) {\r\n    // return navigation('/');\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst createAxiosJWT = () => {\r\n  const newInstance = axios.create()\r\n  newInstance.interceptors.request.use(\r\n    async (config) => {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      if (accessToken) {\r\n        const decodedToken = jwt_decode(accessToken)\r\n        try {\r\n          if (decodedToken.exp < Date.now() / 1000) {\r\n            const tokens = await refreshToken()\r\n            localStorage.setItem('access_token', tokens.accessToken)\r\n            localStorage.setItem('refresh_token', tokens.refreshToken)\r\n            config.headers['Authorization'] = 'Bearer ' + tokens.accessToken\r\n          } else config.headers['Authorization'] = 'Bearer ' + accessToken\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      return config\r\n    },\r\n    (err) => {\r\n      console.log(err)\r\n      const navigate = useNavigate()\r\n      navigate('/')\r\n      // return Promise.reject(err);\r\n    },\r\n  )\r\n  return newInstance\r\n}\r\n\r\nexport default createAxiosJWT\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\n\r\nconst testImg =\r\n    'https://thumbs.dreamstime.com/b/student-school-boy-studying-computer-online-lesson-education-vector-concept-student-school-boy-studying-computer-114522764.jpg';\r\n\r\nconst AssignmentView = () => {\r\n    //search\r\n    const { assignmentId } = useParams();\r\n\r\n    const [assignment, setAssignment] = useState({});\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [students, setStudents] = useState([]);\r\n\r\n    const returnView = (score, passScore) => {\r\n        if (score >= passScore) {\r\n            return (\r\n                <span className='bg-green-400 text-sm py-1 w-24 flex justify-center text-white px-2 rounded-full'>\r\n                    Passed\r\n                </span>\r\n            );\r\n        }\r\n        if (score < passScore) {\r\n            return (\r\n                <span className='bg-red-400 text-sm py-1 w-24 flex justify-center text-white px-2 rounded-full'>\r\n                    Failed\r\n                </span>\r\n            );\r\n        }\r\n        // return (\r\n        //     <span className='bg-primary text-sm py-1 w-24 flex justify-center text-white px-2 rounded-full'>\r\n        //         Good\r\n        //     </span>\r\n        // );\r\n    };\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const getAssignmentSummary = async () => {\r\n                const res = await axiosJWT.get(API_URL + `assignment/${assignmentId}/summary`);\r\n                if (res.data) {\r\n                    console.log(res.data);\r\n                    setAssignment(res.data);\r\n                    setStudents(res.data.students);\r\n                }\r\n            };\r\n            getAssignmentSummary();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [assignmentId]);\r\n\r\n    return (\r\n        <div className='px-10 py-10 flex flex-col gap-5'>\r\n            <div className='flex flex-col gap-4 w-full h-fit px-10 pb-10 pt-7 bg-white rounded-lg shadow'>\r\n                <div className='flex flex-row justify-between'>\r\n                    <div className='flex flex-col gap-3 text-gray-500'>\r\n                        <span className='text-2xl text-gray-700'>{assignment?.assignmentName}</span>\r\n                        {/* <span className=''>Course : topic name</span> */}\r\n                        <span>{assignment?.numberQuestionOfAssignment} Questions</span>\r\n                    </div>\r\n                    <div className='flex flex-col gap-3 text-gray-500'>\r\n                        <div className='flex flex-row-reverse gap-3'>\r\n                            {assignment?.skills?.map((val, i) => {\r\n                                return (\r\n                                    <div\r\n                                        key={i}\r\n                                        className='px-2 py-1 h-fit flex items-center justify-center text-primary rounded-full border-2 border-primary'\r\n                                    >\r\n                                        <span className='text-sm'>{val?.skillName}</span>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <span>\r\n                            Date due: {moment(assignment?.dateDue).format('YYYY-MM-DD HH:mm:ss')}\r\n                        </span>\r\n                        <span className='text-left'>\r\n                            <i className='fa-regular fa-clock'></i> {assignment?.doTime} min\r\n                            {assignment?.doTime > 1 ? 's' : ''}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-wrap gap-7'>\r\n                    {/* Total student */}\r\n                    <div className='flex flex-row items-center w-[355px] gap-7 border border-gray-300 px-5 py-4 rounded-md'>\r\n                        <div className='flex items-center justify-center text-white bg-primary  rounded-full w-[40px] h-[40px]'>\r\n                            <i className='fa-solid fa-user'></i>\r\n                        </div>\r\n                        <div className='flex flex-col'>\r\n                            <span>Assigned Students</span>\r\n                            <span className='text-2xl'>{students?.length || 0}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Average Score */}\r\n                    <div className='flex flex-row items-center w-[355px] gap-7 border border-gray-300 px-5 py-4 rounded-md'>\r\n                        <div className='flex items-center justify-center text-white bg-yellow-400  rounded-full w-[40px] h-[40px]'>\r\n                            <i className='fa-solid fa-star'></i>\r\n                        </div>\r\n                        <div className='flex flex-col'>\r\n                            <span>Average Score</span>\r\n                            <span className='text-2xl'>{assignment?.avgScoreOfStudent || 0}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Passed Students */}\r\n                    <div className='flex flex-row items-center w-[355px] gap-7 border border-gray-300 px-5 py-4 rounded-md'>\r\n                        <div className='flex items-center justify-center text-white bg-green-400  rounded-full w-[40px] h-[40px]'>\r\n                            <i className='fa-solid fa-check font-bold'></i>\r\n                        </div>\r\n                        <div className='flex flex-col'>\r\n                            <span>Passed students</span>\r\n                            <span className='text-2xl'>{assignment?.studentPassed || 0}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Passed Students */}\r\n                    <div className='flex flex-row items-center w-[355px] gap-7 border border-gray-300 px-5 py-4 rounded-md'>\r\n                        <div className='flex items-center justify-center text-white bg-red-400  rounded-full w-[40px] h-[40px]'>\r\n                            <i className='fa-solid fa-xmark'></i>\r\n                        </div>\r\n                        <div className='flex flex-col'>\r\n                            <span>Failed Students</span>\r\n                            <span className='text-2xl'>{assignment?.studentFailed || 0}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Passed Students */}\r\n                    <div className='flex flex-row items-center w-[355px] gap-7 border border-gray-300 px-5 py-4 rounded-md'>\r\n                        <div className='flex items-center justify-center text-white bg-yellow-500  rounded-full w-[40px] h-[40px]'>\r\n                            <i className='fa-solid fa-circle-info'></i>\r\n                        </div>\r\n                        <div className='flex flex-col'>\r\n                            <span>Late submit</span>\r\n                            <span className='text-2xl'>{assignment?.studentLateSubmit || 0}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Passed Students */}\r\n                    <div className='flex flex-row items-center w-[355px] gap-7 border border-gray-300 px-5 py-4 rounded-md'>\r\n                        <div className='flex items-center justify-center text-white bg-pink-400  rounded-full w-[40px] h-[40px]'>\r\n                            <i className='fa-solid fa-question'></i>\r\n                        </div>\r\n                        <div className='flex flex-col'>\r\n                            <span>Not submitted</span>\r\n                            <span className='text-2xl'>{assignment?.studentNotSubmit || 0}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='flex flex-col gap-5'>\r\n                <span className='text-xl'>Submitted students</span>\r\n                <div className='flex flex-row items-center gap-10'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Search student..'\r\n                        className='px-3 py-2 rounded-lg shadow outline-none focus:shadow-lg transition-all'\r\n                        onChange={(e) => {\r\n                            setSearchTerm(e.target.value);\r\n                        }}\r\n                    />\r\n                    <div className='flex flex-row gap-3 text-gray-500 items-center'>\r\n                        <div className='flex flex-col text-xs select-none'>\r\n                            <i\r\n                                onClick={() => {\r\n                                    setStudents([\r\n                                        ...students?.sort(\r\n                                            (a, b) =>\r\n                                                b.studentAssignment[0].score -\r\n                                                a.studentAssignment[0].score\r\n                                        ),\r\n                                    ]);\r\n                                }}\r\n                                className='fa-solid fa-caret-up cursor-pointer rounded active:scale-90'\r\n                            ></i>\r\n                            <i\r\n                                onClick={() => {\r\n                                    setStudents([\r\n                                        ...students?.sort(\r\n                                            (a, b) =>\r\n                                                a.studentAssignment[0].score -\r\n                                                b.studentAssignment[0].score\r\n                                        ),\r\n                                    ]);\r\n                                }}\r\n                                className='fa-solid fa-caret-down cursor-pointer rounded active:scale-90 '\r\n                            ></i>\r\n                        </div>\r\n                        <span className='font-medium '>Score Sort</span>\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-col gap-4'>\r\n                    {students\r\n                        ?.filter((val) => {\r\n                            if (\r\n                                searchTerm === '' ||\r\n                                val.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                            ) {\r\n                                return val;\r\n                            }\r\n                            return '';\r\n                        })\r\n                        .map((val, i) => {\r\n                            return (\r\n                                <div\r\n                                    key={i}\r\n                                    className='flex flex-row gap-28 items-center rounded-md shadow-md bg-white px-5 py-4 w-full h-fit'\r\n                                >\r\n                                    <div className='flex flex-row gap-4 items-center w-[170px]'>\r\n                                        <img\r\n                                            src={val?.account.avatarImg || testImg}\r\n                                            className='w-[40px] h-[40px] rounded-full'\r\n                                            alt=''\r\n                                            onError={({ currentTarget }) => {\r\n                                                currentTarget.onerror = null;\r\n                                                currentTarget.src = testImg;\r\n                                            }}\r\n                                        />\r\n                                        <span className='truncate w-[125px]'>{val?.fullName}</span>\r\n                                    </div>\r\n                                    <span>{val?.studentAssignment[0].score}</span>\r\n                                    {returnView(\r\n                                        val?.studentAssignment[0].score,\r\n                                        assignment?.passScore\r\n                                    )}\r\n                                    <span className='text-gray-500'>\r\n                                        {moment(val?.studentAssignment[0]?.dateComplete).format(\r\n                                            'YYYY-MM-DD HH:mm:ss'\r\n                                        )}\r\n                                    </span>\r\n                                    <span className='text-gray-500'>Late</span>\r\n                                    <span className='text-primary cursor-pointer select-none'>\r\n                                        View Answers\r\n                                    </span>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignmentView;\r\n"],"names":["API_URL","refreshToken","localStorage","getItem","axios","headers","Authorization","res","data","console","log","newInstance","interceptors","request","use","config","accessToken","decodedToken","jwt_decode","exp","Date","now","tokens","setItem","err","useNavigate","navigate","axiosJWT","createAxiosJWT","testImg","assignmentId","useParams","useState","assignment","setAssignment","searchTerm","setSearchTerm","students","setStudents","useEffect","getAssignmentSummary","get","error","className","assignmentName","numberQuestionOfAssignment","skills","map","val","i","skillName","moment","dateDue","format","doTime","length","avgScoreOfStudent","studentPassed","studentFailed","studentLateSubmit","studentNotSubmit","type","placeholder","onChange","e","target","value","onClick","sort","a","b","studentAssignment","score","filter","name","toLowerCase","includes","passScore","src","account","avatarImg","alt","onError","currentTarget","onerror","fullName","dateComplete"],"sourceRoot":""}