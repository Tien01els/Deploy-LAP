{"version":3,"file":"static/js/738.04455670.chunk.js","mappings":"mMAaA,IAXe,SAAC,GAA2C,IAAzCA,EAAwC,EAAxCA,SAAwC,IAA9BC,UAAAA,OAA8B,MAAlB,GAAkB,EAAXC,GAAW,YACtD,OACI,mCACID,UAAS,oKAA+JA,EAA/J,MACLC,GAFR,aAIKF,IAGZ,C,6HCJKG,GAAWC,EAAAA,EAAAA,KA6DjB,IA5DoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAqBbC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,yCAAG,4GAEPL,EAASM,OAAOC,EAAAA,EAAU,kBAFnB,OAGbC,aAAaC,WAAW,gBACxBD,aAAaC,WAAW,iBACxBN,EAAS,KACTO,OAAOC,SAASC,SANH,gDAQbC,QAAQC,IAAR,MACAN,aAAaC,WAAW,gBACxBD,aAAaC,WAAW,iBACxBN,EAAS,KACTO,OAAOC,SAASC,SAZH,yDAAH,qDAelB,OACI,SAAC,IAAD,CACIV,OAAQA,EACRa,MAvCa,CACjBC,QAAS,CACLC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,4BAErBC,QAAS,CACLL,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRG,YAAa,OACbC,UAAW,wBACXC,OAAQ,OACRC,aAAc,QAuBdC,aAAa,gBACbC,aAAa,EAJjB,UAMI,iBAAK/B,UAAU,gCAAf,WACI,iBAAMA,UAAU,uBAAhB,8BACA,4HAIA,gBAAKA,UAAU,sBAAf,UACI,SAAC,IAAD,CAAQgC,QAASzB,EAAcP,UAAU,UAAzC,yBAOnB,C,+FC5DKiC,EAAY,yCAAG,2GAEXA,EAAevB,aAAawB,QAAQ,iBAFzB,SAGCC,IAAAA,KAChB1B,EAAAA,EAAO,wBACP,CAAC,EACD,CACE2B,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAPvB,cAGXK,EAHW,yBAUVA,EAAIC,MAVM,gCAajBxB,QAAQC,IAAR,MAbiB,yDAAH,qDA+ClB,IA9BuB,WACrB,IAAMwB,EAAcL,IAAAA,SA0BpB,OAzBAK,EAAYC,aAAaC,QAAQC,IAAjC,yCACE,WAAOC,GAAP,qFACQC,EAAcnC,aAAawB,QAAQ,iBAD3C,oBAGUY,GAAeC,EAAAA,EAAAA,GAAWF,GAHpC,WAKUC,EAAaE,IAAMC,KAAKC,MAAQ,KAL1C,iCAM6BjB,IAN7B,OAMckB,EANd,OAOQzC,aAAa0C,QAAQ,eAAgBD,EAAON,aAC5CnC,aAAa0C,QAAQ,gBAAiBD,EAAOlB,cAC7CW,EAAOR,QAAP,cAAkC,UAAYe,EAAON,YAT7D,wBAUaD,EAAOR,QAAP,cAAkC,UAAYS,EAV3D,0DAYM9B,QAAQC,IAAR,MAZN,iCAeS4B,GAfT,0DADF,uDAkBE,SAACS,GACCtC,QAAQC,IAAIqC,IACK/C,EAAAA,EAAAA,KACjBD,CAAS,IAEV,IAEImC,CACR,C,kICvBD,EA1BoB,SAAC,GAAkD,IAAhDc,EAA+C,EAA/CA,IAAKvD,EAA0C,EAA1CA,SAA0C,IAAhCC,UAAAA,OAAgC,MAApB,GAAoB,EAAhBuD,EAAgB,EAAhBA,UAClD,OACI,iBACIvD,UAAS,gFAA2EA,GADxF,UAGKD,GACD,iBAAMC,UAAU,kDAAhB,SAAmEsD,EAAIE,aACvE,kBAAMxD,UAAU,wCAAhB,gCACwB,IACnBsD,EAAIG,sBACCH,EAAIG,sBACJ,kCAEV,iBAAMzD,UAAU,6CAAhB,SAA8DsD,EAAII,eAClE,iBAAK1D,UAAU,uBAAf,WACI,kBAAMA,UAAU,wBAAhB,iCACyBsD,EAAIK,iBAE3BJ,IACE,iBAAMvD,UAAU,yBAAhB,SAA0CsD,EAAIM,4BAKjE,E,8BCnBK1D,GAAWC,EAAAA,EAAAA,KAmHjB,EAjHgB,SAAC,GAA6B,IAA3BoD,EAA0B,EAA1BA,UAAWM,EAAe,EAAfA,SAC1B,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0CF,EAAAA,EAAAA,YAA1C,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KAmEA,OAjEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,yCAAG,WAAOX,EAAUN,GAAjB,kPAEPkB,EAAU,KACVC,EAAU,KACVC,EAAgB,MAChBpB,EALO,gBAMPmB,EAAO,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAeW,GANlB,2BAQHf,EARG,kCASuB3D,EAAS2E,IAAIpE,EAAAA,EAAO,kBAT3C,WASGqE,EATH,OAUHL,EAAO,UAAGK,EAAYvC,YAAf,aAAG,EAAkBkC,QAVzB,eAYCK,EAAYvC,YAZb,aAYC,EAAkBqC,IAZnB,uCAaQ1E,EAAS2E,IACZpE,EAAAA,EAAO,mCACeqE,EAAYvC,YAD3B,aACe,EAAkBqC,GADjC,kBAC6CH,EAD7C,WAdZ,4BAWHE,EAXG,8CAkBqBzE,EAAS2E,IAAIpE,EAAAA,EAAO,iBAlBzC,WAkBGsE,EAlBH,OAmBHN,EAAO,UAAGM,EAAUxC,YAAb,aAAG,EAAgBqC,GAnBvB,KAqBCG,GArBD,uCAsBQ7E,EAAS2E,IACZpE,EAAAA,EAAO,sCAAkCgE,IAvB9C,4BAoBHE,EApBG,qBA2BHF,GA3BG,uCA2BevE,EAAS2E,IAAIpE,EAAAA,EAAO,sBAAkBgE,IA3BrD,4BA0BDO,EA1BC,KA4BPN,EAAO,OAAGM,QAAH,IAAGA,GAAH,UAAGA,EAAOzC,YAAV,aAAG,EAAaqC,GA5BhB,gBA+BCF,GA/BD,uCA+BmBxE,EAAS2E,IAAIpE,EAAAA,EAAO,gBAAYiE,EAAZ,cA/BvC,4BAgCX,WADMpC,EA/BK,YAgCX,IAAIA,GAAJ,UAAIA,EAAKC,YAAT,OAAI,EAAW0C,OAAQ,CACnB,aAAIN,SAAJ,iBAAI,EAAepC,YAAnB,OAAI,EAAqB0C,OACrB,IAD8B,EAAD,SACpBC,GAEDP,EAAcpC,KAAK4C,MACf,SAACC,GAAD,OAAWA,EAAMC,QAAUD,EAAME,UAAYhD,EAAIC,KAAK2C,GAAGI,OAAzD,IAGJhD,EAAIC,KAAK2C,GAAGtB,qBAAuB,SAClCtB,EAAIC,KAAK2C,GAAGtB,qBAAuB,EARf,EACpBsB,EAAI,EAAGA,EAAI5C,EAAIC,KAAK0C,SAAUC,EAAI,EAAlCA,GAUbd,EAAgB9B,EAAIC,KACvB,CA7CU,2GA+CXxB,QAAQC,IAAR,MAC8B,MAA1B,KAAMuE,SAASC,QAAgBxB,GAAa,GAhDrC,wDAAH,wDAmDhBQ,EAAWX,EAAUN,EACxB,GAAE,CAACM,EAAUN,EAAX,OAAsBU,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAeW,MAExCL,EAAAA,EAAAA,YAAU,WACN,GAAIhB,EAAW,CACX,IAAMkC,EAAoB,yCAAG,yGACPvF,EAAS2E,IAAIpE,EAAAA,EAAO,iBADb,OACnB6B,EADmB,OAEzBgC,EAAUhC,EAAIC,MAFW,2CAAH,qDAI1BkD,GACH,CACJ,GAAE,CAAClC,KAGA,iCACI,iBAAKvD,UAAU,8CAAf,WAEI,iBAAKA,UAAU,mCAAf,WACI,iBAAMA,UAAU,oCAAhB,sBACCuD,IACG,SAAC,KAAD,CACImC,QAASrB,EACTsB,MAAO1B,EACP2B,SAAU1B,EACV2B,eAAgB,SAACC,GAAD,OAAYA,EAAOlB,EAAnB,EAChBmB,eAAgB,SAACD,GAAD,OAAYA,EAAOE,SAAnB,EAChBC,YAAY,wBACZjG,UAAU,kBAKtB,iBAAKA,UAAU,qBAAf,WACI,gBAAKA,UAAU,yDACf,gBAAKA,UAAU,sFAAf,SACKmE,EAAa+B,KAAI,SAAC5C,EAAK4B,GACpB,OACI5B,IACI,SAAC,EAAD,CAEIA,IAAKA,EACLtD,UAAU,WACVuD,UAAWA,GAHN2B,EAOpB,aAIb,SAACiB,EAAA,EAAD,CAAa/F,OAAQ2D,MAGhC,C","sources":["components/Button.js","components/Modals/TokenExpire.js","createAxiosJWT.js","components/RoadMapItem.js","pages/RoadMap.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({ children, className = '', ...rest }) => {\r\n    return (\r\n        <button\r\n            className={`bg-primary py-2 px-5 rounded-lg border-2 text-white transition-all active:scale-90 cursor-pointer select-none hover:bg-opacity-90 text-center border-none ${className} `}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\nimport Button from '../Button';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\nconst TokenExpire = ({ isOpen }) => {\r\n    const customStyles = {\r\n        overlay: {\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n        },\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n        },\r\n    };\r\n    const navigate = useNavigate();\r\n    const handleLogOut = async () => {\r\n        try {\r\n            await axiosJWT.delete(API_URL + 'account/logout');\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            navigate('/');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            navigate('/');\r\n            window.location.reload();\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            style={customStyles}\r\n            contentLabel='Example Modal'\r\n            ariaHideApp={false}\r\n        >\r\n            <div className='flex flex-col gap-4 w-[500px]'>\r\n                <span className='text-2xl font-medium'>Session Expired</span>\r\n                <span>\r\n                    Your session has expired please login again, click the button bellow to go back\r\n                    login screen\r\n                </span>\r\n                <div className='flex justify-center'>\r\n                    <Button onClick={handleLogOut} className='w-[50%]'>\r\n                        Login\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TokenExpire;\r\n","import axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from './constant'\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const refreshToken = localStorage.getItem('refresh_token')\r\n    const res = await axios.post(\r\n      API_URL + `account/refresh-token`,\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${refreshToken}` },\r\n      },\r\n    )\r\n    return res.data\r\n  } catch (err) {\r\n    // return navigation('/');\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst createAxiosJWT = () => {\r\n  const newInstance = axios.create()\r\n  newInstance.interceptors.request.use(\r\n    async (config) => {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      if (accessToken) {\r\n        const decodedToken = jwt_decode(accessToken)\r\n        try {\r\n          if (decodedToken.exp < Date.now() / 1000) {\r\n            const tokens = await refreshToken()\r\n            localStorage.setItem('access_token', tokens.accessToken)\r\n            localStorage.setItem('refresh_token', tokens.refreshToken)\r\n            config.headers['Authorization'] = 'Bearer ' + tokens.accessToken\r\n          } else config.headers['Authorization'] = 'Bearer ' + accessToken\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      return config\r\n    },\r\n    (err) => {\r\n      console.log(err)\r\n      const navigate = useNavigate()\r\n      navigate('/')\r\n      // return Promise.reject(err);\r\n    },\r\n  )\r\n  return newInstance\r\n}\r\n\r\nexport default createAxiosJWT\r\n","import React from 'react';\r\n\r\nconst RoadMapItem = ({ val, children, className = '', isTeacher }) => {\r\n    return (\r\n        <div\r\n            className={`flex flex-col gap-2 w-[400px] px-5 py-5 bg-white rounded-md shadow-md ${className}`}\r\n        >\r\n            {children}\r\n            <span className='text-xl text-primary font-[500] w-full truncate'>{val.topicName}</span>\r\n            <span className='text-xs text-gray-500 w-full truncate'>\r\n                Prerequisite topic:{' '}\r\n                {val.prerequisiteTopicName\r\n                    ? val.prerequisiteTopicName\r\n                    : 'Not have prerequisite topic'}\r\n            </span>\r\n            <span className='text-justify whitespace-normal break-words'>{val.description}</span>\r\n            <div className='flex justify-between'>\r\n                <span className='text-gray-500 text-sm'>\r\n                    Quantity of skills: {val.numberSkills}\r\n                </span>\r\n                {!isTeacher && (\r\n                    <span className='text-sm text-green-400'>{val.statusTopicOfStudent}</span>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoadMapItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport RoadMapItem from '../components/RoadMapItem';\r\nimport { API_URL } from '../constant';\r\nimport createAxiosJWT from '../createAxiosJWT';\r\nimport TokenExpire from '../components/Modals/TokenExpire';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\n\r\nconst RoadMap = ({ isTeacher, isParent }) => {\r\n    const [isExpired, setIsExpired] = useState(false);\r\n    const [selectedGrade, setSelectedGrade] = useState();\r\n    const [topicRoadMap, setTopicRoadMap] = useState([]);\r\n    const [grades, setGrades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getRoadMap = async (isParent, isTeacher) => {\r\n            try {\r\n                let classId = null;\r\n                let gradeId = null;\r\n                let studentTopics = null;\r\n                if (isTeacher) {\r\n                    gradeId = selectedGrade?.id;\r\n                } else {\r\n                    if (isParent) {\r\n                        const studentInfo = await axiosJWT.get(API_URL + `parent/student`);\r\n                        classId = studentInfo.data?.classId;\r\n                        studentTopics =\r\n                            studentInfo.data?.id &&\r\n                            (await axiosJWT.get(\r\n                                API_URL +\r\n                                    `parent/student/${studentInfo.data?.id}/class/${classId}/topic`\r\n                            ));\r\n                    } else {\r\n                        const classInfo = await axiosJWT.get(API_URL + `student/class`);\r\n                        classId = classInfo.data?.id;\r\n                        studentTopics =\r\n                            classInfo &&\r\n                            (await axiosJWT.get(\r\n                                API_URL + `student-topic/student/class/${classId}`\r\n                            ));\r\n                    }\r\n                    const grade =\r\n                        classId && (await axiosJWT.get(API_URL + `grade/class/${classId}`));\r\n                    gradeId = grade?.data?.id;\r\n                }\r\n\r\n                const res = gradeId && (await axiosJWT.get(API_URL + `grade/${gradeId}/road-map`));\r\n                if (res?.data?.length) {\r\n                    if (studentTopics?.data?.length) {\r\n                        for (let i = 0; i < res.data.length; ++i) {\r\n                            if (\r\n                                studentTopics.data.find(\r\n                                    (topic) => topic.isPass && topic.topicId === res.data[i].topicId\r\n                                )\r\n                            )\r\n                                res.data[i].statusTopicOfStudent = 'Passed';\r\n                            else res.data[i].statusTopicOfStudent = '';\r\n                        }\r\n                    }\r\n                    setTopicRoadMap(res.data);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                if (error.response.status === 401) setIsExpired(true);\r\n            }\r\n        };\r\n        getRoadMap(isParent, isTeacher);\r\n    }, [isParent, isTeacher, selectedGrade?.id]);\r\n\r\n    useEffect(() => {\r\n        if (isTeacher) {\r\n            const getAllGradeOfTeacher = async () => {\r\n                const res = await axiosJWT.get(API_URL + `grade/teacher`);\r\n                setGrades(res.data);\r\n            };\r\n            getAllGradeOfTeacher();\r\n        }\r\n    }, [isTeacher]);\r\n\r\n    return (\r\n        <>\r\n            <div className='flex flex-col gap-7 items-center py-7 px-10'>\r\n                {/* top */}\r\n                <div className='flex flex-col gap-5 items-center'>\r\n                    <span className='text-4xl font-[500] text-gray-600'>Road map</span>\r\n                    {isTeacher && (\r\n                        <Select\r\n                            options={grades}\r\n                            value={selectedGrade}\r\n                            onChange={setSelectedGrade}\r\n                            getOptionValue={(option) => option.id}\r\n                            getOptionLabel={(option) => option.gradeName}\r\n                            placeholder='Please select a grade'\r\n                            className='w-[400px]'\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                <div className='relative w-[850px]'>\r\n                    <div className='bg-primary absolute w-1 left-[calc(50%-2px)] h-full'></div>\r\n                    <div className='flex flex-col gap-5 [&>*:nth-child(odd)]:self-start  [&>*:nth-child(even)]:self-end'>\r\n                        {topicRoadMap.map((val, i) => {\r\n                            return (\r\n                                val && (\r\n                                    <RoadMapItem\r\n                                        key={i}\r\n                                        val={val}\r\n                                        className='relative'\r\n                                        isTeacher={isTeacher}\r\n                                    ></RoadMapItem>\r\n                                )\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TokenExpire isOpen={isExpired} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoadMap;\r\n"],"names":["children","className","rest","axiosJWT","createAxiosJWT","isOpen","navigate","useNavigate","handleLogOut","delete","API_URL","localStorage","removeItem","window","location","reload","console","log","style","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","borderRadius","contentLabel","ariaHideApp","onClick","refreshToken","getItem","axios","headers","Authorization","res","data","newInstance","interceptors","request","use","config","accessToken","decodedToken","jwt_decode","exp","Date","now","tokens","setItem","err","val","isTeacher","topicName","prerequisiteTopicName","description","numberSkills","statusTopicOfStudent","isParent","useState","isExpired","setIsExpired","selectedGrade","setSelectedGrade","topicRoadMap","setTopicRoadMap","grades","setGrades","useEffect","getRoadMap","classId","gradeId","studentTopics","id","get","studentInfo","classInfo","grade","length","i","find","topic","isPass","topicId","response","status","getAllGradeOfTeacher","options","value","onChange","getOptionValue","option","getOptionLabel","gradeName","placeholder","map","TokenExpire"],"sourceRoot":""}