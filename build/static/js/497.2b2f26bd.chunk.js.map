{"version":3,"file":"static/js/497.2b2f26bd.chunk.js","mappings":"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","sources":["components/Modals/ConfirmModal.js","components/Table.js","components/Teacher/AssignmentInfo.js","components/Teacher/QuestionBank.js","components/Teacher/GenerateQuestionForAssignenment.js","utils/utils.js","pages/TeacherPages/TeacherAssignment.js"],"sourcesContent":["import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport Button from '../Button'\r\n\r\nconst ConfirmModal = ({ isOpen, message, yesConfirm, noConfirm }) => {\r\n  const customStyles = {\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n    },\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      border: 'none',\r\n      borderRadius: '8px',\r\n    },\r\n  }\r\n\r\n  const handleNoConfirm = () => {\r\n    noConfirm()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      style={customStyles}\r\n      shouldCloseOnOverlayClick={true}\r\n      contentLabel=\"Example Modal\"\r\n      ariaHideApp={false}\r\n    >\r\n      <div className=\"flex flex-col gap-4 w-[500px]\">\r\n        <span className=\"text-2xl font-medium\">Confirm</span>\r\n        <span>{message}</span>\r\n      </div>\r\n      <div className=\"flex flex-row-reverse mt-5 gap-5\">\r\n        <Button onClick={yesConfirm}>Yes</Button>\r\n        <Button onClick={handleNoConfirm}>No</Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmModal\r\n","import React, { memo } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Button from './Button';\r\n\r\nconst Table = ({\r\n    checkboxTable = false,\r\n    customCssTr = '',\r\n    thead = [],\r\n    tbody = [],\r\n    actions = [],\r\n    onClickTh = null,\r\n    checked = [],\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className='overflow-x-auto relative shadow-lg rounded-xl mt-[8px]'>\r\n                <table className='w-full text-xl text-center text-gray-500 dark:text-gray-400 border-separate'>\r\n                    <thead className='text-base text-gray-700 uppercase font-semibold bg-gray-50 dark:bg-gray-700 dark:text-gray-400'>\r\n                        <tr>\r\n                            {checkboxTable && (\r\n                                <th\r\n                                    scope='col'\r\n                                    className='p-4'\r\n                                    style={{ width: '5%' }}\r\n                                ></th>\r\n                            )}\r\n                            {thead &&\r\n                                thead.map((head, index, arr) => {\r\n                                    if (\r\n                                        index === arr.length - 1 &&\r\n                                        !head.title\r\n                                    ) {\r\n                                        return (\r\n                                            <th\r\n                                                key={uuidv4()}\r\n                                                style={{ width: head.width }}\r\n                                                scope='col'\r\n                                                className='py-3 px-1'\r\n                                            ></th>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <th\r\n                                            key={uuidv4()}\r\n                                            style={{ width: head.width }}\r\n                                            scope='col'\r\n                                            className='py-3 px-6'\r\n                                        >\r\n                                            {head.title}\r\n                                        </th>\r\n                                    );\r\n                                })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className='text-base'>\r\n                        {tbody &&\r\n                            tbody.map((body) => {\r\n                                const bodyKeys = Object.keys(body).filter(\r\n                                    (key) => {\r\n                                        return key !== 'id';\r\n                                    }\r\n                                );\r\n                                return (\r\n                                    <tr\r\n                                        key={uuidv4()}\r\n                                        className={\r\n                                            'odd:bg-white even:bg-gray-50 border-b dark:bg-gray-900 dark:border-gray-700 ' +\r\n                                            customCssTr\r\n                                        }\r\n                                    >\r\n                                        {checkboxTable && (\r\n                                            <td\r\n                                                className='p-4'\r\n                                                style={{ width: '5%' }}\r\n                                            >\r\n                                                <div className='flex items-center'>\r\n                                                    <input\r\n                                                        type='checkbox'\r\n                                                        checked={checked.includes(\r\n                                                            body.id\r\n                                                        )}\r\n                                                        className='w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600 cursor-pointer'\r\n                                                        onChange={() =>\r\n                                                            onClickTh(body.id)\r\n                                                        }\r\n                                                    />\r\n                                                    <label className='sr-only'>\r\n                                                        checkbox\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                        )}\r\n                                        {bodyKeys.map((bodyKey, index) => {\r\n                                            return (\r\n                                                <td\r\n                                                    key={uuidv4()}\r\n                                                    className={`py-4 px-6 font-medium dark:text-white truncate`}\r\n                                                    style={{\r\n                                                        maxWidth:\r\n                                                            thead[index][\r\n                                                                'max-width'\r\n                                                            ],\r\n                                                    }}\r\n                                                    onClick={() =>\r\n                                                        onClickTh(body.id)\r\n                                                    }\r\n                                                >\r\n                                                    {body[bodyKey]}\r\n                                                </td>\r\n                                            );\r\n                                        })}\r\n                                        {!!actions.length && (\r\n                                            <td className='py-4 px-1 font-medium whitespace-nowrap text-white flex justify-evenly'>\r\n                                                {actions.map((action) => {\r\n                                                    return (\r\n                                                        <React.Fragment\r\n                                                            key={uuidv4()}\r\n                                                        >\r\n                                                            <Button\r\n                                                                className='rounded-lg border-none text-sm font-semibold bg-primary px-3 py-1.5'\r\n                                                                onClick={() => {\r\n                                                                    action.eventAction &&\r\n                                                                        action.eventAction(\r\n                                                                            body.id\r\n                                                                        );\r\n                                                                }}\r\n                                                            >\r\n                                                                {action.name}\r\n                                                            </Button>\r\n                                                        </React.Fragment>\r\n                                                    );\r\n                                                })}\r\n                                            </td>\r\n                                        )}\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(Table);\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css'\r\n\r\nimport { API_URL } from '../../constant'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\n\r\nimport DatePicker, {\r\n  utils,\r\n} from '@hassanmojab/react-modern-calendar-datepicker'\r\nimport moment from 'moment'\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst AssignmentInfo = ({\r\n  setSelectedAssignmentName,\r\n  setSelectedDueTime,\r\n  setSelectedDoTime,\r\n  setSelectedPassScore,\r\n  setSelectedTotalScore,\r\n  setSelectedRedo,\r\n}) => {\r\n  const { assignmentId } = useParams()\r\n\r\n  const [assignmentName, setAssignmentName] = useState('')\r\n  const [doTime, setDoTime] = useState(0)\r\n  const [passScore, setPassScore] = useState(0)\r\n  const [totalScore, setTotalScore] = useState(0)\r\n  const [redo, setRedo] = useState(0)\r\n  const [selectedDay, setSelectedDay] = useState(utils().getToday())\r\n  const [dueTime, setDueTime] = useState({\r\n    hour: '',\r\n    minute: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    setSelectedAssignmentName(assignmentName)\r\n  }, [setSelectedAssignmentName, assignmentName])\r\n  useEffect(() => {\r\n    setSelectedPassScore(passScore)\r\n  }, [setSelectedPassScore, passScore])\r\n  useEffect(() => {\r\n    setSelectedTotalScore(totalScore)\r\n  }, [setSelectedTotalScore, totalScore])\r\n  useEffect(() => {\r\n    let newDueTime = `${selectedDay.year}-${selectedDay.month}-${selectedDay.day} ${dueTime.hour}:${dueTime.minute}:00`\r\n    setSelectedDueTime(newDueTime)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setSelectedDueTime, dueTime])\r\n  useEffect(() => {\r\n    setSelectedDoTime(doTime)\r\n  }, [setSelectedDoTime, doTime])\r\n  useEffect(() => {\r\n    setSelectedRedo(redo)\r\n  }, [setSelectedRedo, redo])\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `assignment/${assignmentId}`).then((res) => {\r\n      const assignment = res.data\r\n      if (assignment) {\r\n        setAssignmentName(assignment.assignmentName)\r\n        setDueTime({\r\n          hour: moment(assignment.dateDue).hour(),\r\n          minute: moment(assignment.dateDue).minute(),\r\n        })\r\n        setDoTime(assignment.doTime)\r\n        setPassScore(assignment.passScore)\r\n        setTotalScore(assignment.totalScore)\r\n        setRedo(assignment.redo)\r\n      }\r\n    })\r\n  }, [assignmentId])\r\n\r\n  return (\r\n    <div className=\"h-fit\">\r\n      <div className=\"flex flex-col justify-between gap-3\">\r\n        <input\r\n          className=\"text-xl min-w-[360px] transition-all max-w-[360px] focus:border-primary font-medium outline-none border-b-2 resize-x py-2 px-1\"\r\n          value={assignmentName}\r\n          maxLength={45}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              assignmentName === 'Assignment Name'\r\n                ? setAssignmentName('')\r\n                : setAssignmentName(assignmentName)\r\n              // setEnableEdit(!enableEdit);\r\n            }\r\n          }}\r\n          onChange={(e) => {\r\n            setAssignmentName(e.target.value)\r\n          }}\r\n          style={{ width: `${assignmentName.length}ch` }}\r\n        />\r\n\r\n        <div className=\"flex flex-row gap-4 items-center justify-between w-full\">\r\n          <label>Date Due</label>\r\n          <div className=\"flex flex-row gap-3 items-center w-[60%]\">\r\n            <DatePicker\r\n              value={selectedDay}\r\n              onChange={setSelectedDay}\r\n              inputPlaceholder=\"Select a day\"\r\n              calendarPopperPosition=\"bottom\"\r\n              calendarClassName=\"pickday h-[100px] w-full\"\r\n              wrapperClassName=\"pickday w-full\"\r\n              inputClassName={`w-full border-b-2 outline-none`}\r\n              minimumDate={utils().getToday()}\r\n              shouldHighlightWeekends\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row gap-4 items-center justify-between w-full\">\r\n          <label>Due Time</label>\r\n          <div className=\"flex flex-row gap-3 items-center w-[60%]\">\r\n            <div className=\"flex flex-row gap-5\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"hour\"\r\n                value={dueTime.hour}\r\n                onChange={(e) =>\r\n                  setDueTime({ ...dueTime, hour: e.target.value })\r\n                }\r\n                className=\"outline-none px-3 py-1 w-[50%] text-right border-b-2 border-opacity-0 transition-all focus:border-primary\"\r\n              />\r\n              :\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"minute\"\r\n                value={dueTime.minute}\r\n                onChange={(e) =>\r\n                  setDueTime({ ...dueTime, minute: e.target.value })\r\n                }\r\n                className=\"outline-none px-3 py-1 w-[50%] text-right border-b-2 border-opacity-0 transition-all focus:border-primary\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row gap-4 items-center justify-between w-full\">\r\n          <label>Total score</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            className=\"outline-none border-b-2 text-right focus:border-primary px-1 py-[3px] w-[30%] duration-300 transition-all\"\r\n            value={totalScore}\r\n            onChange={(e) => {\r\n              setTotalScore(e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-row gap-4 items-center justify-between w-full\">\r\n          <label>Pass score</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            className=\"outline-none border-b-2 text-right focus:border-primary px-1 py-[3px] w-[30%] duration-300 transition-all\"\r\n            value={passScore}\r\n            onChange={(e) => {\r\n              setPassScore(e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-row gap-10 items-center \">\r\n          <div className=\"flex items-center justify-between w-full\">\r\n            <span>Exam time in</span>\r\n            <div className=\"w-[30%] flex flex-row gap-2 items-center\">\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                className=\"outline-none border-b-2 focus:border-primary px-2 py-[3px] justify-center items-center w-[50px] text-right duration-300 transition-all\"\r\n                value={doTime}\r\n                onChange={(e) => {\r\n                  setDoTime(e.target.value)\r\n                }}\r\n              />\r\n              <span>m</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row gap-10 items-center\">\r\n          <div className=\"flex gap-2 items-center w-full justify-between\">\r\n            <span>Redo</span>\r\n            <div className=\"w-[30%] flex flex-row gap-2 items-center\">\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                className=\"outline-none border-b-2 px-[10px] focus:border-primary py-[3px] justify-center items-center text-right w-[50px] duration-300 transition-all\"\r\n                value={redo}\r\n                onChange={(e) => {\r\n                  setRedo(e.target.value)\r\n                }}\r\n              />\r\n              <span>time{redo > 1 ? 's' : ''}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AssignmentInfo\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\nimport Modal from 'react-modal'\r\n\r\nimport Table from '../Table'\r\nimport { API_URL } from '../../constant'\r\nimport MultiChoice from './AnswerType/MultiChoice'\r\nimport TrueFalse from './AnswerType/TrueFalse'\r\nimport InputAnswer from './AnswerType/InputAnswer'\r\nimport MultiSelect from './AnswerType/MultiSelect'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\nimport Button from '../Button'\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst QuestionBank = ({\r\n  questionsBank,\r\n  onUpdateQuestionBank,\r\n  onCloseModalBank,\r\n}) => {\r\n  const thead = [\r\n    {\r\n      width: '40%',\r\n      'max-width': '200px',\r\n      title: 'CONTENT',\r\n    },\r\n    {\r\n      width: '30%',\r\n      title: 'SKILLS',\r\n    },\r\n    {\r\n      width: '15%',\r\n      title: 'TOPIC',\r\n    },\r\n    {\r\n      width: '10%',\r\n      title: 'GRADE',\r\n    },\r\n    {\r\n      width: '10%',\r\n      title: 'SCORE',\r\n    },\r\n  ]\r\n  const Selectoptions = [\r\n    { value: 1, label: 'Multi Choice' },\r\n    { value: 2, label: 'True False' },\r\n    { value: 3, label: 'Input' },\r\n    { value: 4, label: 'Multi Select' },\r\n  ]\r\n  const levelOption = [\r\n    { value: '', label: 'All Levels' },\r\n    { value: 'Easy', label: 'Easy' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'Hard', label: 'Hard' },\r\n  ]\r\n\r\n  // debugger\r\n  const [bank, setBank] = useState([])\r\n  const [viewBank, setViewBank] = useState([])\r\n  const [valueQuestionBank, setValueQuestionBank] = useState([])\r\n  const [checked, setChecked] = useState([])\r\n  const [questionBank, setQuestionBank] = useState([])\r\n  const [questionsConfirm, setQuestionsConfirm] = useState([])\r\n\r\n  const [grades, setGrades] = useState([])\r\n  const [currentGrade, setCurrentGrade] = useState('')\r\n  const [topics, setTopics] = useState([])\r\n  const [currentTopic, setCurrentTopic] = useState('')\r\n  const [skills, setSkills] = useState([])\r\n  const [currentSkill, setCurrentSkill] = useState('')\r\n  const [currentLevel, setCurrentLevel] = useState('')\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState('')\r\n  const [questionBankContent, setQuestionBankContent] = useState('')\r\n  const [enableHitQuestionBank, setEnableHitQuestionBank] = useState(false)\r\n  const [hintQuestionBank, setHintQuestionBank] = useState(false)\r\n  const [optionQuestionBank, setOptionQuestionBank] = useState({\r\n    multiChoice: [\r\n      { isTrue: false, answers: '' },\r\n      { isTrue: false, answers: '' },\r\n      { isTrue: false, answers: '' },\r\n      { isTrue: false, answers: '' },\r\n    ],\r\n    multiSelect: [],\r\n    input: [],\r\n    trueFalse: [],\r\n  })\r\n  const [selectedOptionType, setSelectedOptionType] = useState({})\r\n  const [score, setScore] = useState(0)\r\n\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n  const [pageCount, setPageCount] = useState(0)\r\n  const [itemOffset, setItemOffset] = useState(0)\r\n  const [level, setLevel] = useState('')\r\n\r\n  const bankFormula = useRef()\r\n\r\n  const handlePageClick = (event) => {\r\n    setCurrentPage(event.selected + 1)\r\n    const newOffset = (event.selected * 5) % bank.length\r\n    setItemOffset(newOffset)\r\n  }\r\n\r\n  const [modalConfirmQuestionIsOpen, setConfirmQuestionIsOpen] = React.useState(\r\n    false,\r\n  )\r\n\r\n  const [searchParam, setSearchParam] = useState('')\r\n  const handleOpenConfirmQuestion = () => {\r\n    const questionChecked = questionBank.map((question) => {\r\n      return {\r\n        id: question.id,\r\n        content: question.content,\r\n        skills: question.skillName,\r\n        topic: question.topicName,\r\n        grade: question.gradeName,\r\n        score: question.score,\r\n      }\r\n    })\r\n    setQuestionsConfirm(questionChecked)\r\n    setConfirmQuestionIsOpen(true)\r\n  }\r\n\r\n  const handleCloseConfirmQuestion = () => {\r\n    setQuestionsConfirm([])\r\n    setConfirmQuestionIsOpen(false)\r\n  }\r\n\r\n  const handleConfirmQuestionBank = () => {\r\n    onUpdateQuestionBank(questionBank)\r\n    onCloseModalBank()\r\n\r\n    handleCloseConfirmQuestion()\r\n  }\r\n\r\n  const handleClickQuestionBank = (id) => {\r\n    setChecked((prev) => {\r\n      const isChecked = prev.includes(id)\r\n      if (isChecked) {\r\n        setQuestionBank((prevQuestions) => {\r\n          return prevQuestions.filter((question) => {\r\n            return question.id !== id\r\n          })\r\n        })\r\n        if (id === currentQuestion) handleReviewQuestionBank()\r\n        return prev.filter((item) => item !== id)\r\n      }\r\n      setQuestionBank((prevQuestions) => {\r\n        const question = valueQuestionBank.find(\r\n          (questionInBank) => questionInBank.id === id,\r\n        )\r\n        handleReviewQuestionBank(question)\r\n        return question ? [...prevQuestions, question] : prevQuestions\r\n      })\r\n      return [...prev, id]\r\n    })\r\n  }\r\n\r\n  const handleReviewQuestionBank = (data) => {\r\n    setCurrentQuestion(data?.id || '')\r\n    setQuestionBankContent(data?.content || '')\r\n    setEnableHitQuestionBank(!!data?.hint)\r\n    setHintQuestionBank(data?.hint || '')\r\n    setOptionQuestionBank(\r\n      data?.option || {\r\n        multiChoice: [\r\n          { isTrue: false, answers: '' },\r\n          { isTrue: false, answers: '' },\r\n          { isTrue: false, answers: '' },\r\n          { isTrue: false, answers: '' },\r\n        ],\r\n        multiSelect: [],\r\n        input: [],\r\n        trueFalse: [],\r\n      },\r\n    )\r\n    setLevel(data?.level || '')\r\n    setSelectedOptionType(Selectoptions[data?.questionTypeId - 1] || '')\r\n    setScore(data?.score || 0)\r\n  }\r\n\r\n  const convertResToOption = (value, label) => {\r\n    return {\r\n      value: value,\r\n      label: label,\r\n    }\r\n  }\r\n\r\n  const getQuestionBank = (gradeId, topicId, skillId, level) => {\r\n    axiosJWT\r\n      .get(\r\n        API_URL +\r\n          `question/question-bank?gradeId=${gradeId}&topicId=${topicId}&skillId=${skillId}&level=${level}`,\r\n      )\r\n      .then((res) => {\r\n        const bank = res.data\r\n        const questions = []\r\n        for (let i = 0; i < bank.length; ++i) {\r\n          questions.push({\r\n            id: bank[i].id,\r\n            content: bank[i].content,\r\n            skills: bank[i].skillName,\r\n            topic: bank[i].topicName,\r\n            grade: bank[i].gradeName,\r\n            score: bank[i].score,\r\n          })\r\n        }\r\n        setBank(questions)\r\n        setValueQuestionBank(bank)\r\n        setCurrentPage(bank.length > 0 ? 1 : 0)\r\n      })\r\n  }\r\n\r\n  const getAllGrades = () => {\r\n    axiosJWT.get(API_URL + `grade`).then((res) => {\r\n      const grades = res.data\r\n      const option = []\r\n      option.push({\r\n        value: '',\r\n        label: 'All Grades',\r\n      })\r\n      for (let i = 0; i < grades.length; i++)\r\n        option.push(convertResToOption(grades[i].id, grades[i].gradeName))\r\n      setGrades(option)\r\n    })\r\n  }\r\n\r\n  const getAllTopics = () => {\r\n    axiosJWT.get(API_URL + `topic`).then((res) => {\r\n      const topics = res.data\r\n      const option = []\r\n      option.push({\r\n        value: '',\r\n        label: 'All Topics',\r\n      })\r\n      for (let i = 0; i < topics.length; i++)\r\n        option.push(convertResToOption(topics[i].id, topics[i].topicName))\r\n      setTopics(option)\r\n    })\r\n  }\r\n\r\n  const getAllSkills = () => {\r\n    axiosJWT.get(API_URL + `skill`).then((res) => {\r\n      const skills = res.data\r\n      const option = []\r\n      option.push({\r\n        value: '',\r\n        label: 'All Skills',\r\n      })\r\n      for (let i = 0; i < skills.length; i++)\r\n        option.push(convertResToOption(skills[i].id, skills[i].skillName))\r\n      setSkills(option)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllGrades()\r\n    getAllTopics()\r\n    getAllSkills()\r\n    if (questionsBank) {\r\n      setQuestionBank(questionsBank)\r\n      for (let i = 0; i < questionsBank.length; i++) {\r\n        handleClickQuestionBank(questionsBank[i].id)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getQuestionBank(currentGrade, currentTopic, currentSkill, currentLevel)\r\n    document.body.style.overflow = 'hidden'\r\n    return () => (document.body.style.overflow = 'unset')\r\n  }, [currentGrade, currentTopic, currentSkill, currentLevel])\r\n\r\n  useEffect(() => {\r\n    bankFormula.current.setValue(questionBankContent || '')\r\n  }, [questionBankContent])\r\n\r\n  useEffect(() => {\r\n    const endOffset = itemOffset + 5\r\n    const filteredBank = bank.filter((val) => {\r\n      if (\r\n        searchParam === '' ||\r\n        val.content.toLowerCase().includes(searchParam.toLowerCase())\r\n      )\r\n        return val\r\n      return ''\r\n    })\r\n    setViewBank(filteredBank.slice(itemOffset, endOffset))\r\n    // setViewBank(bank.filter);\r\n    console.log(Math.ceil(filteredBank.length / 5))\r\n    setPageCount(Math.ceil(filteredBank.length / 5))\r\n  }, [itemOffset, bank, searchParam])\r\n\r\n  return (\r\n    <div className=\"px-8 h-full relative\">\r\n      <i\r\n        className=\"fas fa-times text-2xl right-[8px] absolute cursor-pointer\"\r\n        onClick={onCloseModalBank}\r\n      ></i>\r\n\r\n      <div className=\"flex flex-row justify-between pt-8 h-full w-full\">\r\n        <div className=\"w-[40%] flex flex-col justify-between\">\r\n          <div className=\"flex flex-row gap-7\">\r\n            <span className=\"text-xl font-medium flex gap-2 min-w-[160px]\">\r\n              Level :\r\n              <span\r\n                className={` ${\r\n                  level === 'Hard'\r\n                    ? `text-red-400`\r\n                    : level === 'Medium'\r\n                    ? `text-yellow-400`\r\n                    : 'text-green-400'\r\n                } `}\r\n              >\r\n                {level}\r\n              </span>\r\n            </span>\r\n            <span className=\"flex text-xl font-medium gap-2\">\r\n              Score:\r\n              <div className=\"flex font-normal\">\r\n                <div className=\"flex justify-end min-w-[32px]\">\r\n                  {score || 0}\r\n                </div>\r\n                <span>.pt</span>\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <math-field\r\n            id=\"Bank-modal-formula\"\r\n            ref={bankFormula}\r\n            style={{\r\n              whiteSpace: 'initial',\r\n              fontSize: '20px',\r\n              outline: 'none',\r\n              padding: '0.5rem 1.5rem',\r\n              userSelect: 'none',\r\n              width: '100%',\r\n              maxHeight: '150px',\r\n              overflowWrap: 'break-word',\r\n              fontFamily: 'Poppins',\r\n            }}\r\n            readonly\r\n          ></math-field>\r\n          <motion.div\r\n            layout\r\n            animate={{ opacity: 1 }}\r\n            initial={{ opacity: 0 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"duration-300 h-[48px]\"\r\n          >\r\n            {enableHitQuestionBank && (\r\n              <div className=\"px-6 py-3 text-white flex flex-row gap-4 items-center bg-primary rounded-md overflow-hidden w-full break-words\">\r\n                <i className=\"far fa-lightbulb\"></i>\r\n                <span className=\" whitespace-pre-line\">\r\n                  {hintQuestionBank ? hintQuestionBank : 'Hint'}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n          <div className=\"h-[350px] overflow-y-auto\">\r\n            {selectedOptionType?.value === 1 ? (\r\n              <MultiChoice\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : selectedOptionType?.value === 2 ? (\r\n              <TrueFalse\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : selectedOptionType?.value === 3 ? (\r\n              <InputAnswer\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : selectedOptionType?.value === 4 ? (\r\n              <MultiSelect\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col w-[58%] h-full\">\r\n          <div className=\"flex flex-col h-[152px] justify-center align-center\">\r\n            <div className=\"flex flex-col w-full items-center px-[4px] pb-[4px]\">\r\n              <div className=\"flex justify-between w-full px-[4px] pb-[4px]\">\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={grades}\r\n                  placeholder=\"Grade\"\r\n                  onChange={(e) => setCurrentGrade(e.value)}\r\n                />\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={topics}\r\n                  placeholder=\"Topic\"\r\n                  onChange={(e) => setCurrentTopic(e.value)}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between w-full p-[4px]\">\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={levelOption}\r\n                  placeholder=\"Level\"\r\n                  onChange={(e) => setCurrentLevel(e.value)}\r\n                />\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={skills}\r\n                  placeholder=\"Skill\"\r\n                  onChange={(e) => setCurrentSkill(e.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full px-[8px] pb-[4px]\">\r\n              <div className=\"flex justify-center\">\r\n                <div className=\"flex flex-row w-full\">\r\n                  <input\r\n                    type=\"search\"\r\n                    onChange={(e) => setSearchParam(e.target.value)}\r\n                    id=\"search-dropdown\"\r\n                    className=\"block p-2.5 w-full outline-primary transition-all text-sm text-gray-900 bg-gray-50 rounded-l-lg border border-gray-300 \"\r\n                    placeholder=\"Search question\"\r\n                    required=\"\"\r\n                  />\r\n                  <button className=\"top-0 right-0 p-2.5 text-sm font-medium text-white bg-blue-700 rounded-r-lg border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\r\n                    <i className=\"fa fa-search\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"grow\">\r\n            <div className=\"flex flex-col justify-between h-[100%]\">\r\n              <div className=\"grow\">\r\n                <Table\r\n                  checkboxTable={true}\r\n                  thead={thead}\r\n                  tbody={viewBank}\r\n                  actions={[]}\r\n                  customCssTr=\"cursor-pointer\"\r\n                  onClickTh={handleClickQuestionBank}\r\n                  checked={checked}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between p-4\">\r\n                <div>\r\n                  <Button onClick={handleOpenConfirmQuestion}>\r\n                    Save Questions\r\n                  </Button>\r\n                  <Modal\r\n                    isOpen={modalConfirmQuestionIsOpen}\r\n                    style={{\r\n                      top: '0',\r\n                      left: '0',\r\n                      right: 'auto',\r\n                      bottom: 'auto',\r\n                      marginRight: '-50%',\r\n                      transform: 'translate(-50%, -50%)',\r\n                    }}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                  >\r\n                    <div className=\"h-full px-[20px] relative\">\r\n                      {/* <i\r\n                                    className='fas fa-times text-2xl right-[8px] absolute'\r\n                                    onClick={handleCloseConfirmQuestion}\r\n                                ></i> */}\r\n                      <div className=\"flex flex-col justify-between pt-8 h-full\">\r\n                        <div className=\"\">\r\n                          <span>Do you want add these questions?</span>\r\n                          <Table\r\n                            checkboxTable={false}\r\n                            thead={thead}\r\n                            tbody={questionsConfirm}\r\n                            actions={[]}\r\n                            onClickTh={handleClickQuestionBank}\r\n                            checked={checked}\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex justify-between self-center w-64 mb-4\">\r\n                          <Button onClick={handleCloseConfirmQuestion}>\r\n                            Cancel\r\n                          </Button>\r\n                          <Button onClick={handleConfirmQuestionBank}>\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Modal>\r\n                </div>\r\n                <ReactPaginate\r\n                  breakLabel=\"...\"\r\n                  nextLabel={\r\n                    <button>\r\n                      Next <i className=\"fas fa-angle-right\"></i>\r\n                    </button>\r\n                  }\r\n                  onPageChange={handlePageClick}\r\n                  pageRangeDisplayed={1}\r\n                  marginPagesDisplayed={2}\r\n                  pageCount={pageCount}\r\n                  previousLabel={\r\n                    <button>\r\n                      <i className=\"fas fa-angle-left\"></i> Previous\r\n                    </button>\r\n                  }\r\n                  renderOnZeroPageCount={null}\r\n                  className=\"flex flex-row text-gray-500 gap-7 justify-center font-semibold items-center\"\r\n                  activeClassName=\"bg-primary text-white flex justify-center items-center w-8 h-8 rounded-full shadow-lg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionBank\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Select from 'react-select'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { API_URL } from '../../constant'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\nimport Button from '../Button'\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst GenerateQuestionForAssignenment = ({\r\n  selectedGrade,\r\n  selectedTopic,\r\n  selectedSkills,\r\n  listCurrentQuestion,\r\n  onCloseModalGenerate,\r\n  onUpdateGenerateQuestion,\r\n}) => {\r\n  const { assignmentId } = useParams()\r\n\r\n  const [isHint, setIsHint] = useState(false)\r\n  const [levels, setLevels] = useState([])\r\n  const [questionTypes, setQuestionTypes] = useState([])\r\n  const [gradeId, setGradeId] = useState()\r\n  const [topicId, setTopicId] = useState()\r\n  const [skillIds, setSkillIds] = useState()\r\n  const [numberQuestion, setNumberQuestion] = useState(0)\r\n\r\n  const [listGrade, setListGrade] = useState([])\r\n  const [listTopic, setListTopic] = useState([])\r\n  const [listSkill, setListSkill] = useState([])\r\n\r\n  const selectGrade = useRef()\r\n  const selectTopic = useRef()\r\n  const selectSkill = useRef()\r\n  const prevSkill = useRef(selectedSkills[0])\r\n\r\n  const levelOptions = [\r\n    { value: 'Easy', label: 'Easy' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'Hard', label: 'Hard' },\r\n  ]\r\n  const selectOptions = [\r\n    { value: 1, label: 'Multi Choice' },\r\n    { value: 2, label: 'True False' },\r\n    { value: 3, label: 'Input' },\r\n    { value: 4, label: 'Multi Select' },\r\n  ]\r\n  const hintOption = [\r\n    { value: false, label: 'No' },\r\n    { value: true, label: 'Yes' },\r\n  ]\r\n\r\n  const convertResToOption = (value, label) => {\r\n    return {\r\n      value: value,\r\n      label: label,\r\n    }\r\n  }\r\n  const handleSelectLevels = (e) => {\r\n    setLevels(() => {\r\n      const values = []\r\n      for (let i = 0; i < e.length; ++i) values.push(e[i].value)\r\n      return values\r\n    })\r\n  }\r\n  const handleSelectQuestionTypes = (e) => {\r\n    setQuestionTypes(() => {\r\n      const values = []\r\n      for (let i = 0; i < e.length; ++i) values.push(e[i].value)\r\n      return values\r\n    })\r\n  }\r\n  const handleSelectSkills = (e) => {\r\n    setSkillIds(() => {\r\n      const values = []\r\n      for (let i = 0; i < e.length; ++i) values.push(e[i].value)\r\n      return values\r\n    })\r\n  }\r\n\r\n  const handleGenerateQuestionForAssignment = () => {\r\n    const currentQuestions = listCurrentQuestion.map((question) => question.id)\r\n    const conditions = {\r\n      assignmentId: assignmentId,\r\n      numberQuestion: numberQuestion,\r\n      levels: levels || [],\r\n      isHint: isHint,\r\n      questionTypes: questionTypes || [],\r\n      skillIds: skillIds || [],\r\n      topicId: topicId,\r\n      gradeId: gradeId,\r\n      currentQuestions: currentQuestions || [],\r\n    }\r\n    axiosJWT\r\n      .post(API_URL + `assignment-question/generate`, conditions)\r\n      .then((res) => {\r\n        onUpdateGenerateQuestion(res.data)\r\n        onCloseModalGenerate()\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `grade/teacher`).then((res) => {\r\n      const grades = res.data\r\n      const option = []\r\n      for (let i = 0; i < grades.length; i++)\r\n        option.push(convertResToOption(grades[i].id, grades[i].gradeName))\r\n      setListGrade(option)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `topic/teacher/grade/${gradeId}`).then((res) => {\r\n      const topics = res.data\r\n      const option = []\r\n      for (let i = 0; i < topics.length; i++)\r\n        option.push(convertResToOption(topics[i].id, topics[i].topicName))\r\n      setListTopic(option)\r\n    })\r\n  }, [gradeId])\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `skill/topic/${topicId}`).then((res) => {\r\n      const skills = res.data\r\n      const option = []\r\n      for (let i = 0; i < skills.length; i++)\r\n        option.push(convertResToOption(skills[i].id, skills[i].skillName))\r\n      setListSkill(option)\r\n    })\r\n  }, [topicId])\r\n\r\n  useEffect(() => {\r\n    if (listGrade.length > 0) {\r\n      const grade = listGrade.find((grade) => grade?.value === selectedGrade)\r\n      selectGrade.current.setValue(\r\n        convertResToOption(grade?.value, grade?.label),\r\n      )\r\n    }\r\n  }, [selectedGrade, listGrade])\r\n\r\n  useEffect(() => {\r\n    if (listTopic.length > 0) {\r\n      const topic = listTopic.find((topic) => topic?.value === selectedTopic)\r\n      selectTopic.current.setValue(\r\n        convertResToOption(topic?.value, topic?.label),\r\n      )\r\n    }\r\n  }, [selectedTopic, listTopic])\r\n\r\n  useEffect(() => {\r\n    if (listSkill?.length === 0) {\r\n      prevSkill.current = null\r\n    }\r\n    if (\r\n      selectedSkills &&\r\n      listSkill.length > 0 &&\r\n      selectedSkills.length > 0 &&\r\n      prevSkill.current !== selectedSkills[0]\r\n    ) {\r\n      prevSkill.current = selectedSkills[0]\r\n      const skill = listSkill.find(\r\n        (skill) => skill?.value === selectedSkills[0],\r\n      )\r\n\r\n      if (skill)\r\n        selectSkill.current.setValue(\r\n          convertResToOption(skill?.value, skill?.label),\r\n        )\r\n    }\r\n  }, [selectedSkills, listSkill])\r\n\r\n  return (\r\n    <div className=\"px-8 h-full relative\">\r\n      <i\r\n        className=\"fas fa-times text-2xl right-[8px] absolute cursor-pointer\"\r\n        onClick={onCloseModalGenerate}\r\n      ></i>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\" flex flex-col justify-between w-[720px] gap-4\">\r\n          <div className=\"flex\">\r\n            <h2 className=\"text-3xl font-[500]\">\r\n              Generate questions for assignment\r\n            </h2>\r\n          </div>\r\n          <div className=\"flex flex-col gap-2\">\r\n            <span>Level </span>\r\n            <Select\r\n              placeholder=\"Select levels...\"\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={levelOptions}\r\n              onChange={handleSelectLevels}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col gap-2\">\r\n            <span>Question type</span>\r\n            <Select\r\n              placeholder=\"Select question types...\"\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={selectOptions}\r\n              onChange={handleSelectQuestionTypes}\r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-row gap-2 items-center\">\r\n            <span>Quantity of question</span>\r\n            <input\r\n              className=\"outline-none border-b-2 py-1 px-2 justify-center items-center text-right w-[60px] duration-300 transition-all\"\r\n              value={numberQuestion}\r\n              onChange={(e) => {\r\n                setNumberQuestion(() => {\r\n                  if (Number(e.target.value)) return Number(e.target.value)\r\n                  return 0\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-row\">\r\n            <div className=\"flex flex-row items-center gap-2 w-[50%]\">\r\n              <span className=\"mr-1\">Grade</span>\r\n              <Select\r\n                ref={selectGrade}\r\n                options={listGrade}\r\n                placeholder=\"Select grade...\"\r\n                styles={{\r\n                  menuList: (base) => ({\r\n                    ...base,\r\n                    maxHeight: '180px', // your desired height\r\n                  }),\r\n                }}\r\n                onChange={(e) => setGradeId(e.value)}\r\n                className=\"w-[180px]\"\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-row items-center gap-2 w-[50%]\">\r\n              <span>Topic</span>\r\n              <Select\r\n                ref={selectTopic}\r\n                options={listTopic}\r\n                styles={{\r\n                  menuList: (base) => ({\r\n                    ...base,\r\n                    maxHeight: '180px', // your desired height\r\n                  }),\r\n                }}\r\n                placeholder=\"Select topic...\"\r\n                onChange={(e) => setTopicId(e.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-row gap-6\">\r\n            <span className=\"flex items-center\">Skills</span>\r\n            <div>\r\n              <Select\r\n                ref={selectSkill}\r\n                placeholder=\"Select question types...\"\r\n                closeMenuOnSelect={false}\r\n                isMulti\r\n                options={listSkill}\r\n                onChange={handleSelectSkills}\r\n                className=\"min-w-[452px] max-w-[452px]\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-row gap-2 items-center mb-5\">\r\n            <span>Would you like a hint?</span>\r\n            <Select\r\n              options={hintOption}\r\n              defaultValue={hintOption[0]}\r\n              onChange={(e) => setIsHint(e.value)}\r\n              className=\"w-[180px]\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-center w-full\">\r\n            <Button\r\n              className=\"btn btn-primary w-[50%]\"\r\n              onClick={handleGenerateQuestionForAssignment}\r\n            >\r\n              Generate\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenerateQuestionForAssignenment\r\n","export function substringBetween(s, a, b) {\r\n  var p = s.indexOf(a) + a.length\r\n  return s.substring(p, s.indexOf(b, p))\r\n}\r\n\r\nexport function insertTextAtCurrentCursor(position, string, text) {\r\n  return (\r\n    string.substring(0, position) +\r\n    text +\r\n    string.substring(position, string?.length)\r\n  )\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react'\r\nimport 'mathlive'\r\nimport Select from 'react-select'\r\nimport { motion } from 'framer-motion'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n// import { utils } from 'react-modern-calendar-datepicker';\r\n// import DatePicker from '@hassanmojab/react-modern-calendar-datepicker';\r\nimport Modal from 'react-modal'\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css'\r\n\r\nimport { API_URL } from '../../constant'\r\nimport Button from '../../components/Button'\r\nimport AssignmentInfo from '../../components/Teacher/AssignmentInfo'\r\nimport QuestionItem from '../../components/Teacher/QuestionItem'\r\nimport MultiChoice from '../../components/Teacher/AnswerType/MultiChoice'\r\nimport TrueFalse from '../../components/Teacher/AnswerType/TrueFalse'\r\nimport InputAnswer from '../../components/Teacher/AnswerType/InputAnswer'\r\nimport MultiSelect from '../../components/Teacher/AnswerType/MultiSelect'\r\nimport QuestionBank from '../../components/Teacher/QuestionBank'\r\nimport GenerateQuestionForAssignenment from '../../components/Teacher/GenerateQuestionForAssignenment'\r\nimport QuestionOption from '../../components/Teacher/QuestionOption'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\nimport ConfirmModal from '../../components/Modals/ConfirmModal'\r\nimport { insertTextAtCurrentCursor } from '../../utils/utils'\r\nimport { useRef } from 'react'\r\n\r\nconst customStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n  },\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n  },\r\n}\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst TeacherAssignment = () => {\r\n  const Selectoptions = [\r\n    { value: 1, label: 'Multi Choice' },\r\n    { value: 2, label: 'True False' },\r\n    { value: 3, label: 'Input' },\r\n    { value: 4, label: 'Multi Select' },\r\n  ]\r\n  const { skillId, classId, assignmentId } = useParams()\r\n  const [assignmentInfo, setAssignmentInfo] = useState({})\r\n\r\n  useEffect(() => {\r\n    setAssignmentInfo((prev) => {\r\n      prev.skillId = skillId\r\n      prev.classId = classId\r\n      prev.assignmentId = assignmentId\r\n      return prev\r\n    })\r\n  }, [skillId, classId, assignmentId])\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `skill/${skillId}`).then((res) => {\r\n      setAssignmentInfo((prev) => {\r\n        prev.gradeId = res.data?.gradeId\r\n        prev.topicId = res.data?.topicId\r\n        return prev\r\n      })\r\n    })\r\n  }, [skillId])\r\n\r\n  const navigate = useNavigate()\r\n  const [question, setQuestion] = useState('')\r\n  const [questionList, setQuestionList] = useState([])\r\n  const [score, setScore] = useState(0)\r\n  const [selectedOption, setSelectedOption] = useState(Selectoptions[0])\r\n  const [disable, setDisable] = useState(false)\r\n\r\n  //save\r\n  const [openSaveConfirm, setOpenSaveConfirm] = useState(false)\r\n\r\n  const [enableHint, setEnableHint] = useState(false)\r\n  const [hint, setHint] = useState('')\r\n  const [answers, setAnswers] = useState({\r\n    multiChoice: [\r\n      { isTrue: false, answer: '' },\r\n      { isTrue: false, answer: '' },\r\n      { isTrue: false, answer: '' },\r\n      { isTrue: false, answer: '' },\r\n    ],\r\n    multiSelect: [],\r\n    input: [],\r\n    trueFalse: [],\r\n  })\r\n  const levelOption = [\r\n    { value: 'Easy', label: 'Easy' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'Hard', label: 'Hard' },\r\n  ]\r\n  const [currentQid, setCurrentQid] = useState('')\r\n  const [, forceUpdate] = useReducer((x) => x + 1, 0)\r\n\r\n  const [selectedGrade, setSelectedGrade] = useState({})\r\n  const [selectedTopic, setSelectedTopic] = useState({})\r\n  const [selectedSkills, setSelectedSkills] = useState([])\r\n  const [selectedLevel, setSelectedLevel] = useState(levelOption[0])\r\n\r\n  const [selectedAssignmentName, setSelectedAssignmentName] = useState('')\r\n  const [selectedTotalScore, setSelectedTotalScore] = useState(0)\r\n  const [selectedPassScore, setSelectedPassScore] = useState(0)\r\n  const [selectedDueTime, setSelectedDueTime] = useState(0)\r\n  const [selectedDoTime, setSelectedDoTime] = useState(0)\r\n  const [selectedRedo, setSelectedRedo] = useState(0)\r\n\r\n  const [modalBankIsOpen, setBankIsOpen] = useState(false)\r\n  const [modalGenerateIsOpen, setGenerateIsOpen] = useState(false)\r\n\r\n  const handleOpenModalBank = () => {\r\n    setBankIsOpen(true)\r\n  }\r\n\r\n  const handleCloseModalBank = () => {\r\n    setBankIsOpen(false)\r\n  }\r\n\r\n  const handleOpenModalGenerate = () => {\r\n    setGenerateIsOpen(true)\r\n  }\r\n\r\n  const handleCloseModalGenerate = () => {\r\n    setGenerateIsOpen(false)\r\n  }\r\n\r\n  const handleUpdateQuestionBank = (questionBank) => {\r\n    setQuestionList([...questionBank])\r\n  }\r\n  const handleUpdateGenerateQuestion = (questionGenerate) => {\r\n    setQuestionList([...questionList, ...questionGenerate])\r\n  }\r\n  const handleScore = (e) => {\r\n    const score = Math.max(0, Math.min(100, Number(e.target.value)))\r\n    setScore(score)\r\n  }\r\n\r\n  const handleEnableHint = () => {\r\n    setEnableHint(!enableHint)\r\n  }\r\n  const resetValue = () => {\r\n    setCurrentQid('')\r\n    setScore(0)\r\n    setQuestion('')\r\n    setHint('')\r\n    setEnableHint(false)\r\n    setSelectedOption(Selectoptions[0])\r\n    setAnswers({\r\n      multiChoice: [\r\n        { isTrue: false, answer: '' },\r\n        { isTrue: false, answer: '' },\r\n        { isTrue: false, answer: '' },\r\n        { isTrue: false, answer: '' },\r\n      ],\r\n      multiSelect: [],\r\n      input: [],\r\n      trueFalse: [],\r\n    })\r\n    setSelectedLevel(levelOption[0])\r\n    forceUpdate()\r\n  }\r\n\r\n  const addQuestionItem = () => {\r\n    if (selectedOption?.value === 1) {\r\n      let filteredArr = answers.multiChoice.reduce((acc, current) => {\r\n        const x = acc.find((item) => item.answer === current.answer)\r\n        if (!x) {\r\n          return acc.concat([current])\r\n        } else {\r\n          return acc\r\n        }\r\n      }, [])\r\n      if (\r\n        filteredArr.length !== answers.multiChoice.length ||\r\n        answers.multiChoice.some((val) => val.answer === '')\r\n      ) {\r\n        return setDisable(true)\r\n      }\r\n\r\n      if (!answers.multiChoice.some((val) => val.isTrue === true)) {\r\n        return setDisable(true)\r\n      }\r\n    }\r\n\r\n    if (selectedOption?.value === 2) {\r\n      if (!answers.trueFalse.some((val) => val.isTrue === true)) {\r\n        return setDisable(true)\r\n      }\r\n    }\r\n\r\n    if (selectedOption?.value === 3) {\r\n      if (!answers.input[0]) {\r\n        return setDisable(true)\r\n      }\r\n    }\r\n\r\n    if (selectedOption?.value === 4) {\r\n      let filteredArr = answers.multiSelect.reduce((acc, current) => {\r\n        const x = acc.find((item) => item.answer === current.answer)\r\n        if (!x) {\r\n          return acc.concat([current])\r\n        } else {\r\n          return acc\r\n        }\r\n      }, [])\r\n      if (\r\n        filteredArr.length !== answers.multiSelect.length ||\r\n        answers.multiSelect.some((val) => val.answer === '')\r\n      ) {\r\n        return setDisable(true)\r\n      }\r\n\r\n      if (!answers.multiChoice.some((val) => val.isTrue === true)) {\r\n        return setDisable(true)\r\n      }\r\n    }\r\n\r\n    setDisable(false)\r\n\r\n    if (questionList.find((item) => item.id === currentQid)) {\r\n      let index = questionList.findIndex((item) => item.id === currentQid)\r\n      const questionUpdate = {\r\n        content: question,\r\n        option: answers,\r\n        hint: hint,\r\n        score: score,\r\n        level: selectedLevel?.label,\r\n        skillIds: [selectedSkills[0]?.value],\r\n        questionTypeId: selectedOption?.value,\r\n      }\r\n      console.log('Question update', questionUpdate)\r\n      axiosJWT\r\n        .put(API_URL + `question/${currentQid}`, questionUpdate)\r\n        .then((res) => {\r\n          questionList[index] = {\r\n            id: res.data?.id,\r\n            content: res.data?.content,\r\n            hint: res.data?.hint,\r\n            score: res.data?.score,\r\n            option: res.data?.option,\r\n            level: res.data?.level,\r\n            questionTypeId: res.data?.questionTypeId,\r\n            teacherId: res.data?.teacherId,\r\n            gradeId: res.data?.gradeId,\r\n            topicId: res.data?.topicId,\r\n            skillIds: res.data?.skillIds,\r\n          }\r\n          setQuestionList([...questionList])\r\n          resetValue()\r\n        })\r\n        .catch((err) => console.log(err))\r\n      return\r\n    }\r\n    let questionCreate = {\r\n      content: question,\r\n      option: answers,\r\n      hint: hint,\r\n      score: score,\r\n      level: selectedLevel?.label,\r\n      skillIds: [selectedSkills[0]?.value],\r\n      questionTypeId: selectedOption?.value,\r\n    }\r\n    axiosJWT\r\n      .post(API_URL + `question`, questionCreate)\r\n      .then((res) => {\r\n        const questionNewCreate = {\r\n          id: res.data?.id,\r\n          content: res.data?.content,\r\n          hint: res.data?.hint,\r\n          score: res.data?.score,\r\n          option: res.data?.option,\r\n          level: res.data?.level,\r\n          questionTypeId: res.data?.questionTypeId,\r\n          teacherId: res.data?.teacherId,\r\n          gradeId: res.data?.gradeId,\r\n          topicId: res.data?.topicId,\r\n          skillIds: res.data?.skillIds,\r\n        }\r\n        setQuestionList([...questionList, questionNewCreate])\r\n        resetValue()\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const removeQuestionItem = (id) => {\r\n    const newList = questionList.filter((item) => item.id !== id)\r\n    setQuestionList(newList)\r\n    resetValue()\r\n  }\r\n\r\n  const handleSaveAssignment = async ({ isTrial }) => {\r\n    const assignment = {\r\n      assignmentName: selectedAssignmentName,\r\n      doTime: selectedDoTime,\r\n      dueTime: selectedDueTime,\r\n      passScore: selectedPassScore,\r\n      totalScore: selectedTotalScore,\r\n      redo: selectedRedo,\r\n    }\r\n    await axiosJWT.put(API_URL + `assignment/${assignmentId}`, assignment)\r\n\r\n    const questionIds = questionList.map((question) => question.id)\r\n    await axiosJWT.put(\r\n      API_URL + `assignment-question/assignment/${assignmentId}`,\r\n      {\r\n        questionIds,\r\n      },\r\n    )\r\n\r\n    if (classId) {\r\n      await axiosJWT.put(\r\n        API_URL +\r\n          `class-assignment/class/${classId}/assignment/${assignmentId}`,\r\n        {\r\n          dueDay: selectedDueTime,\r\n        },\r\n      )\r\n      await axiosJWT.put(\r\n        API_URL +\r\n          `student-assignment/assignment/${assignmentId}/class/${classId}/date-due`,\r\n        {\r\n          dueDay: selectedDueTime,\r\n        },\r\n      )\r\n    }\r\n    if (isTrial) {\r\n      await axiosJWT.put(\r\n        API_URL + `teacher-assignment/teacher/assignment/${assignmentId}/trial`,\r\n      )\r\n      return navigate(`/assignment/${assignmentId}/question`)\r\n    }\r\n    return navigate(-1)\r\n  }\r\n\r\n  const convertResToOption = (value, label) => {\r\n    return {\r\n      value: value,\r\n      label: label,\r\n    }\r\n  }\r\n\r\n  const [listGrade, setListGrade] = useState([])\r\n  const [listTopic, setListTopic] = useState([])\r\n  const [listSkill, setListSkill] = useState([])\r\n\r\n  const handleReviewQuestion = (data) => {\r\n    setCurrentQid(data?.id)\r\n    setQuestion(data?.content)\r\n    if (data?.hint !== '') {\r\n      setEnableHint(true)\r\n      setHint(data?.hint)\r\n    } else {\r\n      setEnableHint(false)\r\n      setHint('')\r\n    }\r\n    setAnswers(data?.option)\r\n    setScore(data?.score)\r\n    setSelectedOption(Selectoptions[data?.questionTypeId - 1])\r\n    //\r\n    setSelectedLevel(levelOption.find((val) => val.label === data?.level))\r\n    setSelectedGrade(listGrade.find((val) => val.value === data?.gradeId))\r\n    setSelectedTopic(listTopic.find((val) => val.value === data?.topicId))\r\n    setSelectedSkills([\r\n      listSkill && listSkill.find((val) => val.value === data?.skillIds[0]),\r\n    ])\r\n  }\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `grade/teacher`).then((res) => {\r\n      const grades = res.data\r\n      const option = []\r\n      for (let i = 0; i < grades.length; i++)\r\n        option.push(convertResToOption(grades[i].id, grades[i].gradeName))\r\n      setListGrade(option)\r\n    })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedGrade)\r\n      axiosJWT\r\n        .get(API_URL + `topic/teacher/grade/${selectedGrade?.value}`)\r\n        .then((res) => {\r\n          const topics = res.data\r\n          const option = []\r\n          for (let i = 0; i < topics.length; i++)\r\n            option.push(convertResToOption(topics[i].id, topics[i].topicName))\r\n          setListTopic(option)\r\n        })\r\n  }, [selectedGrade])\r\n\r\n  useEffect(() => {\r\n    if (selectedTopic)\r\n      axiosJWT\r\n        .get(API_URL + `skill/topic/${selectedTopic?.value}`)\r\n        .then((res) => {\r\n          const skills = res.data\r\n          const option = []\r\n          for (let i = 0; i < skills.length; i++)\r\n            option.push(convertResToOption(skills[i].id, skills[i].skillName))\r\n          setListSkill(option)\r\n        })\r\n  }, [selectedTopic])\r\n\r\n  useEffect(() => {\r\n    axiosJWT\r\n      .get(API_URL + `assignment-question/assignment/${assignmentId}`)\r\n      .then((res) => {\r\n        const assignmentQuestion = res.data\r\n        setQuestionList(\r\n          assignmentQuestion.map((question) => ({\r\n            id: question?.questionId,\r\n            content: question?.content,\r\n            hint: question?.hint,\r\n            score: question?.score,\r\n            option: question?.option,\r\n            level: question?.level,\r\n            questionTypeId: question?.questionTypeId,\r\n            teacherId: question?.teacherId,\r\n            gradeId: question?.gradeId,\r\n            topicId: question?.topicId,\r\n            skillIds: question?.skillIds,\r\n          })),\r\n        )\r\n      })\r\n  }, [assignmentId])\r\n\r\n  // useEffect(() => {\r\n  //   if (selectedLevel) {\r\n  //     if (selectedLevel.toLowerCase() === 'easy') setScore(5)\r\n  //     if (selectedLevel.toLowerCase() === 'medium') setScore(10)\r\n  //     if (selectedLevel.toLowerCase() === 'hard') setScore(20)\r\n  //   }\r\n  // }, [selectedLevel, score])\r\n  const mathLiveRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const mf = document.querySelector('#formula')\r\n    mf.setValue(\r\n      String.raw`\\begin{multline}\r\n    ` +\r\n        question +\r\n        String.raw`\r\n    \\end{multline}`,\r\n    )\r\n  }, [question])\r\n\r\n  const handleMathLiveChange = (e) => {\r\n    setQuestion(e.target.value)\r\n  }\r\n\r\n  const handleAddMath = (math) => {\r\n    let mathString = ``\r\n    if (math === 'fraction') {\r\n      mathString = String.raw`\\frac{x1}{x2}`\r\n    }\r\n    if (math === 'squareRoot') {\r\n      mathString = String.raw`\\sqrt{x}`\r\n    }\r\n    if (math === 'sin') {\r\n      mathString = String.raw`\\sin{x}`\r\n    }\r\n    if (math === 'cos') {\r\n      mathString = String.raw`\\cos{x}`\r\n    }\r\n    if (math === 'tan') {\r\n      mathString = String.raw`\\tan{x}`\r\n    }\r\n    if (math === 'text') {\r\n      mathString = String.raw`\\text{Example}`\r\n    }\r\n    if (math === 'pow') {\r\n      mathString = `x^1`\r\n    }\r\n    if (math === 'degree') {\r\n      mathString = String.raw`\\degree`\r\n    }\r\n    setQuestion(\r\n      insertTextAtCurrentCursor(\r\n        mathLiveRef.current.selectionStart,\r\n        question,\r\n        mathString,\r\n      ),\r\n    )\r\n  }\r\n\r\n  // String.raw`\\\\`\r\n  const handleNextLine = () => {\r\n    setQuestion(\r\n      insertTextAtCurrentCursor(\r\n        mathLiveRef.current.selectionStart,\r\n        question,\r\n        String.raw`\\\\`,\r\n      ),\r\n    )\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleNextLine()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-7 justify-center h-full\">\r\n      <div className=\"flex flex-row gap-7 justify-center w-full h-fit\">\r\n        <div className=\"w-[800px] bg-white rounded-lg shadow-lg flex flex-col justify-between my-4 px-10 py-5\">\r\n          <div className=\"flex flex-col gap-4\">\r\n            <div className=\"h-[88px]\">\r\n              <QuestionOption\r\n                assignmentInfo={assignmentInfo}\r\n                levelOption={levelOption}\r\n                listGrade={listGrade}\r\n                setListGrade={setListGrade}\r\n                listTopic={listTopic}\r\n                setListTopic={setListTopic}\r\n                listSkill={listSkill}\r\n                setListSkill={setListSkill}\r\n                setSelectedSkills={setSelectedSkills}\r\n                selectedSkills={selectedSkills}\r\n                setSelectedLevel={setSelectedLevel}\r\n                selectedLevel={selectedLevel}\r\n                setSelectedGrade={setSelectedGrade}\r\n                selectedGrade={selectedGrade}\r\n                setSelectedTopic={setSelectedTopic}\r\n                selectedTopic={selectedTopic}\r\n                handleScore={handleScore}\r\n                score={score}\r\n              />\r\n            </div>\r\n\r\n            <math-field\r\n              id=\"formula\"\r\n              style={{\r\n                whiteSpace: 'initial',\r\n                fontSize: '20px',\r\n                outline: 'none',\r\n                padding: '0.5rem 1.5rem',\r\n                userSelect: 'none',\r\n                width: '100%',\r\n                maxHeight: '150px',\r\n                overflowWrap: 'break-word',\r\n                fontFamily: 'Poppins',\r\n              }}\r\n              readonly\r\n            ></math-field>\r\n            {enableHint && (\r\n              <div className=\"px-6 py-3 text-white flex flex-row gap-4 h-fit items-baseline bg-primary rounded-md w-full\">\r\n                <i className=\"far fa-lightbulb\"></i>\r\n                <span className=\"whitespace-normal break-words w-[90%]\">\r\n                  {hint ? hint : 'Hint'}\r\n                </span>\r\n              </div>\r\n            )}\r\n            <span className=\"text-primary text-sm px-2\">\r\n              * \\\\ is for next line\r\n            </span>\r\n            <div className=\"flex flex-row gap-5\">\r\n              <Button onClick={() => handleAddMath('fraction')}>\r\n                <i className=\"fa-solid fa-percent\"></i>\r\n              </Button>\r\n              <Button onClick={() => handleAddMath('squareRoot')}>\r\n                <i className=\"fa-solid fa-square-root-variable\"></i>\r\n              </Button>\r\n              <Button onClick={() => handleAddMath('pow')}>\r\n                <i className=\"fa-solid fa-superscript\"></i>\r\n              </Button>\r\n              <Button onClick={() => handleAddMath('degree')}>°</Button>\r\n              <Button onClick={() => handleAddMath('sin')}>Sin</Button>\r\n              <Button onClick={() => handleAddMath('cos')}>Cos</Button>\r\n              <Button onClick={() => handleAddMath('tan')}>Tan</Button>\r\n              <Button onClick={() => handleAddMath('text')} className=\"text-sm\">\r\n                Write normal text\r\n              </Button>\r\n            </div>\r\n\r\n            <textarea\r\n              id=\"latex\"\r\n              ref={mathLiveRef}\r\n              className=\"outline-none focus:shadow-md duration-300 shadow-sm bg-gray-100 rounded-lg resize-none px-4 py-[0.5rem] h-36\"\r\n              onChange={(e) => handleMathLiveChange(e)}\r\n              onKeyDown={(e) => handleKeyDown(e)}\r\n              value={question || ''}\r\n              placeholder=\"Type your question\"\r\n            />\r\n            <div className=\"flex flex-row gap-5 items-baseline duration-500\">\r\n              <div className=\"flex flex-row items-baseline gap-5 h-[72px]\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={enableHint}\r\n                  onClick={() => setHint('')}\r\n                  onChange={handleEnableHint}\r\n                  className=\"hidden\"\r\n                  id=\"hint\"\r\n                />\r\n                <label\r\n                  htmlFor=\"hint\"\r\n                  className=\"cursor-pointer select-none py-1\"\r\n                >\r\n                  {enableHint ? (\r\n                    <span className=\"bg-primary rounded-md px-2 border-2 border-primary py-1 text-white duration-300\">\r\n                      Hint\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"bg-white rounded-md px-2 py-1 border-2 border-gray-500 duration-300\">\r\n                      Hint\r\n                    </span>\r\n                  )}\r\n                </label>\r\n              </div>\r\n              {enableHint && (\r\n                <motion.textarea\r\n                  layout\r\n                  maxLength=\"250\"\r\n                  placeholder=\"Enter hint\"\r\n                  value={hint || ''}\r\n                  className=\"outline-none border-b-2 duration-500 px-2 py-1 w-full resize-none overflow-y\"\r\n                  onChange={(e) => {\r\n                    setHint(e.target.value)\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row items-center justify-between\">\r\n            <span className=\"font-medium text-xl\">Answers</span>\r\n            <Select\r\n              value={selectedOption || ''}\r\n              defaultValue={Selectoptions[0]}\r\n              onChange={setSelectedOption}\r\n              options={Selectoptions}\r\n              className=\"w-44 transition-all\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col justify-center content-center min-h-[184px] my-2\">\r\n            {selectedOption?.value === 1 ? (\r\n              <MultiChoice\r\n                setAnswers={setAnswers}\r\n                answers={answers}\r\n                questionType={selectedOption}\r\n              />\r\n            ) : selectedOption?.value === 2 ? (\r\n              <TrueFalse\r\n                setAnswers={setAnswers}\r\n                answers={answers}\r\n                questionType={selectedOption}\r\n              />\r\n            ) : selectedOption?.value === 3 ? (\r\n              <InputAnswer\r\n                setAnswers={setAnswers}\r\n                answers={answers}\r\n                questionType={selectedOption}\r\n              />\r\n            ) : selectedOption?.value === 4 ? (\r\n              <MultiSelect\r\n                setAnswers={setAnswers}\r\n                answers={answers}\r\n                questionType={selectedOption}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n\r\n          {disable && (\r\n            <span className=\"text-red-500 self-end\">* Invalid answers</span>\r\n          )}\r\n\r\n          <div className=\"flex flex-row-reverse\">\r\n            <Button\r\n              className=\"border-none shadow-lg\"\r\n              disabled={question === ''}\r\n              onClick={() => {\r\n                addQuestionItem()\r\n              }}\r\n            >\r\n              {currentQid ? 'Save' : 'Create Question'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col my-4 gap-3\">\r\n          <div className=\"bg-white w-[400px] p-7 rounded-lg shadow-lg flex flex-col justify-between\">\r\n            <AssignmentInfo\r\n              setSelectedAssignmentName={setSelectedAssignmentName}\r\n              setSelectedPassScore={setSelectedPassScore}\r\n              setSelectedTotalScore={setSelectedTotalScore}\r\n              setSelectedDueTime={setSelectedDueTime}\r\n              setSelectedDoTime={setSelectedDoTime}\r\n              setSelectedRedo={setSelectedRedo}\r\n            />\r\n          </div>\r\n          <div className=\"grow bg-white w-[400px] pb-7 rounded-lg shadow-lg flex flex-col justify-between\">\r\n            <div>\r\n              <div className=\"flex justify-between px-10 pt-8\">\r\n                <span className=\"font-medium text-xl\">Question list</span>\r\n                <div className=\"flex items-center\">\r\n                  <span\r\n                    className=\"text-primary cursor-pointer\"\r\n                    onClick={handleOpenModalBank}\r\n                  >\r\n                    Bank question\r\n                  </span>\r\n                  <Modal\r\n                    isOpen={modalBankIsOpen}\r\n                    style={{\r\n                      top: '0',\r\n                      left: '0',\r\n                      right: 'auto',\r\n                      bottom: 'auto',\r\n                      marginRight: '-50%',\r\n                      transform: 'translate(-50%, -50%)',\r\n                    }}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                  >\r\n                    <QuestionBank\r\n                      questionsBank={questionList}\r\n                      onUpdateQuestionBank={handleUpdateQuestionBank}\r\n                      onCloseModalBank={handleCloseModalBank}\r\n                    />\r\n                  </Modal>\r\n                </div>\r\n              </div>\r\n              <div className=\"h-[300px] rounded-sm mx-5 my-5 px-2 py-2 flex flex-col gap-4 overflow-y-auto duration-1000\">\r\n                {questionList.map((val, i) => (\r\n                  <QuestionItem\r\n                    question={val}\r\n                    key={val + i}\r\n                    index={i}\r\n                    removeQuestionItem={() => {\r\n                      removeQuestionItem(val.id)\r\n                    }}\r\n                    handleReviewQuestion={handleReviewQuestion}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col w-full justify-center items-center gap-5\">\r\n              <div className=\"flex w-full items-center justify-center\">\r\n                <Button\r\n                  className=\"w-[80%] border-none shadow-lg\"\r\n                  onClick={handleOpenModalGenerate}\r\n                >\r\n                  Generate question\r\n                </Button>\r\n              </div>\r\n\r\n              <Modal\r\n                isOpen={modalGenerateIsOpen}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                ariaHideApp={false}\r\n              >\r\n                <GenerateQuestionForAssignenment\r\n                  selectedGrade={selectedGrade}\r\n                  selectedTopic={selectedTopic}\r\n                  selectedSkills={selectedSkills}\r\n                  listCurrentQuestion={questionList}\r\n                  onCloseModalGenerate={handleCloseModalGenerate}\r\n                  onUpdateGenerateQuestion={handleUpdateGenerateQuestion}\r\n                />\r\n              </Modal>\r\n              <div className=\"flex w-full items-center justify-center\">\r\n                <ConfirmModal\r\n                  isOpen={openSaveConfirm}\r\n                  message=\"If you want to trial these questions? Click yes.\r\n                                  If you want to go back the last page click no.\"\r\n                  yesConfirm={() => handleSaveAssignment({ isTrial: true })}\r\n                  noConfirm={() => handleSaveAssignment({ isTrial: false })}\r\n                />\r\n                <Button\r\n                  className=\"w-[80%] border-none shadow-lg\"\r\n                  onClick={() => setOpenSaveConfirm(!openSaveConfirm)}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeacherAssignment\r\n"],"names":["isOpen","message","yesConfirm","noConfirm","style","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","borderRadius","shouldCloseOnOverlayClick","contentLabel","ariaHideApp","className","onClick","Table","checkboxTable","customCssTr","thead","tbody","actions","onClickTh","checked","scope","width","map","head","index","arr","length","title","uuidv4","body","bodyKeys","Object","keys","filter","key","type","includes","id","onChange","bodyKey","maxWidth","action","eventAction","name","memo","axiosJWT","createAxiosJWT","setSelectedAssignmentName","setSelectedDueTime","setSelectedDoTime","setSelectedPassScore","setSelectedTotalScore","setSelectedRedo","assignmentId","useParams","useState","assignmentName","setAssignmentName","doTime","setDoTime","passScore","setPassScore","totalScore","setTotalScore","redo","setRedo","utils","getToday","selectedDay","setSelectedDay","hour","minute","dueTime","setDueTime","useEffect","newDueTime","year","month","day","get","API_URL","then","res","assignment","data","moment","dateDue","value","maxLength","onKeyDown","e","target","inputPlaceholder","calendarPopperPosition","calendarClassName","wrapperClassName","inputClassName","minimumDate","shouldHighlightWeekends","placeholder","min","questionsBank","onUpdateQuestionBank","onCloseModalBank","Selectoptions","label","bank","setBank","viewBank","setViewBank","valueQuestionBank","setValueQuestionBank","setChecked","questionBank","setQuestionBank","questionsConfirm","setQuestionsConfirm","grades","setGrades","currentGrade","setCurrentGrade","topics","setTopics","currentTopic","setCurrentTopic","skills","setSkills","currentSkill","setCurrentSkill","currentLevel","setCurrentLevel","currentQuestion","setCurrentQuestion","questionBankContent","setQuestionBankContent","enableHitQuestionBank","setEnableHitQuestionBank","hintQuestionBank","setHintQuestionBank","multiChoice","isTrue","answers","multiSelect","input","trueFalse","optionQuestionBank","setOptionQuestionBank","selectedOptionType","setSelectedOptionType","score","setScore","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","level","setLevel","bankFormula","useRef","React","modalConfirmQuestionIsOpen","setConfirmQuestionIsOpen","searchParam","setSearchParam","handleCloseConfirmQuestion","handleClickQuestionBank","prev","prevQuestions","question","handleReviewQuestionBank","item","find","questionInBank","hint","option","questionTypeId","convertResToOption","push","i","gradeName","topicName","skillName","gradeId","topicId","skillId","questions","topic","grade","getQuestionBank","document","overflow","current","setValue","endOffset","filteredBank","val","toLowerCase","slice","console","log","Math","ceil","ref","whiteSpace","fontSize","outline","padding","userSelect","maxHeight","overflowWrap","fontFamily","readonly","motion","layout","animate","opacity","initial","exit","transition","duration","MultiChoice","setAnswers","questionType","TrueFalse","InputAnswer","MultiSelect","options","required","Button","questionChecked","breakLabel","nextLabel","onPageChange","event","selected","newOffset","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","activeClassName","selectedGrade","selectedTopic","selectedSkills","listCurrentQuestion","onCloseModalGenerate","onUpdateGenerateQuestion","isHint","setIsHint","levels","setLevels","questionTypes","setQuestionTypes","setGradeId","setTopicId","skillIds","setSkillIds","numberQuestion","setNumberQuestion","listGrade","setListGrade","listTopic","setListTopic","listSkill","setListSkill","selectGrade","selectTopic","selectSkill","prevSkill","hintOption","skill","closeMenuOnSelect","isMulti","values","Number","styles","menuList","base","defaultValue","currentQuestions","conditions","post","insertTextAtCurrentCursor","string","text","substring","customStyles","classId","assignmentInfo","setAssignmentInfo","navigate","useNavigate","setQuestion","questionList","setQuestionList","selectedOption","setSelectedOption","disable","setDisable","openSaveConfirm","setOpenSaveConfirm","enableHint","setEnableHint","setHint","answer","levelOption","currentQid","setCurrentQid","useReducer","x","forceUpdate","setSelectedGrade","setSelectedTopic","setSelectedSkills","selectedLevel","setSelectedLevel","selectedAssignmentName","selectedTotalScore","selectedPassScore","selectedDueTime","selectedDoTime","selectedRedo","modalBankIsOpen","setBankIsOpen","modalGenerateIsOpen","setGenerateIsOpen","resetValue","handleSaveAssignment","isTrial","put","questionIds","dueDay","handleReviewQuestion","assignmentQuestion","questionId","teacherId","mathLiveRef","querySelector","String","raw","handleAddMath","math","mathString","selectionStart","handleKeyDown","QuestionOption","handleScore","max","handleMathLiveChange","htmlFor","disabled","reduce","acc","concat","some","findIndex","questionUpdate","catch","err","questionCreate","questionNewCreate","addQuestionItem","QuestionItem","removeQuestionItem","newList","questionGenerate","ConfirmModal"],"sourceRoot":""}