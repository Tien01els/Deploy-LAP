{"version":3,"file":"static/js/497.e5890ba3.chunk.js","mappings":"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","sources":["components/Modals/ConfirmModal.js","components/Table.js","components/Teacher/AssignmentInfo.js","components/Teacher/QuestionBank.js","components/Teacher/GenerateQuestionForAssignenment.js","utils/utils.js","pages/TeacherPages/TeacherAssignment.js"],"sourcesContent":["import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport Button from '../Button'\r\n\r\nconst ConfirmModal = ({ isOpen, message, yesConfirm, noConfirm }) => {\r\n  const customStyles = {\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n    },\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      border: 'none',\r\n      borderRadius: '8px',\r\n    },\r\n  }\r\n\r\n  const handleNoConfirm = () => {\r\n    noConfirm()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      style={customStyles}\r\n      shouldCloseOnOverlayClick={true}\r\n      contentLabel=\"Example Modal\"\r\n      ariaHideApp={false}\r\n    >\r\n      <div className=\"flex flex-col gap-4 w-[500px]\">\r\n        <span className=\"text-2xl font-medium\">Confirm</span>\r\n        <span>{message}</span>\r\n      </div>\r\n      <div className=\"flex flex-row-reverse mt-5 gap-5\">\r\n        <Button onClick={yesConfirm}>Yes</Button>\r\n        <Button onClick={handleNoConfirm}>No</Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmModal\r\n","import React, { memo } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Button from './Button';\r\n\r\nconst Table = ({\r\n    checkboxTable = false,\r\n    customCssTr = '',\r\n    thead = [],\r\n    tbody = [],\r\n    actions = [],\r\n    onClickTh = null,\r\n    checked = [],\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className='overflow-x-auto relative shadow-lg rounded-xl mt-[8px]'>\r\n                <table className='w-full text-xl text-center text-gray-500 dark:text-gray-400 border-separate'>\r\n                    <thead className='text-base text-gray-700 uppercase font-semibold bg-gray-50 dark:bg-gray-700 dark:text-gray-400'>\r\n                        <tr>\r\n                            {checkboxTable && (\r\n                                <th\r\n                                    scope='col'\r\n                                    className='p-4'\r\n                                    style={{ width: '5%' }}\r\n                                ></th>\r\n                            )}\r\n                            {thead &&\r\n                                thead.map((head, index, arr) => {\r\n                                    if (\r\n                                        index === arr.length - 1 &&\r\n                                        !head.title\r\n                                    ) {\r\n                                        return (\r\n                                            <th\r\n                                                key={uuidv4()}\r\n                                                style={{ width: head.width }}\r\n                                                scope='col'\r\n                                                className='py-3 px-1'\r\n                                            ></th>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <th\r\n                                            key={uuidv4()}\r\n                                            style={{ width: head.width }}\r\n                                            scope='col'\r\n                                            className='py-3 px-6'\r\n                                        >\r\n                                            {head.title}\r\n                                        </th>\r\n                                    );\r\n                                })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className='text-base'>\r\n                        {tbody &&\r\n                            tbody.map((body) => {\r\n                                const bodyKeys = Object.keys(body).filter(\r\n                                    (key) => {\r\n                                        return key !== 'id';\r\n                                    }\r\n                                );\r\n                                return (\r\n                                    <tr\r\n                                        key={uuidv4()}\r\n                                        className={\r\n                                            'odd:bg-white even:bg-gray-50 border-b dark:bg-gray-900 dark:border-gray-700 ' +\r\n                                            customCssTr\r\n                                        }\r\n                                    >\r\n                                        {checkboxTable && (\r\n                                            <td\r\n                                                className='p-4'\r\n                                                style={{ width: '5%' }}\r\n                                            >\r\n                                                <div className='flex items-center'>\r\n                                                    <input\r\n                                                        type='checkbox'\r\n                                                        checked={checked.includes(\r\n                                                            body.id\r\n                                                        )}\r\n                                                        className='w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600 cursor-pointer'\r\n                                                        onChange={() =>\r\n                                                            onClickTh(body.id)\r\n                                                        }\r\n                                                    />\r\n                                                    <label className='sr-only'>\r\n                                                        checkbox\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                        )}\r\n                                        {bodyKeys.map((bodyKey, index) => {\r\n                                            return (\r\n                                                <td\r\n                                                    key={uuidv4()}\r\n                                                    className={`py-4 px-6 font-medium dark:text-white truncate`}\r\n                                                    style={{\r\n                                                        maxWidth:\r\n                                                            thead[index][\r\n                                                                'max-width'\r\n                                                            ],\r\n                                                    }}\r\n                                                    onClick={() =>\r\n                                                        onClickTh(body.id)\r\n                                                    }\r\n                                                >\r\n                                                    {body[bodyKey]}\r\n                                                </td>\r\n                                            );\r\n                                        })}\r\n                                        {!!actions.length && (\r\n                                            <td className='py-4 px-1 font-medium whitespace-nowrap text-white flex justify-evenly'>\r\n                                                {actions.map((action) => {\r\n                                                    return (\r\n                                                        <React.Fragment\r\n                                                            key={uuidv4()}\r\n                                                        >\r\n                                                            <Button\r\n                                                                className='rounded-lg border-none text-sm font-semibold bg-primary px-3 py-1.5'\r\n                                                                onClick={() => {\r\n                                                                    action.eventAction &&\r\n                                                                        action.eventAction(\r\n                                                                            body.id\r\n                                                                        );\r\n                                                                }}\r\n                                                            >\r\n                                                                {action.name}\r\n                                                            </Button>\r\n                                                        </React.Fragment>\r\n                                                    );\r\n                                                })}\r\n                                            </td>\r\n                                        )}\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(Table);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\n\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\n\r\nimport DatePicker, { utils } from '@hassanmojab/react-modern-calendar-datepicker';\r\nimport moment from 'moment';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\nconst AssignmentInfo = ({\r\n    setSelectedAssignmentName,\r\n    setSelectedDueTime,\r\n    setSelectedDoTime,\r\n    setSelectedPassScore,\r\n    setSelectedTotalScore,\r\n    setSelectedRedo,\r\n}) => {\r\n    const { assignmentId } = useParams();\r\n\r\n    const [assignmentName, setAssignmentName] = useState('');\r\n    const [doTime, setDoTime] = useState(0);\r\n    const [passScore, setPassScore] = useState(0);\r\n    const [totalScore, setTotalScore] = useState(0);\r\n    const [redo, setRedo] = useState(0);\r\n    const [selectedDay, setSelectedDay] = useState(utils().getToday());\r\n    const [dueTime, setDueTime] = useState({\r\n        hour: '',\r\n        minute: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        setSelectedAssignmentName(assignmentName);\r\n    }, [setSelectedAssignmentName, assignmentName]);\r\n    useEffect(() => {\r\n        setSelectedPassScore(passScore);\r\n    }, [setSelectedPassScore, passScore]);\r\n    useEffect(() => {\r\n        setSelectedTotalScore(totalScore);\r\n    }, [setSelectedTotalScore, totalScore]);\r\n    useEffect(() => {\r\n        let newDueTime = `${selectedDay.year}-${selectedDay.month}-${selectedDay.day} ${dueTime.hour}:${dueTime.minute}:00`;\r\n        setSelectedDueTime(newDueTime);\r\n    }, [setSelectedDueTime, dueTime, selectedDay]);\r\n    useEffect(() => {\r\n        setSelectedDoTime(doTime);\r\n    }, [setSelectedDoTime, doTime]);\r\n    useEffect(() => {\r\n        setSelectedRedo(redo);\r\n    }, [setSelectedRedo, redo]);\r\n\r\n    useEffect(() => {\r\n        axiosJWT.get(API_URL + `assignment/${assignmentId}`).then((res) => {\r\n            const assignment = res.data;\r\n            if (assignment) {\r\n                setAssignmentName(assignment.assignmentName);\r\n                setDueTime({\r\n                    hour: moment(assignment.dateDue).hour(),\r\n                    minute: moment(assignment.dateDue).minute(),\r\n                });\r\n                setDoTime(assignment.doTime);\r\n                setPassScore(assignment.passScore);\r\n                setTotalScore(assignment.totalScore);\r\n                setRedo(assignment.redo);\r\n            }\r\n        });\r\n    }, [assignmentId]);\r\n\r\n    return (\r\n        <div className='h-fit'>\r\n            <div className='flex flex-col justify-between gap-3'>\r\n                <input\r\n                    className='text-xl min-w-[360px] transition-all max-w-[360px] focus:border-primary font-medium outline-none border-b-2 resize-x py-2 px-1'\r\n                    value={assignmentName}\r\n                    maxLength={45}\r\n                    onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            assignmentName === 'Assignment Name'\r\n                                ? setAssignmentName('')\r\n                                : setAssignmentName(assignmentName);\r\n                            // setEnableEdit(!enableEdit);\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        setAssignmentName(e.target.value);\r\n                    }}\r\n                    style={{ width: `${assignmentName.length}ch` }}\r\n                />\r\n\r\n                <div className='flex flex-row gap-4 items-center justify-between w-full'>\r\n                    <label>Date Due</label>\r\n                    <div className='flex flex-row gap-3 items-center w-[60%]'>\r\n                        <DatePicker\r\n                            value={selectedDay}\r\n                            onChange={setSelectedDay}\r\n                            inputPlaceholder='Select a day'\r\n                            calendarPopperPosition='bottom'\r\n                            calendarClassName='pickday h-[100px] w-full'\r\n                            wrapperClassName='pickday w-full'\r\n                            inputClassName={`w-full border-b-2 outline-none`}\r\n                            minimumDate={utils().getToday()}\r\n                            shouldHighlightWeekends\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-row gap-4 items-center justify-between w-full'>\r\n                    <label>Due Time</label>\r\n                    <div className='flex flex-row gap-3 items-center w-[60%]'>\r\n                        <div className='flex flex-row gap-5'>\r\n                            <input\r\n                                type='number'\r\n                                placeholder='hour'\r\n                                value={dueTime.hour}\r\n                                onChange={(e) => setDueTime({ ...dueTime, hour: e.target.value })}\r\n                                className='outline-none px-3 py-1 w-[50%] text-right border-b-2 border-opacity-0 transition-all focus:border-primary'\r\n                            />\r\n                            :\r\n                            <input\r\n                                type='number'\r\n                                placeholder='minute'\r\n                                value={dueTime.minute}\r\n                                onChange={(e) => setDueTime({ ...dueTime, minute: e.target.value })}\r\n                                className='outline-none px-3 py-1 w-[50%] text-right border-b-2 border-opacity-0 transition-all focus:border-primary'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-row gap-4 items-center justify-between w-full'>\r\n                    <label>Total score</label>\r\n                    <input\r\n                        type='number'\r\n                        min='0'\r\n                        className='outline-none border-b-2 text-right focus:border-primary px-1 py-[3px] w-[30%] duration-300 transition-all'\r\n                        value={totalScore}\r\n                        onChange={(e) => {\r\n                            setTotalScore(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='flex flex-row gap-4 items-center justify-between w-full'>\r\n                    <label>Pass score</label>\r\n                    <input\r\n                        type='number'\r\n                        min='0'\r\n                        className='outline-none border-b-2 text-right focus:border-primary px-1 py-[3px] w-[30%] duration-300 transition-all'\r\n                        value={passScore}\r\n                        onChange={(e) => {\r\n                            setPassScore(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='flex flex-row gap-10 items-center '>\r\n                    <div className='flex items-center justify-between w-full'>\r\n                        <span>Exam time in</span>\r\n                        <div className='w-[30%] flex flex-row gap-2 items-center'>\r\n                            <input\r\n                                type='number'\r\n                                min='0'\r\n                                className='outline-none border-b-2 focus:border-primary px-2 py-[3px] justify-center items-center w-[50px] text-right duration-300 transition-all'\r\n                                value={doTime}\r\n                                onChange={(e) => {\r\n                                    setDoTime(e.target.value);\r\n                                }}\r\n                            />\r\n                            <span>m</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-row gap-10 items-center'>\r\n                    <div className='flex gap-2 items-center w-full justify-between'>\r\n                        <span>Redo</span>\r\n                        <div className='w-[30%] flex flex-row gap-2 items-center'>\r\n                            <input\r\n                                type='number'\r\n                                min='0'\r\n                                className='outline-none border-b-2 px-[10px] focus:border-primary py-[3px] justify-center items-center text-right w-[50px] duration-300 transition-all'\r\n                                value={redo}\r\n                                onChange={(e) => {\r\n                                    setRedo(e.target.value);\r\n                                }}\r\n                            />\r\n                            <span>time{redo > 1 ? 's' : ''}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignmentInfo;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\nimport Modal from 'react-modal'\r\n\r\nimport Table from '../Table'\r\nimport { API_URL } from '../../constant'\r\nimport MultiChoice from './AnswerType/MultiChoice'\r\nimport TrueFalse from './AnswerType/TrueFalse'\r\nimport InputAnswer from './AnswerType/InputAnswer'\r\nimport MultiSelect from './AnswerType/MultiSelect'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\nimport Button from '../Button'\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst QuestionBank = ({\r\n  questionsBank,\r\n  onUpdateQuestionBank,\r\n  onCloseModalBank,\r\n}) => {\r\n  const thead = [\r\n    {\r\n      width: '40%',\r\n      'max-width': '200px',\r\n      title: 'CONTENT',\r\n    },\r\n    {\r\n      width: '30%',\r\n      title: 'SKILLS',\r\n    },\r\n    {\r\n      width: '15%',\r\n      title: 'TOPIC',\r\n    },\r\n    {\r\n      width: '10%',\r\n      title: 'GRADE',\r\n    },\r\n    {\r\n      width: '10%',\r\n      title: 'SCORE',\r\n    },\r\n  ]\r\n  const Selectoptions = [\r\n    { value: 1, label: 'Multi Choice' },\r\n    { value: 2, label: 'True False' },\r\n    { value: 3, label: 'Input' },\r\n    { value: 4, label: 'Multi Select' },\r\n  ]\r\n  const levelOption = [\r\n    { value: '', label: 'All Levels' },\r\n    { value: 'Easy', label: 'Easy' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'Hard', label: 'Hard' },\r\n  ]\r\n\r\n  // debugger\r\n  const [bank, setBank] = useState([])\r\n  const [viewBank, setViewBank] = useState([])\r\n  const [valueQuestionBank, setValueQuestionBank] = useState([])\r\n  const [checked, setChecked] = useState([])\r\n  const [questionBank, setQuestionBank] = useState([])\r\n  const [questionsConfirm, setQuestionsConfirm] = useState([])\r\n\r\n  const [grades, setGrades] = useState([])\r\n  const [currentGrade, setCurrentGrade] = useState('')\r\n  const [topics, setTopics] = useState([])\r\n  const [currentTopic, setCurrentTopic] = useState('')\r\n  const [skills, setSkills] = useState([])\r\n  const [currentSkill, setCurrentSkill] = useState('')\r\n  const [currentLevel, setCurrentLevel] = useState('')\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState('')\r\n  const [questionBankContent, setQuestionBankContent] = useState('')\r\n  const [enableHitQuestionBank, setEnableHitQuestionBank] = useState(false)\r\n  const [hintQuestionBank, setHintQuestionBank] = useState(false)\r\n  const [optionQuestionBank, setOptionQuestionBank] = useState({\r\n    multiChoice: [\r\n      { isTrue: false, answers: '' },\r\n      { isTrue: false, answers: '' },\r\n      { isTrue: false, answers: '' },\r\n      { isTrue: false, answers: '' },\r\n    ],\r\n    multiSelect: [],\r\n    input: [],\r\n    trueFalse: [],\r\n  })\r\n  const [selectedOptionType, setSelectedOptionType] = useState({})\r\n  const [score, setScore] = useState(0)\r\n\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n  const [pageCount, setPageCount] = useState(0)\r\n  const [itemOffset, setItemOffset] = useState(0)\r\n  const [level, setLevel] = useState('')\r\n\r\n  const bankFormula = useRef()\r\n\r\n  const handlePageClick = (event) => {\r\n    setCurrentPage(event.selected + 1)\r\n    const newOffset = (event.selected * 5) % bank.length\r\n    setItemOffset(newOffset)\r\n  }\r\n\r\n  const [modalConfirmQuestionIsOpen, setConfirmQuestionIsOpen] = React.useState(\r\n    false,\r\n  )\r\n\r\n  const [searchParam, setSearchParam] = useState('')\r\n  const handleOpenConfirmQuestion = () => {\r\n    const questionChecked = questionBank.map((question) => {\r\n        const valueQuestion = valueQuestionBank.find(\r\n            (valueOfQuestion) => valueOfQuestion.id === question.id\r\n        );\r\n        return {\r\n            id: valueQuestion.id,\r\n            content: valueQuestion.content,\r\n            skills: valueQuestion.skillName,\r\n            topic: valueQuestion.topicName,\r\n            grade: valueQuestion.gradeName,\r\n            score: valueQuestion.score,\r\n        };\r\n    });\r\n    setQuestionsConfirm(questionChecked);\r\n    setConfirmQuestionIsOpen(true);\r\n};\r\n\r\n  const handleCloseConfirmQuestion = () => {\r\n    setQuestionsConfirm([])\r\n    setConfirmQuestionIsOpen(false)\r\n  }\r\n\r\n  const handleConfirmQuestionBank = () => {\r\n    onUpdateQuestionBank(questionBank)\r\n    onCloseModalBank()\r\n\r\n    handleCloseConfirmQuestion()\r\n  }\r\n\r\n  const handleClickQuestionBank = (id) => {\r\n    setChecked((prev) => {\r\n      const isChecked = prev.includes(id)\r\n      if (isChecked) {\r\n        setQuestionBank((prevQuestions) => {\r\n          return prevQuestions.filter((question) => {\r\n            return question.id !== id\r\n          })\r\n        })\r\n        if (id === currentQuestion) handleReviewQuestionBank()\r\n        return prev.filter((item) => item !== id)\r\n      }\r\n      setQuestionBank((prevQuestions) => {\r\n        const question = valueQuestionBank.find(\r\n          (questionInBank) => questionInBank.id === id,\r\n        )\r\n        handleReviewQuestionBank(question)\r\n        return question ? [...prevQuestions, question] : prevQuestions\r\n      })\r\n      return [...prev, id]\r\n    })\r\n  }\r\n\r\n  const handleReviewQuestionBank = (data) => {\r\n    setCurrentQuestion(data?.id || '')\r\n    setQuestionBankContent(data?.content || '')\r\n    setEnableHitQuestionBank(!!data?.hint)\r\n    setHintQuestionBank(data?.hint || '')\r\n    setOptionQuestionBank(\r\n      data?.option || {\r\n        multiChoice: [\r\n          { isTrue: false, answers: '' },\r\n          { isTrue: false, answers: '' },\r\n          { isTrue: false, answers: '' },\r\n          { isTrue: false, answers: '' },\r\n        ],\r\n        multiSelect: [],\r\n        input: [],\r\n        trueFalse: [],\r\n      },\r\n    )\r\n    setLevel(data?.level || '')\r\n    setSelectedOptionType(Selectoptions[data?.questionTypeId - 1] || '')\r\n    setScore(data?.score || 0)\r\n  }\r\n\r\n  const convertResToOption = (value, label) => {\r\n    return {\r\n      value: value,\r\n      label: label,\r\n    }\r\n  }\r\n\r\n  const getQuestionBank = (gradeId, topicId, skillId, level) => {\r\n    axiosJWT\r\n      .get(\r\n        API_URL +\r\n          `question/question-bank?gradeId=${gradeId}&topicId=${topicId}&skillId=${skillId}&level=${level}`,\r\n      )\r\n      .then((res) => {\r\n        const bank = res.data\r\n        const questions = []\r\n        for (let i = 0; i < bank.length; ++i) {\r\n          questions.push({\r\n            id: bank[i].id,\r\n            content: bank[i].content,\r\n            skills: bank[i].skillName,\r\n            topic: bank[i].topicName,\r\n            grade: bank[i].gradeName,\r\n            score: bank[i].score,\r\n          })\r\n        }\r\n        setBank(questions)\r\n        setValueQuestionBank(bank)\r\n        setCurrentPage(bank.length > 0 ? 1 : 0)\r\n      })\r\n  }\r\n\r\n  const getAllGrades = () => {\r\n    axiosJWT.get(API_URL + `grade`).then((res) => {\r\n      const grades = res.data\r\n      const option = []\r\n      option.push({\r\n        value: '',\r\n        label: 'All Grades',\r\n      })\r\n      for (let i = 0; i < grades.length; i++)\r\n        option.push(convertResToOption(grades[i].id, grades[i].gradeName))\r\n      setGrades(option)\r\n    })\r\n  }\r\n\r\n  const getAllTopics = () => {\r\n    axiosJWT.get(API_URL + `topic`).then((res) => {\r\n      const topics = res.data\r\n      const option = []\r\n      option.push({\r\n        value: '',\r\n        label: 'All Topics',\r\n      })\r\n      for (let i = 0; i < topics.length; i++)\r\n        option.push(convertResToOption(topics[i].id, topics[i].topicName))\r\n      setTopics(option)\r\n    })\r\n  }\r\n\r\n  const getAllSkills = () => {\r\n    axiosJWT.get(API_URL + `skill`).then((res) => {\r\n      const skills = res.data\r\n      const option = []\r\n      option.push({\r\n        value: '',\r\n        label: 'All Skills',\r\n      })\r\n      for (let i = 0; i < skills.length; i++)\r\n        option.push(convertResToOption(skills[i].id, skills[i].skillName))\r\n      setSkills(option)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllGrades()\r\n    getAllTopics()\r\n    getAllSkills()\r\n    if (questionsBank) {\r\n      setQuestionBank(questionsBank)\r\n      for (let i = 0; i < questionsBank.length; i++) {\r\n        handleClickQuestionBank(questionsBank[i].id)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getQuestionBank(currentGrade, currentTopic, currentSkill, currentLevel)\r\n    document.body.style.overflow = 'hidden'\r\n    return () => (document.body.style.overflow = 'unset')\r\n  }, [currentGrade, currentTopic, currentSkill, currentLevel])\r\n\r\n  useEffect(() => {\r\n    bankFormula.current.setValue(questionBankContent || '')\r\n  }, [questionBankContent])\r\n\r\n  useEffect(() => {\r\n    const endOffset = itemOffset + 5\r\n    const filteredBank = bank.filter((val) => {\r\n      if (\r\n        searchParam === '' ||\r\n        val.content.toLowerCase().includes(searchParam.toLowerCase())\r\n      )\r\n        return val\r\n      return ''\r\n    })\r\n    setViewBank(filteredBank.slice(itemOffset, endOffset))\r\n    // setViewBank(bank.filter);\r\n    console.log(Math.ceil(filteredBank.length / 5))\r\n    setPageCount(Math.ceil(filteredBank.length / 5))\r\n  }, [itemOffset, bank, searchParam])\r\n\r\n  return (\r\n    <div className=\"px-8 h-full relative\">\r\n      <i\r\n        className=\"fas fa-times text-2xl right-[8px] absolute cursor-pointer\"\r\n        onClick={onCloseModalBank}\r\n      ></i>\r\n\r\n      <div className=\"flex flex-row justify-between pt-8 h-full w-full\">\r\n        <div className=\"w-[40%] flex flex-col justify-between\">\r\n          <div className=\"flex flex-row gap-7\">\r\n            <span className=\"text-xl font-medium flex gap-2 min-w-[160px]\">\r\n              Level :\r\n              <span\r\n                className={` ${\r\n                  level === 'Hard'\r\n                    ? `text-red-400`\r\n                    : level === 'Medium'\r\n                    ? `text-yellow-400`\r\n                    : 'text-green-400'\r\n                } `}\r\n              >\r\n                {level}\r\n              </span>\r\n            </span>\r\n            <span className=\"flex text-xl font-medium gap-2\">\r\n              Score:\r\n              <div className=\"flex font-normal\">\r\n                <div className=\"flex justify-end min-w-[32px]\">\r\n                  {score || 0}\r\n                </div>\r\n                <span>.pt</span>\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <math-field\r\n            id=\"Bank-modal-formula\"\r\n            ref={bankFormula}\r\n            style={{\r\n              whiteSpace: 'initial',\r\n              fontSize: '20px',\r\n              outline: 'none',\r\n              padding: '0.5rem 1.5rem',\r\n              userSelect: 'none',\r\n              width: '100%',\r\n              maxHeight: '150px',\r\n              overflowWrap: 'break-word',\r\n              fontFamily: 'Poppins',\r\n            }}\r\n            readonly\r\n          ></math-field>\r\n          <motion.div\r\n            layout\r\n            animate={{ opacity: 1 }}\r\n            initial={{ opacity: 0 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"duration-300 h-[48px]\"\r\n          >\r\n            {enableHitQuestionBank && (\r\n              <div className=\"px-6 py-3 text-white flex flex-row gap-4 items-center bg-primary rounded-md overflow-hidden w-full break-words\">\r\n                <i className=\"far fa-lightbulb\"></i>\r\n                <span className=\" whitespace-pre-line\">\r\n                  {hintQuestionBank ? hintQuestionBank : 'Hint'}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n          <div className=\"h-[350px] overflow-y-auto\">\r\n            {selectedOptionType?.value === 1 ? (\r\n              <MultiChoice\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : selectedOptionType?.value === 2 ? (\r\n              <TrueFalse\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : selectedOptionType?.value === 3 ? (\r\n              <InputAnswer\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : selectedOptionType?.value === 4 ? (\r\n              <MultiSelect\r\n                setAnswers={setOptionQuestionBank}\r\n                answers={optionQuestionBank}\r\n                questionType={selectedOptionType}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col w-[58%] h-full\">\r\n          <div className=\"flex flex-col h-[152px] justify-center align-center\">\r\n            <div className=\"flex flex-col w-full items-center px-[4px] pb-[4px]\">\r\n              <div className=\"flex justify-between w-full px-[4px] pb-[4px]\">\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={grades}\r\n                  placeholder=\"Grade\"\r\n                  onChange={(e) => setCurrentGrade(e.value)}\r\n                />\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={topics}\r\n                  placeholder=\"Topic\"\r\n                  onChange={(e) => setCurrentTopic(e.value)}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between w-full p-[4px]\">\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={levelOption}\r\n                  placeholder=\"Level\"\r\n                  onChange={(e) => setCurrentLevel(e.value)}\r\n                />\r\n                <Select\r\n                  className=\"w-[48%]\"\r\n                  options={skills}\r\n                  placeholder=\"Skill\"\r\n                  onChange={(e) => setCurrentSkill(e.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full px-[8px] pb-[4px]\">\r\n              <div className=\"flex justify-center\">\r\n                <div className=\"flex flex-row w-full\">\r\n                  <input\r\n                    type=\"search\"\r\n                    onChange={(e) => setSearchParam(e.target.value)}\r\n                    id=\"search-dropdown\"\r\n                    className=\"block p-2.5 w-full outline-primary transition-all text-sm text-gray-900 bg-gray-50 rounded-l-lg border border-gray-300 \"\r\n                    placeholder=\"Search question\"\r\n                    required=\"\"\r\n                  />\r\n                  <button className=\"top-0 right-0 p-2.5 text-sm font-medium text-white bg-blue-700 rounded-r-lg border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\r\n                    <i className=\"fa fa-search\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"grow\">\r\n            <div className=\"flex flex-col justify-between h-[100%]\">\r\n              <div className=\"grow\">\r\n                <Table\r\n                  checkboxTable={true}\r\n                  thead={thead}\r\n                  tbody={viewBank}\r\n                  actions={[]}\r\n                  customCssTr=\"cursor-pointer\"\r\n                  onClickTh={handleClickQuestionBank}\r\n                  checked={checked}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between p-4\">\r\n                <div>\r\n                  <Button onClick={handleOpenConfirmQuestion}>\r\n                    Save Questions\r\n                  </Button>\r\n                  <Modal\r\n                    isOpen={modalConfirmQuestionIsOpen}\r\n                    style={{\r\n                      top: '0',\r\n                      left: '0',\r\n                      right: 'auto',\r\n                      bottom: 'auto',\r\n                      marginRight: '-50%',\r\n                      transform: 'translate(-50%, -50%)',\r\n                    }}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                  >\r\n                    <div className=\"h-full px-[20px] relative\">\r\n                      {/* <i\r\n                                    className='fas fa-times text-2xl right-[8px] absolute'\r\n                                    onClick={handleCloseConfirmQuestion}\r\n                                ></i> */}\r\n                      <div className=\"flex flex-col justify-between pt-8 h-full\">\r\n                        <div className=\"\">\r\n                          <span>Do you want add these questions?</span>\r\n                          <Table\r\n                            checkboxTable={false}\r\n                            thead={thead}\r\n                            tbody={questionsConfirm}\r\n                            actions={[]}\r\n                            onClickTh={handleClickQuestionBank}\r\n                            checked={checked}\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex justify-between self-center w-64 mb-4\">\r\n                          <Button onClick={handleCloseConfirmQuestion}>\r\n                            Cancel\r\n                          </Button>\r\n                          <Button onClick={handleConfirmQuestionBank}>\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Modal>\r\n                </div>\r\n                <ReactPaginate\r\n                  breakLabel=\"...\"\r\n                  nextLabel={\r\n                    <button>\r\n                      Next <i className=\"fas fa-angle-right\"></i>\r\n                    </button>\r\n                  }\r\n                  onPageChange={handlePageClick}\r\n                  pageRangeDisplayed={1}\r\n                  marginPagesDisplayed={2}\r\n                  pageCount={pageCount}\r\n                  previousLabel={\r\n                    <button>\r\n                      <i className=\"fas fa-angle-left\"></i> Previous\r\n                    </button>\r\n                  }\r\n                  renderOnZeroPageCount={null}\r\n                  className=\"flex flex-row text-gray-500 gap-7 justify-center font-semibold items-center\"\r\n                  activeClassName=\"bg-primary text-white flex justify-center items-center w-8 h-8 rounded-full shadow-lg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionBank\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Select from 'react-select'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { API_URL } from '../../constant'\r\nimport createAxiosJWT from '../../createAxiosJWT'\r\nimport Button from '../Button'\r\n\r\nconst axiosJWT = createAxiosJWT()\r\nconst GenerateQuestionForAssignenment = ({\r\n  selectedGrade,\r\n  selectedTopic,\r\n  selectedSkills,\r\n  listCurrentQuestion,\r\n  onCloseModalGenerate,\r\n  onUpdateGenerateQuestion,\r\n}) => {\r\n  const { assignmentId } = useParams()\r\n\r\n  const [isHint, setIsHint] = useState(false)\r\n  const [levels, setLevels] = useState([])\r\n  const [questionTypes, setQuestionTypes] = useState([])\r\n  const [gradeId, setGradeId] = useState()\r\n  const [topicId, setTopicId] = useState()\r\n  const [skillIds, setSkillIds] = useState()\r\n  const [numberQuestion, setNumberQuestion] = useState(0)\r\n\r\n  const [listGrade, setListGrade] = useState([])\r\n  const [listTopic, setListTopic] = useState([])\r\n  const [listSkill, setListSkill] = useState([])\r\n\r\n  const selectGrade = useRef()\r\n  const selectTopic = useRef()\r\n  const selectSkill = useRef()\r\n  const prevSkill = useRef(selectedSkills[0])\r\n\r\n  const levelOptions = [\r\n    { value: 'Easy', label: 'Easy' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'Hard', label: 'Hard' },\r\n  ]\r\n  const selectOptions = [\r\n    { value: 1, label: 'Multi Choice' },\r\n    { value: 2, label: 'True False' },\r\n    { value: 3, label: 'Input' },\r\n    { value: 4, label: 'Multi Select' },\r\n  ]\r\n  const hintOption = [\r\n    { value: false, label: 'No' },\r\n    { value: true, label: 'Yes' },\r\n  ]\r\n\r\n  const convertResToOption = (value, label) => {\r\n    return {\r\n      value: value,\r\n      label: label,\r\n    }\r\n  }\r\n  const handleSelectLevels = (e) => {\r\n    setLevels(() => {\r\n      const values = []\r\n      for (let i = 0; i < e.length; ++i) values.push(e[i].value)\r\n      return values\r\n    })\r\n  }\r\n  const handleSelectQuestionTypes = (e) => {\r\n    setQuestionTypes(() => {\r\n      const values = []\r\n      for (let i = 0; i < e.length; ++i) values.push(e[i].value)\r\n      return values\r\n    })\r\n  }\r\n  const handleSelectSkills = (e) => {\r\n    setSkillIds(() => {\r\n      const values = []\r\n      for (let i = 0; i < e.length; ++i) values.push(e[i].value)\r\n      return values\r\n    })\r\n  }\r\n\r\n  const handleGenerateQuestionForAssignment = () => {\r\n    const currentQuestions = listCurrentQuestion.map((question) => question.id)\r\n    const conditions = {\r\n      assignmentId: assignmentId,\r\n      numberQuestion: numberQuestion,\r\n      levels: levels || [],\r\n      isHint: isHint,\r\n      questionTypes: questionTypes || [],\r\n      skillIds: skillIds || [],\r\n      topicId: topicId,\r\n      gradeId: gradeId,\r\n      currentQuestions: currentQuestions || [],\r\n    }\r\n    axiosJWT\r\n      .post(API_URL + `assignment-question/generate`, conditions)\r\n      .then((res) => {\r\n        onUpdateGenerateQuestion(res.data)\r\n        onCloseModalGenerate()\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `grade/teacher`).then((res) => {\r\n      const grades = res.data\r\n      const option = []\r\n      for (let i = 0; i < grades.length; i++)\r\n        option.push(convertResToOption(grades[i].id, grades[i].gradeName))\r\n      setListGrade(option)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `topic/teacher/grade/${gradeId}`).then((res) => {\r\n      const topics = res.data\r\n      const option = []\r\n      for (let i = 0; i < topics.length; i++)\r\n        option.push(convertResToOption(topics[i].id, topics[i].topicName))\r\n      setListTopic(option)\r\n    })\r\n  }, [gradeId])\r\n\r\n  useEffect(() => {\r\n    axiosJWT.get(API_URL + `skill/topic/${topicId}`).then((res) => {\r\n      const skills = res.data\r\n      const option = []\r\n      for (let i = 0; i < skills.length; i++)\r\n        option.push(convertResToOption(skills[i].id, skills[i].skillName))\r\n      setListSkill(option)\r\n    })\r\n  }, [topicId])\r\n\r\n  useEffect(() => {\r\n    if (listGrade.length > 0) {\r\n      const grade = listGrade.find((grade) => grade?.value === selectedGrade)\r\n      selectGrade.current.setValue(\r\n        convertResToOption(grade?.value, grade?.label),\r\n      )\r\n    }\r\n  }, [selectedGrade, listGrade])\r\n\r\n  useEffect(() => {\r\n    if (listTopic.length > 0) {\r\n      const topic = listTopic.find((topic) => topic?.value === selectedTopic)\r\n      selectTopic.current.setValue(\r\n        convertResToOption(topic?.value, topic?.label),\r\n      )\r\n    }\r\n  }, [selectedTopic, listTopic])\r\n\r\n  useEffect(() => {\r\n    if (listSkill?.length === 0) {\r\n      prevSkill.current = null\r\n    }\r\n    if (\r\n      selectedSkills &&\r\n      listSkill.length > 0 &&\r\n      selectedSkills.length > 0 &&\r\n      prevSkill.current !== selectedSkills[0]\r\n    ) {\r\n      prevSkill.current = selectedSkills[0]\r\n      const skill = listSkill.find(\r\n        (skill) => skill?.value === selectedSkills[0],\r\n      )\r\n\r\n      if (skill)\r\n        selectSkill.current.setValue(\r\n          convertResToOption(skill?.value, skill?.label),\r\n        )\r\n    }\r\n  }, [selectedSkills, listSkill])\r\n\r\n  return (\r\n    <div className=\"px-8 h-full relative\">\r\n      <i\r\n        className=\"fas fa-times text-2xl right-[8px] absolute cursor-pointer\"\r\n        onClick={onCloseModalGenerate}\r\n      ></i>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\" flex flex-col justify-between w-[720px] gap-4\">\r\n          <div className=\"flex\">\r\n            <h2 className=\"text-3xl font-[500]\">\r\n              Generate questions for assignment\r\n            </h2>\r\n          </div>\r\n          <div className=\"flex flex-col gap-2\">\r\n            <span>Level </span>\r\n            <Select\r\n              placeholder=\"Select levels...\"\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={levelOptions}\r\n              onChange={handleSelectLevels}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col gap-2\">\r\n            <span>Question type</span>\r\n            <Select\r\n              placeholder=\"Select question types...\"\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={selectOptions}\r\n              onChange={handleSelectQuestionTypes}\r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-row gap-2 items-center\">\r\n            <span>Quantity of question</span>\r\n            <input\r\n              className=\"outline-none border-b-2 py-1 px-2 justify-center items-center text-right w-[60px] duration-300 transition-all\"\r\n              value={numberQuestion}\r\n              onChange={(e) => {\r\n                setNumberQuestion(() => {\r\n                  if (Number(e.target.value)) return Number(e.target.value)\r\n                  return 0\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-row\">\r\n            <div className=\"flex flex-row items-center gap-2 w-[50%]\">\r\n              <span className=\"mr-1\">Grade</span>\r\n              <Select\r\n                ref={selectGrade}\r\n                options={listGrade}\r\n                placeholder=\"Select grade...\"\r\n                styles={{\r\n                  menuList: (base) => ({\r\n                    ...base,\r\n                    maxHeight: '180px', // your desired height\r\n                  }),\r\n                }}\r\n                onChange={(e) => setGradeId(e.value)}\r\n                className=\"w-[180px]\"\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-row items-center gap-2 w-[50%]\">\r\n              <span>Topic</span>\r\n              <Select\r\n                ref={selectTopic}\r\n                options={listTopic}\r\n                styles={{\r\n                  menuList: (base) => ({\r\n                    ...base,\r\n                    maxHeight: '180px', // your desired height\r\n                  }),\r\n                }}\r\n                placeholder=\"Select topic...\"\r\n                onChange={(e) => setTopicId(e.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-row gap-6\">\r\n            <span className=\"flex items-center\">Skills</span>\r\n            <div>\r\n              <Select\r\n                ref={selectSkill}\r\n                placeholder=\"Select question types...\"\r\n                closeMenuOnSelect={false}\r\n                isMulti\r\n                options={listSkill}\r\n                onChange={handleSelectSkills}\r\n                className=\"min-w-[452px] max-w-[452px]\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-row gap-2 items-center mb-5\">\r\n            <span>Would you like a hint?</span>\r\n            <Select\r\n              options={hintOption}\r\n              defaultValue={hintOption[0]}\r\n              onChange={(e) => setIsHint(e.value)}\r\n              className=\"w-[180px]\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-center w-full\">\r\n            <Button\r\n              className=\"btn btn-primary w-[50%]\"\r\n              onClick={handleGenerateQuestionForAssignment}\r\n            >\r\n              Generate\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenerateQuestionForAssignenment\r\n","export function substringBetween(s, a, b) {\r\n  var p = s.indexOf(a) + a.length\r\n  return s.substring(p, s.indexOf(b, p))\r\n}\r\n\r\nexport function insertTextAtCurrentCursor(position, string, text) {\r\n  return (\r\n    string.substring(0, position) +\r\n    text +\r\n    string.substring(position, string?.length)\r\n  )\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport 'mathlive';\r\nimport Select from 'react-select';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n// import { utils } from 'react-modern-calendar-datepicker';\r\n// import DatePicker from '@hassanmojab/react-modern-calendar-datepicker';\r\nimport Modal from 'react-modal';\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\n\r\nimport { API_URL } from '../../constant';\r\nimport Button from '../../components/Button';\r\nimport AssignmentInfo from '../../components/Teacher/AssignmentInfo';\r\nimport QuestionItem from '../../components/Teacher/QuestionItem';\r\nimport MultiChoice from '../../components/Teacher/AnswerType/MultiChoice';\r\nimport TrueFalse from '../../components/Teacher/AnswerType/TrueFalse';\r\nimport InputAnswer from '../../components/Teacher/AnswerType/InputAnswer';\r\nimport MultiSelect from '../../components/Teacher/AnswerType/MultiSelect';\r\nimport QuestionBank from '../../components/Teacher/QuestionBank';\r\nimport GenerateQuestionForAssignenment from '../../components/Teacher/GenerateQuestionForAssignenment';\r\nimport QuestionOption from '../../components/Teacher/QuestionOption';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\nimport ConfirmModal from '../../components/Modals/ConfirmModal';\r\nimport { insertTextAtCurrentCursor } from '../../utils/utils';\r\nimport { useRef } from 'react';\r\n\r\nconst customStyles = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(165, 165, 165, 0.6)',\r\n    },\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        border: 'none',\r\n        borderRadius: '8px',\r\n    },\r\n};\r\n\r\nconst axiosJWT = createAxiosJWT();\r\nconst TeacherAssignment = () => {\r\n    const Selectoptions = [\r\n        { value: 1, label: 'Multi Choice' },\r\n        { value: 2, label: 'True False' },\r\n        { value: 3, label: 'Input' },\r\n        { value: 4, label: 'Multi Select' },\r\n    ];\r\n    const { skillId, classId, assignmentId } = useParams();\r\n    const [assignmentInfo, setAssignmentInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        setAssignmentInfo((prev) => {\r\n            prev.skillId = skillId;\r\n            prev.classId = classId;\r\n            prev.assignmentId = assignmentId;\r\n            return prev;\r\n        });\r\n    }, [skillId, classId, assignmentId]);\r\n\r\n    useEffect(() => {\r\n        axiosJWT.get(API_URL + `skill/${skillId}`).then((res) => {\r\n            setAssignmentInfo((prev) => {\r\n                prev.gradeId = res.data?.gradeId;\r\n                prev.topicId = res.data?.topicId;\r\n                return prev;\r\n            });\r\n        });\r\n    }, [skillId]);\r\n\r\n    const navigate = useNavigate();\r\n    const [question, setQuestion] = useState('');\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [score, setScore] = useState(10);\r\n    const [selectedOption, setSelectedOption] = useState(Selectoptions[0]);\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    //save\r\n    const [openSaveConfirm, setOpenSaveConfirm] = useState(false);\r\n\r\n    const [enableHint, setEnableHint] = useState(false);\r\n    const [hint, setHint] = useState('');\r\n    const [answers, setAnswers] = useState({\r\n        multiChoice: [\r\n            { isTrue: false, answer: '' },\r\n            { isTrue: false, answer: '' },\r\n            { isTrue: false, answer: '' },\r\n            { isTrue: false, answer: '' },\r\n        ],\r\n        multiSelect: [],\r\n        input: [],\r\n        trueFalse: [],\r\n    });\r\n    const levelOption = [\r\n        { value: 'Easy', label: 'Easy' },\r\n        { value: 'Medium', label: 'Medium' },\r\n        { value: 'Hard', label: 'Hard' },\r\n    ];\r\n    const [currentQid, setCurrentQid] = useState('');\r\n    const [, forceUpdate] = useReducer((x) => x + 1, 0);\r\n\r\n    const [selectedGrade, setSelectedGrade] = useState({});\r\n    const [selectedTopic, setSelectedTopic] = useState({});\r\n    const [selectedSkills, setSelectedSkills] = useState([]);\r\n    const [selectedLevel, setSelectedLevel] = useState(levelOption[0]);\r\n\r\n    const [selectedAssignmentName, setSelectedAssignmentName] = useState('');\r\n    const [selectedTotalScore, setSelectedTotalScore] = useState(0);\r\n    const [selectedPassScore, setSelectedPassScore] = useState(0);\r\n    const [selectedDueTime, setSelectedDueTime] = useState(0);\r\n    const [selectedDoTime, setSelectedDoTime] = useState(0);\r\n    const [selectedRedo, setSelectedRedo] = useState(0);\r\n\r\n    const [modalBankIsOpen, setBankIsOpen] = useState(false);\r\n    const [modalGenerateIsOpen, setGenerateIsOpen] = useState(false);\r\n\r\n    const handleOpenModalBank = () => {\r\n        setBankIsOpen(true);\r\n    };\r\n\r\n    const handleCloseModalBank = () => {\r\n        setBankIsOpen(false);\r\n    };\r\n\r\n    const handleOpenModalGenerate = () => {\r\n        setGenerateIsOpen(true);\r\n    };\r\n\r\n    const handleCloseModalGenerate = () => {\r\n        setGenerateIsOpen(false);\r\n    };\r\n\r\n    const handleUpdateQuestionBank = (questionBank) => {\r\n        setQuestionList([...questionBank]);\r\n    };\r\n    const handleUpdateGenerateQuestion = (questionGenerate) => {\r\n        setQuestionList([...questionList, ...questionGenerate]);\r\n    };\r\n    const handleScore = (e) => {\r\n        const score = Math.max(0, Math.min(100, Number(e.target.value)));\r\n        setScore(score);\r\n    };\r\n\r\n    const handleEnableHint = () => {\r\n        setEnableHint(!enableHint);\r\n    };\r\n    const resetValue = () => {\r\n        setCurrentQid('');\r\n        setScore(10);\r\n        setQuestion('');\r\n        setHint('');\r\n        setEnableHint(false);\r\n        setSelectedOption(Selectoptions[0]);\r\n        setAnswers({\r\n            multiChoice: [\r\n                { isTrue: false, answer: '' },\r\n                { isTrue: false, answer: '' },\r\n                { isTrue: false, answer: '' },\r\n                { isTrue: false, answer: '' },\r\n            ],\r\n            multiSelect: [],\r\n            input: [],\r\n            trueFalse: [],\r\n        });\r\n        setSelectedLevel(levelOption[0]);\r\n        forceUpdate();\r\n    };\r\n\r\n    const addQuestionItem = () => {\r\n        if (selectedOption?.value === 1) {\r\n            let filteredArr = answers.multiChoice.reduce((acc, current) => {\r\n                const x = acc.find((item) => item.answer === current.answer);\r\n                if (!x) {\r\n                    return acc.concat([current]);\r\n                } else {\r\n                    return acc;\r\n                }\r\n            }, []);\r\n            if (\r\n                filteredArr.length !== answers.multiChoice.length ||\r\n                answers.multiChoice.some((val) => val.answer === '')\r\n            ) {\r\n                return setDisable(true);\r\n            }\r\n\r\n            if (!answers.multiChoice.some((val) => val.isTrue === true)) {\r\n                return setDisable(true);\r\n            }\r\n        }\r\n\r\n        if (selectedOption?.value === 2) {\r\n            if (!answers.trueFalse.some((val) => val.isTrue === true)) {\r\n                return setDisable(true);\r\n            }\r\n        }\r\n\r\n        if (selectedOption?.value === 3) {\r\n            if (!answers.input[0]) {\r\n                return setDisable(true);\r\n            }\r\n        }\r\n\r\n        if (selectedOption?.value === 4) {\r\n            // let filteredArr = answers.multiSelect.reduce((acc, current) => {\r\n            //     const x = acc.find((item) => item.answer === current.answer);\r\n            //     if (!x) {\r\n            //         return acc.concat([current]);\r\n            //     } else {\r\n            //         return acc;\r\n            //     }\r\n            // }, []);\r\n            // if (\r\n            //     filteredArr.length !== answers.multiSelect.length ||\r\n            //     answers.multiSelect.some((val) => val.answer === '')\r\n            // ) {\r\n            //     return setDisable(true);\r\n            // }\r\n            // if (!answers.multiChoice.some((val) => val.isTrue === true)) {\r\n            //     return setDisable(true);\r\n            // }\r\n        }\r\n\r\n        setDisable(false);\r\n\r\n        if (questionList.find((item) => item.id === currentQid)) {\r\n            let index = questionList.findIndex((item) => item.id === currentQid);\r\n            const questionUpdate = {\r\n                content: question,\r\n                option: answers,\r\n                hint: hint,\r\n                score: score,\r\n                level: selectedLevel?.label,\r\n                skillIds: [selectedSkills[0]?.value],\r\n                questionTypeId: selectedOption?.value,\r\n            };\r\n            console.log('Question update', questionUpdate);\r\n            axiosJWT\r\n                .put(API_URL + `question/${currentQid}`, questionUpdate)\r\n                .then((res) => {\r\n                    questionList[index] = {\r\n                        id: res.data?.id,\r\n                        content: res.data?.content,\r\n                        hint: res.data?.hint,\r\n                        score: res.data?.score,\r\n                        option: res.data?.option,\r\n                        level: res.data?.level,\r\n                        questionTypeId: res.data?.questionTypeId,\r\n                        teacherId: res.data?.teacherId,\r\n                        gradeId: res.data?.gradeId,\r\n                        topicId: res.data?.topicId,\r\n                        skillIds: res.data?.skillIds,\r\n                    };\r\n                    setQuestionList([...questionList]);\r\n                    resetValue();\r\n                })\r\n                .catch((err) => console.log(err));\r\n            return;\r\n        }\r\n        let questionCreate = {\r\n            content: question,\r\n            option: answers,\r\n            hint: hint,\r\n            score: score,\r\n            level: selectedLevel?.label,\r\n            skillIds: [selectedSkills[0]?.value],\r\n            questionTypeId: selectedOption?.value,\r\n        };\r\n        axiosJWT\r\n            .post(API_URL + `question`, questionCreate)\r\n            .then((res) => {\r\n                const questionNewCreate = {\r\n                    id: res.data?.id,\r\n                    content: res.data?.content,\r\n                    hint: res.data?.hint,\r\n                    score: res.data?.score,\r\n                    option: res.data?.option,\r\n                    level: res.data?.level,\r\n                    questionTypeId: res.data?.questionTypeId,\r\n                    teacherId: res.data?.teacherId,\r\n                    gradeId: res.data?.gradeId,\r\n                    topicId: res.data?.topicId,\r\n                    skillIds: res.data?.skillIds,\r\n                };\r\n                setQuestionList([...questionList, questionNewCreate]);\r\n                resetValue();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    const removeQuestionItem = (id) => {\r\n        const newList = questionList.filter((item) => item.id !== id);\r\n        setQuestionList(newList);\r\n        resetValue();\r\n    };\r\n\r\n    const handleSaveAssignment = async ({ isTrial }) => {\r\n        const assignment = {\r\n            assignmentName: selectedAssignmentName,\r\n            doTime: selectedDoTime,\r\n            dateDue: selectedDueTime,\r\n            passScore: selectedPassScore,\r\n            totalScore: selectedTotalScore,\r\n            redo: selectedRedo,\r\n        };\r\n        await axiosJWT.put(API_URL + `assignment/${assignmentId}`, assignment);\r\n\r\n        const questionIds = questionList.map((question) => question.id);\r\n        await axiosJWT.put(API_URL + `assignment-question/assignment/${assignmentId}`, {\r\n            questionIds,\r\n        });\r\n\r\n        if (classId) {\r\n            await axiosJWT.put(\r\n                API_URL + `class-assignment/class/${classId}/assignment/${assignmentId}`,\r\n                {\r\n                    dueDay: selectedDueTime,\r\n                }\r\n            );\r\n            await axiosJWT.put(\r\n                API_URL + `student-assignment/assignment/${assignmentId}/class/${classId}/date-due`,\r\n                {\r\n                    dueDay: selectedDueTime,\r\n                }\r\n            );\r\n        }\r\n        if (isTrial) {\r\n            await axiosJWT.put(\r\n                API_URL + `teacher-assignment/teacher/assignment/${assignmentId}/trial`\r\n            );\r\n            return navigate(`/assignment/${assignmentId}/question`);\r\n        }\r\n        return navigate(-1);\r\n    };\r\n\r\n    const convertResToOption = (value, label) => {\r\n        return {\r\n            value: value,\r\n            label: label,\r\n        };\r\n    };\r\n\r\n    const [listGrade, setListGrade] = useState([]);\r\n    const [listTopic, setListTopic] = useState([]);\r\n    const [listSkill, setListSkill] = useState([]);\r\n\r\n    const handleReviewQuestion = (data) => {\r\n        setCurrentQid(data?.id);\r\n        setQuestion(data?.content);\r\n        if (data?.hint !== '') {\r\n            setEnableHint(true);\r\n            setHint(data?.hint);\r\n        } else {\r\n            setEnableHint(false);\r\n            setHint('');\r\n        }\r\n        setAnswers(data?.option);\r\n        setScore(data?.score);\r\n        setSelectedOption(Selectoptions[data?.questionTypeId - 1]);\r\n        //\r\n        setSelectedLevel(levelOption.find((val) => val.label === data?.level));\r\n        setSelectedGrade(listGrade.find((val) => val.value === data?.gradeId));\r\n        setSelectedTopic(listTopic.find((val) => val.value === data?.topicId));\r\n        setSelectedSkills([listSkill && listSkill.find((val) => val.value === data?.skillIds[0])]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosJWT.get(API_URL + `grade/teacher`).then((res) => {\r\n            const grades = res.data;\r\n            const option = [];\r\n            for (let i = 0; i < grades.length; i++)\r\n                option.push(convertResToOption(grades[i].id, grades[i].gradeName));\r\n            setListGrade(option);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedGrade)\r\n            axiosJWT.get(API_URL + `topic/teacher/grade/${selectedGrade?.value}`).then((res) => {\r\n                const topics = res.data;\r\n                const option = [];\r\n                for (let i = 0; i < topics.length; i++)\r\n                    option.push(convertResToOption(topics[i].id, topics[i].topicName));\r\n                setListTopic(option);\r\n            });\r\n    }, [selectedGrade]);\r\n\r\n    useEffect(() => {\r\n        if (selectedTopic)\r\n            axiosJWT.get(API_URL + `skill/topic/${selectedTopic?.value}`).then((res) => {\r\n                const skills = res.data;\r\n                const option = [];\r\n                for (let i = 0; i < skills.length; i++)\r\n                    option.push(convertResToOption(skills[i].id, skills[i].skillName));\r\n                setListSkill(option);\r\n            });\r\n    }, [selectedTopic]);\r\n\r\n    useEffect(() => {\r\n        axiosJWT.get(API_URL + `assignment-question/assignment/${assignmentId}`).then((res) => {\r\n            const assignmentQuestion = res.data;\r\n            setQuestionList(\r\n                assignmentQuestion.map((question) => ({\r\n                    id: question?.questionId,\r\n                    content: question?.content,\r\n                    hint: question?.hint,\r\n                    score: question?.score,\r\n                    option: question?.option,\r\n                    level: question?.level,\r\n                    questionTypeId: question?.questionTypeId,\r\n                    teacherId: question?.teacherId,\r\n                    gradeId: question?.gradeId,\r\n                    topicId: question?.topicId,\r\n                    skillIds: question?.skillIds,\r\n                }))\r\n            );\r\n        });\r\n    }, [assignmentId]);\r\n\r\n    // useEffect(() => {\r\n    //   if (selectedLevel) {\r\n    //     if (selectedLevel.toLowerCase() === 'easy') setScore(5)\r\n    //     if (selectedLevel.toLowerCase() === 'medium') setScore(10)\r\n    //     if (selectedLevel.toLowerCase() === 'hard') setScore(20)\r\n    //   }\r\n    // }, [selectedLevel, score])\r\n    const mathLiveRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const mf = document.querySelector('#formula');\r\n        mf.setValue(\r\n            String.raw`\\begin{multline}\r\n    ` +\r\n                question +\r\n                String.raw`\r\n    \\end{multline}`\r\n        );\r\n    }, [question]);\r\n\r\n    const handleMathLiveChange = (e) => {\r\n        setQuestion(e.target.value);\r\n    };\r\n\r\n    const handleAddMath = (math) => {\r\n        let mathString = ``;\r\n        if (math === 'fraction') {\r\n            mathString = String.raw`\\frac{x1}{x2}`;\r\n        }\r\n        if (math === 'squareRoot') {\r\n            mathString = String.raw`\\sqrt{x}`;\r\n        }\r\n        if (math === 'sin') {\r\n            mathString = String.raw`\\sin{x}`;\r\n        }\r\n        if (math === 'cos') {\r\n            mathString = String.raw`\\cos{x}`;\r\n        }\r\n        if (math === 'tan') {\r\n            mathString = String.raw`\\tan{x}`;\r\n        }\r\n        if (math === 'text') {\r\n            mathString = String.raw`\\text{Example}`;\r\n        }\r\n        if (math === 'pow') {\r\n            mathString = `x^1`;\r\n        }\r\n        if (math === 'degree') {\r\n            mathString = String.raw`\\degree`;\r\n        }\r\n        setQuestion(\r\n            insertTextAtCurrentCursor(mathLiveRef.current.selectionStart, question, mathString)\r\n        );\r\n    };\r\n\r\n    // String.raw`\\\\`\r\n    const handleNextLine = () => {\r\n        setQuestion(\r\n            insertTextAtCurrentCursor(mathLiveRef.current.selectionStart, question, String.raw`\\\\`)\r\n        );\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleNextLine();\r\n        }\r\n    };\r\n\r\n    const [invalid, setInvalid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (questionList.reduce((sum, a) => sum + a.score, 0) > selectedTotalScore) {\r\n            setSelectedTotalScore(questionList.reduce((sum, a) => sum + a.score, 0));\r\n            setInvalid(false);\r\n        }\r\n        if (questionList.reduce((sum, a) => sum + a.score, 0) === parseInt(selectedTotalScore)) {\r\n            setInvalid(false);\r\n        } else {\r\n            setInvalid(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [questionList, selectedTotalScore]);\r\n\r\n    return (\r\n        <div className='flex flex-col items-center gap-7 justify-center h-full'>\r\n            <div className='flex flex-row gap-7 justify-center w-full h-fit'>\r\n                <div className='w-[800px] bg-white rounded-lg shadow-lg flex flex-col justify-between my-4 px-10 py-5'>\r\n                    <div className='flex flex-col gap-4'>\r\n                        <div className='h-[88px]'>\r\n                            <QuestionOption\r\n                                assignmentInfo={assignmentInfo}\r\n                                levelOption={levelOption}\r\n                                listGrade={listGrade}\r\n                                setListGrade={setListGrade}\r\n                                listTopic={listTopic}\r\n                                setListTopic={setListTopic}\r\n                                listSkill={listSkill}\r\n                                setListSkill={setListSkill}\r\n                                setSelectedSkills={setSelectedSkills}\r\n                                selectedSkills={selectedSkills}\r\n                                setSelectedLevel={setSelectedLevel}\r\n                                selectedLevel={selectedLevel}\r\n                                setSelectedGrade={setSelectedGrade}\r\n                                selectedGrade={selectedGrade}\r\n                                setSelectedTopic={setSelectedTopic}\r\n                                selectedTopic={selectedTopic}\r\n                                handleScore={handleScore}\r\n                                score={score}\r\n                            />\r\n                        </div>\r\n\r\n                        <math-field\r\n                            id='formula'\r\n                            style={{\r\n                                whiteSpace: 'initial',\r\n                                fontSize: '20px',\r\n                                outline: 'none',\r\n                                padding: '0.5rem 1.5rem',\r\n                                userSelect: 'none',\r\n                                width: '100%',\r\n                                maxHeight: '150px',\r\n                                overflowWrap: 'break-word',\r\n                                fontFamily: 'Poppins',\r\n                            }}\r\n                            readonly\r\n                        ></math-field>\r\n                        {enableHint && (\r\n                            <div className='px-6 py-3 text-white flex flex-row gap-4 h-fit items-baseline bg-primary rounded-md w-full'>\r\n                                <i className='far fa-lightbulb'></i>\r\n                                <span className='whitespace-normal break-words w-[90%]'>\r\n                                    {hint ? hint : 'Hint'}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                        <span className='text-primary text-sm px-2'>* \\\\ is for next line</span>\r\n                        <div className='flex flex-row gap-5'>\r\n                            <Button onClick={() => handleAddMath('fraction')}>\r\n                                <i className='fa-solid fa-percent'></i>\r\n                            </Button>\r\n                            <Button onClick={() => handleAddMath('squareRoot')}>\r\n                                <i className='fa-solid fa-square-root-variable'></i>\r\n                            </Button>\r\n                            <Button onClick={() => handleAddMath('pow')}>\r\n                                <i className='fa-solid fa-superscript'></i>\r\n                            </Button>\r\n                            <Button onClick={() => handleAddMath('degree')}>°</Button>\r\n                            <Button onClick={() => handleAddMath('sin')}>Sin</Button>\r\n                            <Button onClick={() => handleAddMath('cos')}>Cos</Button>\r\n                            <Button onClick={() => handleAddMath('tan')}>Tan</Button>\r\n                            <Button onClick={() => handleAddMath('text')} className='text-sm'>\r\n                                Write normal text\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <textarea\r\n                            id='latex'\r\n                            ref={mathLiveRef}\r\n                            className='outline-none focus:shadow-md duration-300 shadow-sm bg-gray-100 rounded-lg resize-none px-4 py-[0.5rem] h-36'\r\n                            onChange={(e) => handleMathLiveChange(e)}\r\n                            onKeyDown={(e) => handleKeyDown(e)}\r\n                            value={question || ''}\r\n                            placeholder='Type your question'\r\n                        />\r\n                        <div className='flex flex-row gap-5 items-baseline duration-500'>\r\n                            <div className='flex flex-row items-baseline gap-5 h-[72px]'>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    checked={enableHint}\r\n                                    onClick={() => setHint('')}\r\n                                    onChange={handleEnableHint}\r\n                                    className='hidden'\r\n                                    id='hint'\r\n                                />\r\n                                <label htmlFor='hint' className='cursor-pointer select-none py-1'>\r\n                                    {enableHint ? (\r\n                                        <span className='bg-primary rounded-md px-2 border-2 border-primary py-1 text-white duration-300'>\r\n                                            Hint\r\n                                        </span>\r\n                                    ) : (\r\n                                        <span className='bg-white rounded-md px-2 py-1 border-2 border-gray-500 duration-300'>\r\n                                            Hint\r\n                                        </span>\r\n                                    )}\r\n                                </label>\r\n                            </div>\r\n                            {enableHint && (\r\n                                <motion.textarea\r\n                                    layout\r\n                                    maxLength='250'\r\n                                    placeholder='Enter hint'\r\n                                    value={hint || ''}\r\n                                    className='outline-none border-b-2 duration-500 px-2 py-1 w-full resize-none overflow-y'\r\n                                    onChange={(e) => {\r\n                                        setHint(e.target.value);\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='flex flex-row items-center justify-between'>\r\n                        <span className='font-medium text-xl'>Answers</span>\r\n                        <Select\r\n                            value={selectedOption || ''}\r\n                            defaultValue={Selectoptions[0]}\r\n                            onChange={setSelectedOption}\r\n                            options={Selectoptions}\r\n                            className='w-44 transition-all'\r\n                        />\r\n                    </div>\r\n                    <div className='flex flex-col justify-center content-center min-h-[184px] my-2'>\r\n                        {selectedOption?.value === 1 ? (\r\n                            <MultiChoice\r\n                                setAnswers={setAnswers}\r\n                                answers={answers}\r\n                                questionType={selectedOption}\r\n                            />\r\n                        ) : selectedOption?.value === 2 ? (\r\n                            <TrueFalse\r\n                                setAnswers={setAnswers}\r\n                                answers={answers}\r\n                                questionType={selectedOption}\r\n                            />\r\n                        ) : selectedOption?.value === 3 ? (\r\n                            <InputAnswer\r\n                                setAnswers={setAnswers}\r\n                                answers={answers}\r\n                                questionType={selectedOption}\r\n                            />\r\n                        ) : selectedOption?.value === 4 ? (\r\n                            <MultiSelect\r\n                                setAnswers={setAnswers}\r\n                                answers={answers}\r\n                                questionType={selectedOption}\r\n                            />\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </div>\r\n\r\n                    {disable && <span className='text-red-500 self-end'>* Invalid answers</span>}\r\n\r\n                    <div className='flex flex-row-reverse'>\r\n                        <Button\r\n                            className='border-none shadow-lg'\r\n                            disabled={question === ''}\r\n                            onClick={() => {\r\n                                addQuestionItem();\r\n                            }}\r\n                        >\r\n                            {currentQid ? 'Save' : 'Create Question'}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-col my-4 gap-3'>\r\n                    <div className='bg-white w-[400px] p-7 rounded-lg shadow-lg flex flex-col justify-between'>\r\n                        <AssignmentInfo\r\n                            setSelectedAssignmentName={setSelectedAssignmentName}\r\n                            setSelectedPassScore={setSelectedPassScore}\r\n                            setSelectedTotalScore={setSelectedTotalScore}\r\n                            setSelectedDueTime={setSelectedDueTime}\r\n                            setSelectedDoTime={setSelectedDoTime}\r\n                            setSelectedRedo={setSelectedRedo}\r\n                        />\r\n                    </div>\r\n                    <div className='grow bg-white w-[400px] pb-7 rounded-lg shadow-lg flex flex-col justify-between'>\r\n                        <div>\r\n                            <div className='flex justify-between px-10 pt-8'>\r\n                                <span className='font-medium text-xl'>Question list</span>\r\n                                <div className='flex items-center'>\r\n                                    <span\r\n                                        className='text-primary cursor-pointer'\r\n                                        onClick={handleOpenModalBank}\r\n                                    >\r\n                                        Bank question\r\n                                    </span>\r\n                                    <Modal\r\n                                        isOpen={modalBankIsOpen}\r\n                                        style={{\r\n                                            top: '0',\r\n                                            left: '0',\r\n                                            right: 'auto',\r\n                                            bottom: 'auto',\r\n                                            marginRight: '-50%',\r\n                                            transform: 'translate(-50%, -50%)',\r\n                                        }}\r\n                                        contentLabel='Example Modal'\r\n                                        ariaHideApp={false}\r\n                                    >\r\n                                        <QuestionBank\r\n                                            questionsBank={questionList}\r\n                                            onUpdateQuestionBank={handleUpdateQuestionBank}\r\n                                            onCloseModalBank={handleCloseModalBank}\r\n                                        />\r\n                                    </Modal>\r\n                                </div>\r\n                            </div>\r\n                            <div className='h-[300px] rounded-sm mx-5 my-5 px-2 py-2 flex flex-col gap-4 overflow-y-auto duration-1000'>\r\n                                {questionList.map((val, i) => (\r\n                                    <QuestionItem\r\n                                        question={val}\r\n                                        key={val + i}\r\n                                        index={i}\r\n                                        removeQuestionItem={() => {\r\n                                            removeQuestionItem(val.id);\r\n                                        }}\r\n                                        handleReviewQuestion={handleReviewQuestion}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex flex-col w-full justify-center items-center gap-5'>\r\n                            <div className='flex w-full items-center justify-center'>\r\n                                <Button\r\n                                    className='w-[80%] border-none shadow-lg'\r\n                                    onClick={handleOpenModalGenerate}\r\n                                >\r\n                                    Generate question\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <Modal\r\n                                isOpen={modalGenerateIsOpen}\r\n                                style={customStyles}\r\n                                contentLabel='Example Modal'\r\n                                ariaHideApp={false}\r\n                            >\r\n                                <GenerateQuestionForAssignenment\r\n                                    selectedGrade={selectedGrade}\r\n                                    selectedTopic={selectedTopic}\r\n                                    selectedSkills={selectedSkills}\r\n                                    listCurrentQuestion={questionList}\r\n                                    onCloseModalGenerate={handleCloseModalGenerate}\r\n                                    onUpdateGenerateQuestion={handleUpdateGenerateQuestion}\r\n                                />\r\n                            </Modal>\r\n                            <div className='flex w-full items-center justify-center'>\r\n                                <ConfirmModal\r\n                                    isOpen={openSaveConfirm}\r\n                                    message='If you want to trial these questions? Click yes.\r\n                                  If you want to go back the last page click no.'\r\n                                    yesConfirm={() => handleSaveAssignment({ isTrial: true })}\r\n                                    noConfirm={() => handleSaveAssignment({ isTrial: false })}\r\n                                />\r\n                                <Button\r\n                                    className='w-[80%] border-none shadow-lg disabled:bg-gray-500'\r\n                                    onClick={() => setOpenSaveConfirm(!openSaveConfirm)}\r\n                                    disabled={invalid}\r\n                                >\r\n                                    {invalid ? `Invalid total score` : `Save`}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeacherAssignment;\r\n"],"names":["isOpen","message","yesConfirm","noConfirm","style","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","borderRadius","shouldCloseOnOverlayClick","contentLabel","ariaHideApp","className","onClick","Table","checkboxTable","customCssTr","thead","tbody","actions","onClickTh","checked","scope","width","map","head","index","arr","length","title","uuidv4","body","bodyKeys","Object","keys","filter","key","type","includes","id","onChange","bodyKey","maxWidth","action","eventAction","name","memo","axiosJWT","createAxiosJWT","setSelectedAssignmentName","setSelectedDueTime","setSelectedDoTime","setSelectedPassScore","setSelectedTotalScore","setSelectedRedo","assignmentId","useParams","useState","assignmentName","setAssignmentName","doTime","setDoTime","passScore","setPassScore","totalScore","setTotalScore","redo","setRedo","utils","getToday","selectedDay","setSelectedDay","hour","minute","dueTime","setDueTime","useEffect","newDueTime","year","month","day","get","API_URL","then","res","assignment","data","moment","dateDue","value","maxLength","onKeyDown","e","target","inputPlaceholder","calendarPopperPosition","calendarClassName","wrapperClassName","inputClassName","minimumDate","shouldHighlightWeekends","placeholder","min","questionsBank","onUpdateQuestionBank","onCloseModalBank","Selectoptions","label","bank","setBank","viewBank","setViewBank","valueQuestionBank","setValueQuestionBank","setChecked","questionBank","setQuestionBank","questionsConfirm","setQuestionsConfirm","grades","setGrades","currentGrade","setCurrentGrade","topics","setTopics","currentTopic","setCurrentTopic","skills","setSkills","currentSkill","setCurrentSkill","currentLevel","setCurrentLevel","currentQuestion","setCurrentQuestion","questionBankContent","setQuestionBankContent","enableHitQuestionBank","setEnableHitQuestionBank","hintQuestionBank","setHintQuestionBank","multiChoice","isTrue","answers","multiSelect","input","trueFalse","optionQuestionBank","setOptionQuestionBank","selectedOptionType","setSelectedOptionType","score","setScore","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","level","setLevel","bankFormula","useRef","React","modalConfirmQuestionIsOpen","setConfirmQuestionIsOpen","searchParam","setSearchParam","handleCloseConfirmQuestion","handleClickQuestionBank","prev","prevQuestions","question","handleReviewQuestionBank","item","find","questionInBank","hint","option","questionTypeId","convertResToOption","push","i","gradeName","topicName","skillName","gradeId","topicId","skillId","questions","topic","grade","getQuestionBank","document","overflow","current","setValue","endOffset","filteredBank","val","toLowerCase","slice","console","log","Math","ceil","ref","whiteSpace","fontSize","outline","padding","userSelect","maxHeight","overflowWrap","fontFamily","readonly","motion","layout","animate","opacity","initial","exit","transition","duration","MultiChoice","setAnswers","questionType","TrueFalse","InputAnswer","MultiSelect","options","required","Button","questionChecked","valueQuestion","valueOfQuestion","breakLabel","nextLabel","onPageChange","event","selected","newOffset","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","activeClassName","selectedGrade","selectedTopic","selectedSkills","listCurrentQuestion","onCloseModalGenerate","onUpdateGenerateQuestion","isHint","setIsHint","levels","setLevels","questionTypes","setQuestionTypes","setGradeId","setTopicId","skillIds","setSkillIds","numberQuestion","setNumberQuestion","listGrade","setListGrade","listTopic","setListTopic","listSkill","setListSkill","selectGrade","selectTopic","selectSkill","prevSkill","hintOption","skill","closeMenuOnSelect","isMulti","values","Number","styles","menuList","base","defaultValue","currentQuestions","conditions","post","insertTextAtCurrentCursor","string","text","substring","customStyles","classId","assignmentInfo","setAssignmentInfo","navigate","useNavigate","setQuestion","questionList","setQuestionList","selectedOption","setSelectedOption","disable","setDisable","openSaveConfirm","setOpenSaveConfirm","enableHint","setEnableHint","setHint","answer","levelOption","currentQid","setCurrentQid","useReducer","x","forceUpdate","setSelectedGrade","setSelectedTopic","setSelectedSkills","selectedLevel","setSelectedLevel","selectedAssignmentName","selectedTotalScore","selectedPassScore","selectedDueTime","selectedDoTime","selectedRedo","modalBankIsOpen","setBankIsOpen","modalGenerateIsOpen","setGenerateIsOpen","resetValue","handleSaveAssignment","isTrial","put","questionIds","dueDay","handleReviewQuestion","assignmentQuestion","questionId","teacherId","mathLiveRef","querySelector","String","raw","handleAddMath","math","mathString","selectionStart","handleKeyDown","invalid","setInvalid","reduce","sum","a","parseInt","QuestionOption","handleScore","max","handleMathLiveChange","htmlFor","disabled","acc","concat","some","findIndex","questionUpdate","catch","err","questionCreate","questionNewCreate","addQuestionItem","QuestionItem","removeQuestionItem","newList","questionGenerate","ConfirmModal"],"sourceRoot":""}