{"version":3,"file":"static/js/549.c21c2048.chunk.js","mappings":"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","sources":["components/Teacher/ClassCard.js","createAxiosJWT.js","pages/TeacherPages/TeacherDashBoard.js"],"sourcesContent":["import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport classroomBackground from './../../assets/image/classroom-background.jpg'\r\n\r\nconst ClassCard = ({ classInfo }) => {\r\n  const navigate = useNavigate()\r\n  const image = classroomBackground\r\n  // 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRzDRXFhE3aK7cERNPeEkefjyjTnQCqXLxxIBvi_h77ieGirPLbfO1D7I7km_BFVYFjGIA&usqp=CAU'\r\n  console.log(classInfo)\r\n\r\n  return (\r\n    <motion.div\r\n      animate={{ opacity: 1 }}\r\n      initial={{ opacity: 0 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n      layout\r\n      className=\"flex flex-col gap-2 bg-white shadow-lg hover:shadow-xl duration-300 w-[250px] h-[200px] rounded-lg\"\r\n      onClick={() => {\r\n        navigate(`/class/${classInfo.id}`)\r\n      }}\r\n    >\r\n      <div className=\"flex justify-center pt-5\">\r\n        <img\r\n          src={classInfo?.classImg || image}\r\n          onError={({ currentTarget }) => {\r\n            currentTarget.onerror = null\r\n            currentTarget.src = image\r\n          }}\r\n          alt=\"\"\r\n          className=\"rounded-md w-[200px] h-[100px] cursor-pointer object-cover\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"flex flex-col ml-6 mr-5\">\r\n        <span className=\"font-[500] text-primary text-lg cursor-pointer truncate\">\r\n          {classInfo?.className}\r\n        </span>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between mt-1 items-center mx-6\">\r\n        <span className=\"text-xs text-gray-500 no-underline cursor-default\">\r\n          {classInfo?.year}\r\n        </span>\r\n        <span className=\"text-xs no-underline cursor-default\">\r\n          Grade:{' '}\r\n          <span className=\"text-primary\">{classInfo?.grade?.gradeName}</span>\r\n        </span>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default ClassCard\r\n","import axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { API_URL } from './constant'\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const refreshToken = localStorage.getItem('refresh_token')\r\n    const res = await axios.post(\r\n      API_URL + `account/refresh-token`,\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${refreshToken}` },\r\n      },\r\n    )\r\n    return res.data\r\n  } catch (err) {\r\n    // return navigation('/');\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst createAxiosJWT = () => {\r\n  const newInstance = axios.create()\r\n  newInstance.interceptors.request.use(\r\n    async (config) => {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      if (accessToken) {\r\n        const decodedToken = jwt_decode(accessToken)\r\n        try {\r\n          if (decodedToken.exp < Date.now() / 1000) {\r\n            const tokens = await refreshToken()\r\n            localStorage.setItem('access_token', tokens.accessToken)\r\n            localStorage.setItem('refresh_token', tokens.refreshToken)\r\n            config.headers['Authorization'] = 'Bearer ' + tokens.accessToken\r\n          } else config.headers['Authorization'] = 'Bearer ' + accessToken\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      return config\r\n    },\r\n    (err) => {\r\n      console.log(err)\r\n      const navigate = useNavigate()\r\n      navigate('/')\r\n      // return Promise.reject(err);\r\n    },\r\n  )\r\n  return newInstance\r\n}\r\n\r\nexport default createAxiosJWT\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport moment from 'moment';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\n// import 'react-modern-calendar-datepicker/lib/DatePicker.css'\r\n// import { Calendar } from 'react-modern-calendar-datepicker'\r\nimport '@hassanmojab/react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport { Calendar } from '@hassanmojab/react-modern-calendar-datepicker';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { faker } from '@faker-js/faker';\r\nimport ClassCard from '../../components/Teacher/ClassCard';\r\nimport { API_URL } from '../../constant';\r\nimport createAxiosJWT from '../../createAxiosJWT';\r\n\r\nconst axiosJWT = createAxiosJWT();\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst TeacherDashBoard = () => {\r\n    moment().locale('en');\r\n\r\n    const navigate = useNavigate();\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n    const [classes, setClasses] = useState([]);\r\n    const [assignments, setAssignments] = useState([]);\r\n    const [assignmentDays, setAssignmentsDays] = useState([]);\r\n    const [averageScoreClasses, setAverageScoreClasses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getClassOfTeacher = async () => {\r\n            const res = await axiosJWT.get(API_URL + `class/teacher`);\r\n            const listClass = res.data;\r\n            const listClassDashBoard = listClass.slice(0, 3);\r\n            setClasses(listClassDashBoard);\r\n        };\r\n\r\n        const getAssignmentOfTeacher = async () => {\r\n            const res = await axiosJWT.get(API_URL + `assignment/teacher`);\r\n            setAssignments(res.data);\r\n            handleDays(res.data);\r\n        };\r\n\r\n        const getAverageScore = async () => {\r\n            const res = await axiosJWT.get(API_URL + `class/teacher/average-score`);\r\n            setAverageScoreClasses(res.data);\r\n        };\r\n\r\n        getClassOfTeacher();\r\n        getAssignmentOfTeacher();\r\n        getAverageScore();\r\n    }, []);\r\n\r\n    const handleDays = (assignments) => {\r\n        let days = [];\r\n\r\n        // [\r\n        //   {\r\n        //     year: 2022,\r\n        //     month: 9,\r\n        //     day: 26,\r\n        //     className: 'deadline',\r\n        //   },\r\n        // ]\r\n\r\n        for (let i = 0; i < assignments?.length; i++) {\r\n            days.push({\r\n                year: parseInt(moment(assignments[i]?.dateDue).format('YYYY')),\r\n                month: parseInt(moment(assignments[i]?.dateDue).format('MM')),\r\n                day: parseInt(moment(assignments[i]?.dateDue).format('DD')),\r\n                className: 'deadline',\r\n            });\r\n        }\r\n        setAssignmentsDays(days);\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                position: `'top' as const`,\r\n            },\r\n            title: {\r\n                display: 'true',\r\n                text: 'Average Score',\r\n            },\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            min: 0,\r\n                            max: 100,\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    };\r\n    // classes\r\n    const labels = averageScoreClasses.map((averageScoreClass) => averageScoreClass.className);\r\n    console.log(averageScoreClasses);\r\n    const dataAverageScore = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Dataset 1',\r\n                data: averageScoreClasses.map(\r\n                    (averageScoreClass) => averageScoreClass.averageScore\r\n                ),\r\n                borderColor: 'rgb(117,185,204)',\r\n                backgroundColor: 'rgb(117,185,204, 0.5)',\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className='flex flex-col h-[100vh]'>\r\n            <div className='flex flex-row w-full divide-solid h-full pt-8'>\r\n                <div className='w-[75%] h-[100%] overflow-hidden flex flex-col  items-center'>\r\n                    <div className='flex justify-center min-w-[92%] bg-white rounded-md shadow-md hover:shadow-lg transition-all'>\r\n                        <Bar\r\n                            responsive='true'\r\n                            height={175}\r\n                            width={400}\r\n                            className='chartJS'\r\n                            options={options}\r\n                            data={dataAverageScore}\r\n                        />\r\n                    </div>\r\n                    <div className='flex min-w-[90%] mt-10 gap-10 mb-8'>\r\n                        <div className='flex flex-col gap-5 w-full'>\r\n                            <div className='flex justify-between items-center'>\r\n                                <span className='font-semibold text-xl'>Classes</span>\r\n                                <span\r\n                                    className='mr-3 text-sm duration-300 hover:cursor-pointer hover:underline underline-offset-4'\r\n                                    onClick={() => {\r\n                                        navigate('/class');\r\n                                    }}\r\n                                >\r\n                                    View all\r\n                                </span>\r\n                            </div>\r\n                            <div className='flex flex-row gap-7 w-full'>\r\n                                {classes &&\r\n                                    classes.map((val, index) => {\r\n                                        return <ClassCard key={val?.id} classInfo={val} />;\r\n                                    })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* calendar */}\r\n                <div className='min-w-[30%]'>\r\n                    <div className='flex items-center justify-center'>\r\n                        <Calendar\r\n                            colorPrimary='#75b9cc'\r\n                            value={selectedDay}\r\n                            onChange={setSelectedDay}\r\n                            calendarClassName='custom-calendar'\r\n                            calendarTodayClassName='custom-today-day'\r\n                            customDaysClassName={assignmentDays}\r\n                            renderFooter={() => (\r\n                                <motion.div\r\n                                    style={{\r\n                                        height: '245px',\r\n                                        paddingLeft: '2rem',\r\n                                        paddingRight: '2rem',\r\n                                    }}\r\n                                    animate={{ opacity: 1 }}\r\n                                    initial={{ opacity: 0 }}\r\n                                    exit={{ opacity: 0 }}\r\n                                    layout\r\n                                    className='flex flex-col gap-3'\r\n                                >\r\n                                    <span className='text-base text-gray-600 font-semibold'>\r\n                                        Upcoming Assignments\r\n                                    </span>\r\n                                    <div\r\n                                        style={{\r\n                                            padding: '0.5rem',\r\n                                            paddingBottom: '1rem',\r\n                                        }}\r\n                                        className='flex flex-col gap-4 overflow-y-auto'\r\n                                    >\r\n                                        {assignments &&\r\n                                            assignments\r\n                                                ?.filter(\r\n                                                    (item) =>\r\n                                                        parseInt(\r\n                                                            moment(item.dateDue).format('DD')\r\n                                                        ) === selectedDay?.day\r\n                                                )\r\n                                                .map((item, index) => {\r\n                                                    return (\r\n                                                        <div\r\n                                                            key={index}\r\n                                                            className='flex flex-col gap-4'\r\n                                                        >\r\n                                                            <div className='shadow-sm hover:shadow-md border transition-all rounded-md flex items-center justify-between cursor-pointer'>\r\n                                                                <div\r\n                                                                    style={{\r\n                                                                        padding: '10px 1rem',\r\n                                                                    }}\r\n                                                                    className='flex flex-col'\r\n                                                                >\r\n                                                                    <span className='text-primary w-[130px] truncate text-base'>\r\n                                                                        {item.assignmentName}\r\n                                                                    </span>\r\n                                                                    <span>Class</span>\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    style={{\r\n                                                                        paddingRight: '1rem',\r\n                                                                    }}\r\n                                                                    className='flex flex-col justify-center items-center'\r\n                                                                >\r\n                                                                    <span className='text-xs'>\r\n                                                                        {selectedDay.day +\r\n                                                                            '-' +\r\n                                                                            moment(\r\n                                                                                selectedDay?.month.toString()\r\n                                                                            ).format('MMM')}\r\n                                                                    </span>\r\n                                                                    <span className='text-x'>\r\n                                                                        {moment(\r\n                                                                            item.dateDue\r\n                                                                        ).format('hh:mm:ss A')}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                    </div>\r\n                                </motion.div>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeacherDashBoard;\r\n"],"names":["classInfo","navigate","useNavigate","image","classroomBackground","console","log","animate","opacity","initial","exit","transition","duration","layout","className","onClick","id","src","classImg","onError","currentTarget","onerror","alt","year","grade","gradeName","refreshToken","localStorage","getItem","axios","API_URL","headers","Authorization","res","data","newInstance","interceptors","request","use","config","accessToken","decodedToken","jwt_decode","exp","Date","now","tokens","setItem","err","axiosJWT","createAxiosJWT","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","moment","locale","useState","selectedDay","setSelectedDay","classes","setClasses","assignments","setAssignments","assignmentDays","setAssignmentsDays","averageScoreClasses","setAverageScoreClasses","useEffect","getClassOfTeacher","get","listClass","listClassDashBoard","slice","getAssignmentOfTeacher","handleDays","getAverageScore","days","i","length","push","parseInt","dateDue","format","month","day","labels","map","averageScoreClass","dataAverageScore","datasets","label","averageScore","borderColor","backgroundColor","responsive","height","width","options","maintainAspectRatio","plugins","legend","position","title","display","text","scales","yAxes","ticks","beginAtZero","min","max","val","index","colorPrimary","value","onChange","calendarClassName","calendarTodayClassName","customDaysClassName","renderFooter","style","paddingLeft","paddingRight","padding","paddingBottom","filter","item","assignmentName","toString"],"sourceRoot":""}